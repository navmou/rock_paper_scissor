(undo-tree-save-format-version . 1)
"5b9b890f7d5aa15924500dbec6a903442ddfa978"
[nil nil nil nil (25192 6703 32328 3000) 0 nil]
([nil nil ((#("#include \"field-read.h\"" 0 1 (fontified t face font-lock-preprocessor-face c-is-sws t) 1 8 (fontified t face font-lock-preprocessor-face) 8 9 (fontified t) 9 23 (fontified t face font-lock-string-face)) . 778) (undo-tree-id4 . -9) (undo-tree-id5 . -10) (undo-tree-id6 . -23) (t 25171 61467 627407 0)) nil (25192 6703 32325 506000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . -777) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 778) nil (25192 6703 32318 472000) 0 nil])
([nil nil ((#("Strainphobic swimmer
    The goal is to train a swimmer that is capable of avoiding high strain regions
    The reward function is defined with a trade-off parameter \\beta in the way that
    \\beta = 1 corresponds to a swimmer with the only goal of avoiding high strain regions
    and \\beta = 0 corresponds to a swimmer with the only goal of swimming in positive 
    vertical direction. Other values of \\beta between 0 and 1 correspond to different 
    combinations of these two goals.
    
    For the state the second order derivatvie of the flow and the absolute value 
    of the flow trSS is used with global information (components in the lab frame)
    " 0 663 (fontified t face font-lock-comment-face c-in-sws t)) . 10) (undo-tree-id8 . -663) (undo-tree-id9 . -663) (undo-tree-id10 . -663) (t 25192 6703 36282 300000)) nil (25192 6730 432256 581000) 0 nil])
([nil nil ((10 . 15)) nil (25192 6730 432248 969000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -14) (undo-tree-id7 . -1) 15) nil (25192 6730 432246 130000) 0 nil])
([nil nil ((14 . 15)) nil (25192 6730 432233 136000) 0 nil])
([nil nil ((15 . 36)) nil (25192 6730 432230 869000) 0 nil])
([nil nil ((36 . 40)) nil (25192 6730 432224 914000) 0 nil])
([nil nil ((40 . 45) (t 25192 6730 440043 800000)) nil (25192 6742 271656 251000) 0 nil])
([nil nil ((45 . 47)) nil (25192 6742 271654 46000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-comment-face)) . -45) (undo-tree-id11 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -46) (undo-tree-id12 . -1) 47) nil (25192 6742 271650 450000) 0 nil])
([nil nil ((45 . 64)) nil (25192 6742 271636 945000) 0 nil])
([nil nil ((64 . 69)) nil (25192 6742 271634 244000) 0 nil])
([nil nil ((69 . 74)) nil (25192 6742 271628 25000) 0 nil])
([nil nil ((503 . 505) (t 25192 6742 275995 500000)) nil (25192 7034 271549 185000) 0 nil])
([nil nil ((505 . 508) (t 25192 7034 275729 100000)) nil (25192 7065 539365 944000) 0 nil])
([nil nil ((505 . 512) (#("one" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -505) (undo-tree-id1 . -3) 508) nil (25192 7065 539365 67000) 0 nil])
([nil nil ((512 . 523)) nil (25192 7065 539362 983000) 0 nil])
([nil nil ((523 . 525)) nil (25192 7065 539362 554000) 0 nil])
([nil nil ((524 . 534)) nil (25192 7065 539362 111000) 0 nil])
([nil nil ((534 . 535)) nil (25192 7065 539361 650000) 0 nil])
([nil nil ((535 . 548)) nil (25192 7065 539361 109000) 0 nil])
([nil nil ((549 . 552)) nil (25192 7065 539360 563000) 0 nil])
([nil nil ((551 . 552) (#("  " 0 2 (fontified nil)) . 550) (undo-tree-id0 . -2) (552 . 553)) nil (25192 7065 539359 554000) 0 nil])
([nil nil ((551 . 555)) nil (25192 7065 539340 360000) 0 nil])
([nil nil ((551 . 554)) nil (25192 7065 539336 784000) 0 nil])
([nil nil ((554 . 567) (t 25192 7065 542997 600000)) nil (25192 7092 465396 632000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -553) (undo-tree-id18 . -1) (#("i" 0 1 (fontified t)) . -554) (undo-tree-id19 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -555) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t)) . -556) (undo-tree-id21 . -1) (#("a" 0 1 (fontified t)) . -557) (undo-tree-id22 . -1) (#("g" 0 1 (fontified t)) . -558) (undo-tree-id23 . -1) (#("e" 0 1 (fontified t)) . -559) (undo-tree-id24 . -1) (#("n" 0 1 (fontified t)) . -560) (undo-tree-id25 . -1) (#("t" 0 1 (fontified t)) . -561) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t)) . -562) (undo-tree-id27 . -1) (#("=" 0 1 (fontified t)) . -563) (undo-tree-id28 . -1) (#("=" 0 1 (fontified t)) . -564) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t)) . -565) (undo-tree-id30 . -1) (#("0" 0 1 (fontified t)) . -566) (undo-tree-id31 . -1) 567) nil (25192 7092 465395 157000) 0 nil])
([nil nil ((553 . 554)) nil (25192 7092 465385 571000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -552) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t)) . -553) (undo-tree-id17 . -1) 554) nil (25192 7092 465384 464000) 0 nil])
([nil nil ((552 . 554)) nil (25192 7092 465382 415000) 0 nil])
([nil nil ((554 . 556)) nil (25192 7092 465382 31000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 558 568 nil nil nil t #s(yas--field 2 569 570 nil nil nil t #s(yas--exit 570 nil))) #s(yas--field 2 569 570 nil nil nil t #s(yas--exit 570 nil))) #s(yas--exit 570 nil) 0 nil #s(yas--field 2 569 570 nil nil nil t #s(yas--exit 570 nil)) nil nil)) (576 . 578) (554 . 577) (#("if" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t)) . 554) (undo-tree-id15 . -2) 556) nil (25192 7092 465381 290000) 0 nil])
([nil nil ((559 . 561) (#("condition" 0 9 (fontified nil)) . 559) (558 . 559)) nil (25192 7092 465379 790000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -559) (undo-tree-id13 . -1) (#("g" 0 1 (fontified t)) . -560) (undo-tree-id14 . -1) 561) nil (25192 7092 465379 40000) 0 nil])
([nil nil ((559 . 568)) nil (25192 7092 465377 211000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -567) (undo-tree-id12 . -1) 568) nil (25192 7092 465376 570000) 0 nil])
([nil nil ((567 . 568)) nil (25192 7092 465374 931000) 0 nil])
([nil nil ((570 . 574) (apply yas--snippet-revive 554 570 #s(yas--snippet nil (#s(yas--field 1 558 568 nil nil nil t #s(yas--field 2 569 570 nil nil nil t #s(yas--exit 570 nil))) #s(yas--field 2 569 570 nil nil nil t #s(yas--exit 570 nil))) #s(yas--exit 570 nil) 0 nil #s(yas--field 2 569 570 nil nil nil t #s(yas--exit 570 nil)) nil nil)) (#(" " 0 1 (fontified nil)) . 569) (undo-tree-id3 . -1) (undo-tree-id4 . 1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("{
    
  }" 0 1 (fontified nil) 1 2 (fontified nil) 2 9 (fontified t) 9 10 (fontified t)) . 571) (undo-tree-id7 . -6) (undo-tree-id8 . 10) (undo-tree-id9 . -1) (undo-tree-id10 . 1) (undo-tree-id11 . -10) (570 . 571)) nil (25192 7092 465373 781000) 0 nil])
([nil nil ((574 . 576)) nil (25192 7092 465367 192000) 0 nil])
([nil nil ((577 . 581) (#("    " 0 4 (fontified nil)) . 576) (undo-tree-id2 . -4) (575 . 581)) nil (25192 7092 465365 875000) 0 nil])
([nil nil ((576 . 582)) nil (25192 7092 465354 279000) 0 nil])
([nil nil ((582 . 584) (t 25192 7092 469825 400000)) nil (25192 7129 940816 452000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 586 599 nil nil nil t #s(yas--field 2 601 612 nil nil nil nil #s(yas--exit 604 nil))) #s(yas--field 2 601 612 nil nil nil nil #s(yas--exit 604 nil))) #s(yas--exit 604 nil) 1 nil #s(yas--field 1 586 599 nil nil nil t #s(yas--field 2 601 612 nil nil nil nil #s(yas--exit 604 nil))) nil nil)) (601 . 607) (599 . 600) (#("    " 0 4 (fontified nil)) . -599) (undo-tree-id44 . -4) (582 . 605) (#("if" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t)) . 582) (undo-tree-id45 . -2) 584) nil (25192 7129 940815 830000) 0 nil])
([nil nil ((587 . 592) (#("condition" 0 9 (fontified nil)) . 587) (586 . 587)) nil (25192 7129 940813 917000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -589) (undo-tree-id41 . -1) (#("n" 0 1 (fontified t)) . -590) (undo-tree-id42 . -1) (#("t" 0 1 (fontified t)) . -591) (undo-tree-id43 . -1) 592) nil (25192 7129 940813 159000) 0 nil])
([nil nil ((586 . 594) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -586) (undo-tree-id40 . -3) 589) nil (25192 7129 940811 354000) 0 nil])
([nil nil ((594 . 599)) nil (25192 7129 940810 414000) 0 nil])
([nil nil ((apply yas--snippet-revive 582 612 #s(yas--snippet nil (#s(yas--field 1 586 599 nil nil nil t #s(yas--field 2 601 612 nil nil nil nil #s(yas--exit 604 nil))) #s(yas--field 2 601 612 nil nil nil nil #s(yas--exit 604 nil))) #s(yas--exit 604 nil) 1 nil #s(yas--field 1 586 599 nil nil nil t #s(yas--field 2 601 612 nil nil nil nil #s(yas--exit 604 nil))) nil nil))) nil (25192 7129 940810 33000) 0 nil])
([nil nil ((602 . 611)) nil (25192 7129 940809 562000) 0 nil])
([nil nil ((611 . 613)) nil (25192 7129 940809 297000) 0 nil])
([nil nil ((612 . 613)) nil (25192 7129 940808 815000) 0 nil])
([nil nil ((613 . 614)) nil (25192 7129 940808 547000) 0 nil])
([nil nil ((614 . 615)) nil (25192 7129 940808 327000) 0 nil])
([nil nil ((551 . 554)) nil (25192 7129 940808 50000) 0 nil])
([nil nil ((554 . 559)) nil (25192 7129 940807 745000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -554) (undo-tree-id34 . -1) (undo-tree-id35 . 1) (#("t" 0 1 (fontified t)) . -555) (undo-tree-id36 . -1) (#("a" 0 1 (fontified t)) . -556) (undo-tree-id37 . -1) (#("t" 0 1 (fontified t)) . -557) (undo-tree-id38 . -1) (#("e" 0 1 (fontified t)) . -558) (undo-tree-id39 . -1) 559) nil (25192 7129 940807 3000) 0 nil])
([nil nil ((554 . 557)) nil (25192 7129 940803 848000) 0 nil])
([nil nil ((554 . 561) (#("one" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -554) (undo-tree-id32 . -3) (undo-tree-id33 . 3) 557) nil (25192 7129 940803 200000) 0 nil])
([nil nil ((561 . 568)) nil (25192 7129 940795 264000) 0 nil])
([nil nil ((568 . 570)) nil (25192 7129 940794 895000) 0 nil])
([nil nil ((569 . 570)) nil (25192 7129 940794 321000) 0 nil])
([nil nil ((571 . 572)) nil (25192 7129 940791 347000) 0 nil])
([nil nil ((637 . 638) (t 25192 7129 943391 400000)) nil (25192 7133 309365 305000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 638) (#(" " 0 1 (fontified t)) . 638) (#(" " 0 1 (fontified t)) . 638) (#(" " 0 1 (fontified t)) . 638) (#(" " 0 1 (fontified t)) . 638) (#(" " 0 1 (fontified t)) . 638) (#("
" 0 1 (fontified t)) . 638) (#("	" 0 1 (fontified t)) . 638) (#("
" 0 1 (fontified t)) . 638) (t 25192 7133 313059 200000)) nil (25192 7138 133201 237000) 0 nil])
([nil nil ((503 . 517) (t 25192 7138 136668 400000)) nil (25192 7168 260997 24000) 0 nil])
([nil nil ((517 . 518)) nil (25192 7168 260996 236000) 0 nil])
([nil nil ((518 . 522)) nil (25192 7168 260995 593000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -521) (undo-tree-id48 . -1) 522) nil (25192 7168 260994 960000) 0 nil])
([nil nil ((521 . 522)) nil (25192 7168 260994 71000) 0 nil])
([nil nil ((522 . 526)) nil (25192 7168 260993 628000) 0 nil])
([nil nil ((523 . 530) (#("one" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t)) . -523) (undo-tree-id46 . -3) (undo-tree-id47 . 3) 526) nil (25192 7168 260992 787000) 0 nil])
([nil nil ((530 . 534)) nil (25192 7168 260984 858000) 0 nil])
([nil nil ((534 . 535)) nil (25192 7168 260982 24000) 0 nil])
([nil nil ((544 . 548) (t 25192 7168 264597 300000)) nil (25192 7178 989126 874000) 0 nil])
([nil nil ((597 . 601)) nil (25192 7178 989123 964000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -669) (undo-tree-id51 . -1) (#("=" 0 1 (fontified t)) . -670) (undo-tree-id52 . -1) (#(" " 0 1 (fontified t)) . -671) (undo-tree-id53 . -1) (#("[" 0 1 (fontified t)) . -672) (undo-tree-id54 . -1) 673 (t 25192 7178 991763 800000)) nil (25192 7210 807587 776000) 0 nil])
([nil nil ((669 . 671)) nil (25192 7210 807583 895000) 0 nil])
([nil nil ((670 . 671)) nil (25192 7210 807583 417000) 0 nil])
([nil nil ((672 . 676)) nil (25192 7210 807582 952000) 0 nil])
([nil nil ((676 . 677)) nil (25192 7210 807582 569000) 0 nil])
([nil nil ((677 . 685)) nil (25192 7210 807582 28000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -684) (undo-tree-id50 . -1) 685) nil (25192 7210 807581 310000) 0 nil])
([nil nil ((684 . 689)) nil (25192 7210 807579 815000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -688) (undo-tree-id49 . -1) 689) nil (25192 7210 807578 716000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 688) (#("2" 0 1 (fontified t)) . 688)) nil (25192 7210 807569 709000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . 689)) nil (25192 7210 807565 796000) 0 nil])
([nil nil ((691 . 698) (t 25192 7210 811579 900000)) nil (25192 7236 654274 51000) 0 nil])
([nil nil ((698 . 702)) nil (25192 7236 654273 589000) 0 nil])
([nil nil ((702 . 703) (#(" x" 0 2 (fontified nil)) . -702) (702 . 704) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 702) (undo-tree-id60 . -4) (698 . 702) 702) nil (25192 7236 654272 899000) 0 nil])
([nil nil ((703 . 705)) nil (25192 7236 654271 521000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 707 720 nil nil nil t #s(yas--field 2 722 733 nil nil nil nil #s(yas--exit 725 nil))) #s(yas--field 2 722 733 nil nil nil nil #s(yas--exit 725 nil))) #s(yas--exit 725 nil) 2 nil #s(yas--field 1 707 720 nil nil nil t #s(yas--field 2 722 733 nil nil nil nil #s(yas--exit 725 nil))) nil nil)) (722 . 728) (720 . 721) (#("    " 0 4 (fontified nil)) . -720) (undo-tree-id58 . -4) (703 . 726) (#("if" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t)) . 703) (undo-tree-id59 . -2) 705) nil (25192 7236 654271 2000) 0 nil])
([nil nil ((708 . 710) (#("condition" 0 9 (fontified nil)) . 708) (707 . 708)) nil (25192 7236 654268 899000) 0 nil])
([nil nil ((707 . 715) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -707) (undo-tree-id57 . -3) 710) nil (25192 7236 654268 166000) 0 nil])
([nil nil ((715 . 720)) nil (25192 7236 654267 52000) 0 nil])
([nil nil ((apply yas--snippet-revive 703 733 #s(yas--snippet nil (#s(yas--field 1 707 720 nil nil nil t #s(yas--field 2 722 733 nil nil nil nil #s(yas--exit 725 nil))) #s(yas--field 2 722 733 nil nil nil nil #s(yas--exit 725 nil))) #s(yas--exit 725 nil) 2 nil #s(yas--field 1 707 720 nil nil nil t #s(yas--field 2 722 733 nil nil nil nil #s(yas--exit 725 nil))) nil nil))) nil (25192 7236 654266 819000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 723) (#(" " 0 1 (fontified t)) . 723) (#(" " 0 1 (fontified t)) . 723) (#(" " 0 1 (fontified t)) . 723) (#(" " 0 1 (fontified t)) . 723) (#(" " 0 1 (fontified t)) . 723) (#("
" 0 1 (fontified t)) . 723) (#("	" 0 1 (fontified t)) . 723) (#("
" 0 1 (fontified t)) . 723)) nil (25192 7236 654265 907000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 663)) nil (25192 7236 654264 968000) 0 nil])
([nil nil ((#("state[0] = 2; state[1] =0;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 663) (undo-tree-id55 . -26) (undo-tree-id56 . -26) 689) nil (25192 7236 654264 315000) 0 nil])
([nil nil ((nil rear-nonsticky nil 688 . 689) (nil fontified nil 688 . 689) (nil fontified nil 687 . 688) (nil fontified nil 686 . 687) (nil fontified nil 685 . 686) (nil fontified nil 684 . 685) (nil fontified nil 683 . 684) (nil fontified nil 682 . 683) (nil fontified nil 681 . 682) (nil fontified nil 680 . 681) (nil fontified nil 679 . 680) (nil fontified nil 678 . 679) (nil fontified nil 677 . 678) (nil fontified nil 676 . 677) (nil fontified nil 675 . 676) (nil fontified nil 674 . 675) (nil fontified nil 673 . 674) (nil fontified nil 672 . 673) (nil fontified nil 671 . 672) (nil fontified nil 670 . 671) (nil fontified nil 669 . 670) (nil fontified nil 668 . 669) (nil fontified nil 667 . 668) (nil fontified nil 666 . 667) (nil fontified nil 665 . 666) (nil fontified nil 664 . 665) (nil fontified nil 663 . 664) (663 . 689)) nil (25192 7236 654255 889000) 0 nil])
([nil nil ((nil rear-nonsticky nil 747 . 748) (nil fontified nil 747 . 748) (nil fontified nil 746 . 747) (nil fontified nil 745 . 746) (nil fontified nil 744 . 745) (nil fontified nil 743 . 744) (nil fontified nil 742 . 743) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 736 . 737) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 733 . 734) (nil fontified nil 732 . 733) (nil fontified nil 731 . 732) (nil fontified nil 730 . 731) (nil fontified nil 729 . 730) (nil fontified nil 728 . 729) (nil fontified nil 727 . 728) (nil fontified nil 726 . 727) (nil fontified nil 725 . 726) (nil fontified nil 724 . 725) (nil fontified nil 723 . 724) (nil fontified nil 722 . 723) (722 . 748)) nil (25192 7236 654251 558000) 0 nil])
([nil nil ((#("      else if (opponent == 1) {state[0] = 2; state[1] =0;}" 0 6 (fontified t) 6 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 13 (face font-lock-keyword-face fontified t) 13 15 (fontified t) 15 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (rear-nonsticky t fontified t) 57 58 (fontified t)) . 691) (undo-tree-id65 . -58) (undo-tree-id66 . -15) (undo-tree-id67 . -31) (undo-tree-id68 . -58) (t 25192 7236 657790 800000)) nil (25192 7264 191191 974000) 0 nil])
([nil nil ((nil rear-nonsticky nil 748 . 749) (nil fontified nil 748 . 749) (nil fontified nil 747 . 748) (nil fontified nil 746 . 747) (nil fontified nil 745 . 746) (nil fontified nil 744 . 745) (nil fontified nil 743 . 744) (nil fontified nil 742 . 743) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 736 . 737) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 733 . 734) (nil fontified nil 732 . 733) (nil fontified nil 731 . 732) (nil fontified nil 730 . 731) (nil fontified nil 729 . 730) (nil fontified nil 728 . 729) (nil fontified nil 727 . 728) (nil fontified nil 726 . 727) (nil fontified nil 725 . 726) (nil fontified nil 724 . 725) (nil fontified nil 723 . 724) (nil fontified nil 722 . 723) (nil fontified nil 721 . 722) (nil fontified nil 719 . 721) (nil fontified nil 718 . 719) (nil fontified nil 717 . 718) (nil fontified nil 716 . 717) (nil fontified nil 715 . 716) (nil fontified nil 714 . 715) (nil fontified nil 706 . 714) (nil fontified nil 704 . 706) (nil fontified nil 702 . 704) (nil fontified nil 701 . 702) (nil fontified nil 697 . 701) (nil fontified nil 691 . 697) (691 . 749)) nil (25192 7264 191188 163000) 0 nil])
([nil nil ((749 . 756)) nil (25192 7264 191185 29000) 0 nil])
([nil nil ((nil rear-nonsticky nil 813 . 814) (nil fontified nil 813 . 814) (nil fontified nil 812 . 813) (nil fontified nil 811 . 812) (nil fontified nil 810 . 811) (nil fontified nil 809 . 810) (nil fontified nil 808 . 809) (nil fontified nil 807 . 808) (nil fontified nil 806 . 807) (nil fontified nil 805 . 806) (nil fontified nil 804 . 805) (nil fontified nil 803 . 804) (nil fontified nil 802 . 803) (nil fontified nil 801 . 802) (nil fontified nil 800 . 801) (nil fontified nil 799 . 800) (nil fontified nil 798 . 799) (nil fontified nil 797 . 798) (nil fontified nil 796 . 797) (nil fontified nil 795 . 796) (nil fontified nil 794 . 795) (nil fontified nil 793 . 794) (nil fontified nil 792 . 793) (nil fontified nil 791 . 792) (nil fontified nil 790 . 791) (nil fontified nil 789 . 790) (nil fontified nil 788 . 789) (nil fontified nil 787 . 788) (nil fontified nil 786 . 787) (nil fontified nil 784 . 786) (nil fontified nil 783 . 784) (nil fontified nil 782 . 783) (nil fontified nil 781 . 782) (nil fontified nil 780 . 781) (nil fontified nil 779 . 780) (nil fontified nil 771 . 779) (nil fontified nil 769 . 771) (nil fontified nil 767 . 769) (nil fontified nil 766 . 767) (nil fontified nil 762 . 766) (nil fontified nil 756 . 762) (756 . 814)) nil (25192 7264 191183 777000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 750) (#(" " 0 1 (fontified t)) . 750) (#(" " 0 1 (fontified t)) . 750) (#(" " 0 1 (fontified t)) . 750)) nil (25192 7264 191180 357000) 0 nil])
([nil nil ((750 . 756) (#("        " 0 2 (fontified t) 2 8 (fontified t)) . 750) (undo-tree-id64 . -2)) nil (25192 7264 191179 543000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 756) (#("f" 0 1 (fontified t)) . 756) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . 756) (#(" " 0 1 (fontified t)) . 756) (#("e" 0 1 (fontified t)) . 756) (#("s" 0 1 (fontified t)) . 756) (#("l" 0 1 (fontified t)) . 756) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . 756)) nil (25192 7264 191177 738000) 0 nil])
([nil nil ((756 . 760)) nil (25192 7264 191176 501000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 760) (undo-tree-id61 . -1) (#("1" 0 1 (fontified t)) . 760) (#(" " 0 1 (fontified t)) . 760) (#("=" 0 1 (fontified t)) . 760) (#("=" 0 1 (fontified t)) . 760) (#(" " 0 1 (fontified t)) . 760) (#("t" 0 1 (fontified t)) . 760) (#("n" 0 1 (fontified t)) . 760) (#("e" 0 1 (fontified t)) . 760) (#("n" 0 1 (fontified t)) . 760) (#("o" 0 1 (fontified t)) . 760) (#("p" 0 1 (fontified nil)) . 760) (#("p" 0 1 (fontified t)) . 760) (#("o" 0 1 (fontified t)) . 760) (#("(" 0 1 (fontified t)) . 760) (undo-tree-id62 . 1) (undo-tree-id63 . -1)) nil (25192 7264 191173 166000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 728) (t 25192 7264 195246 800000)) nil (25192 7289 990068 459000) 0 nil])
([nil nil ((728 . 729)) nil (25192 7289 990067 858000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 728)) nil (25192 7289 990066 997000) 0 nil])
([nil nil ((728 . 729)) nil (25192 7289 990066 582000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 733)) nil (25192 7289 990066 216000) 0 nil])
([nil nil ((733 . 734)) nil (25192 7289 990065 848000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 746)) nil (25192 7289 990065 315000) 0 nil])
([nil nil ((746 . 747)) nil (25192 7289 990064 734000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -744) (undo-tree-id69 . -1) 745) nil (25192 7289 990062 403000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -685) (undo-tree-id70 . -1) 686 (t 25192 7289 994014 700000)) nil (25192 7296 981421 197000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 671)) nil (25192 7296 981413 380000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 672)) nil (25192 7296 981412 791000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 727)) nil (25192 7296 981411 906000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 728)) nil (25192 7296 981408 662000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 778) (t 25192 7296 984811 100000)) nil (25192 7303 589876 120000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 764) (#("=" 0 1 (fontified t)) . 764) (#(" " 0 1 (fontified t)) . 764)) nil (25192 7303 589875 140000) 0 nil])
([nil nil ((764 . 765)) nil (25192 7303 589872 146000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 765) (t 25192 7303 593482 200000)) nil (25192 7310 254626 263000) 0 nil])
([nil nil ((765 . 766)) nil (25192 7310 254625 710000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 777)) nil (25192 7310 254624 981000) 0 nil])
([nil nil ((777 . 778)) nil (25192 7310 254622 219000) 0 nil])
([nil nil ((#("    {
      if (opponent == 0) {state[0]=2; state[1]=0;}
      else if (opponent == 1) {state[0]=1; state[1]=1;}
      else {state[0]=0; state[1]=2;}
    }" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 12 (fontified t) 12 14 (face font-lock-keyword-face fontified t) 14 16 (fontified t) 16 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (rear-nonsticky t fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 63 (fontified t) 63 67 (face font-lock-keyword-face fontified t) 67 68 (fontified t) 68 70 (face font-lock-keyword-face fontified t) 70 72 (fontified t) 72 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t rear-nonsticky t) 111 112 (fontified t rear-nonsticky t) 112 113 (fontified t) 113 119 (fontified t) 119 120 (face font-lock-keyword-face fontified t) 120 121 (face font-lock-keyword-face fontified t) 121 122 (face font-lock-keyword-face fontified t) 122 123 (face font-lock-keyword-face fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 140 (fontified t) 140 141 (fontified t) 141 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t rear-nonsticky t) 148 149 (fontified t rear-nonsticky t) 149 150 (fontified t) 150 154 (fontified t) 154 155 (fontified t)) . 631) (undo-tree-id77 . -155) (undo-tree-id78 . -57) (undo-tree-id79 . -32) (undo-tree-id80 . -32) (undo-tree-id81 . -32) (undo-tree-id82 . -57) (undo-tree-id83 . -57) (undo-tree-id84 . -57) (undo-tree-id85 . -113) (undo-tree-id86 . -155) (t 25192 7310 258308 500000)) nil (25192 7339 135764 886000) 0 nil])
([nil nil ((nil rear-nonsticky nil 785 . 786) (nil fontified nil 785 . 786) (nil fontified nil 781 . 785) (nil fontified nil 780 . 781) (nil fontified nil 779 . 780) (nil fontified nil 778 . 779) (nil fontified nil 777 . 778) (nil fontified nil 776 . 777) (nil fontified nil 775 . 776) (nil fontified nil 774 . 775) (nil fontified nil 773 . 774) (nil fontified nil 772 . 773) (nil fontified nil 771 . 772) (nil fontified nil 770 . 771) (nil fontified nil 769 . 770) (nil fontified nil 768 . 769) (nil fontified nil 767 . 768) (nil fontified nil 766 . 767) (nil fontified nil 765 . 766) (nil fontified nil 764 . 765) (nil fontified nil 763 . 764) (nil fontified nil 762 . 763) (nil fontified nil 761 . 762) (nil fontified nil 760 . 761) (nil fontified nil 759 . 760) (nil fontified nil 758 . 759) (nil fontified nil 757 . 758) (nil fontified nil 756 . 757) (nil fontified nil 755 . 756) (nil fontified nil 754 . 755) (nil fontified nil 753 . 754) (nil fontified nil 752 . 753) (nil fontified nil 751 . 752) (nil fontified nil 750 . 751) (nil fontified nil 744 . 750) (nil fontified nil 743 . 744) (nil fontified nil 742 . 743) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 736 . 737) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 733 . 734) (nil fontified nil 732 . 733) (nil fontified nil 731 . 732) (nil fontified nil 730 . 731) (nil fontified nil 729 . 730) (nil fontified nil 728 . 729) (nil fontified nil 727 . 728) (nil fontified nil 726 . 727) (nil fontified nil 725 . 726) (nil fontified nil 724 . 725) (nil fontified nil 723 . 724) (nil fontified nil 722 . 723) (nil fontified nil 721 . 722) (nil fontified nil 720 . 721) (nil fontified nil 719 . 720) (nil fontified nil 718 . 719) (nil fontified nil 716 . 718) (nil fontified nil 715 . 716) (nil fontified nil 714 . 715) (nil fontified nil 713 . 714) (nil fontified nil 712 . 713) (nil fontified nil 711 . 712) (nil fontified nil 703 . 711) (nil fontified nil 701 . 703) (nil fontified nil 699 . 701) (nil fontified nil 698 . 699) (nil fontified nil 694 . 698) (nil fontified nil 688 . 694) (nil fontified nil 687 . 688) (nil fontified nil 686 . 687) (nil fontified nil 685 . 686) (nil fontified nil 684 . 685) (nil fontified nil 683 . 684) (nil fontified nil 682 . 683) (nil fontified nil 681 . 682) (nil fontified nil 680 . 681) (nil fontified nil 679 . 680) (nil fontified nil 678 . 679) (nil fontified nil 677 . 678) (nil fontified nil 676 . 677) (nil fontified nil 675 . 676) (nil fontified nil 674 . 675) (nil fontified nil 673 . 674) (nil fontified nil 672 . 673) (nil fontified nil 671 . 672) (nil fontified nil 670 . 671) (nil fontified nil 669 . 670) (nil fontified nil 668 . 669) (nil fontified nil 667 . 668) (nil fontified nil 666 . 667) (nil fontified nil 665 . 666) (nil fontified nil 664 . 665) (nil fontified nil 663 . 664) (nil fontified nil 662 . 663) (nil fontified nil 660 . 662) (nil fontified nil 659 . 660) (nil fontified nil 658 . 659) (nil fontified nil 657 . 658) (nil fontified nil 656 . 657) (nil fontified nil 655 . 656) (nil fontified nil 647 . 655) (nil fontified nil 645 . 647) (nil fontified nil 643 . 645) (nil fontified nil 637 . 643) (nil fontified nil 636 . 637) (nil fontified nil 635 . 636) (nil fontified nil 631 . 635) (631 . 786)) nil (25192 7339 135758 473000) 0 nil])
([nil nil ((786 . 789)) nil (25192 7339 135751 524000) 0 nil])
([nil nil ((789 . 793)) nil (25192 7339 135751 61000) 0 nil])
([nil nil ((793 . 794) (#(" x" 0 2 (fontified nil)) . -793) (793 . 795) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 793) (undo-tree-id76 . -4) (789 . 793) 793) nil (25192 7339 135750 505000) 0 nil])
([nil nil ((794 . 796)) nil (25192 7339 135749 396000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 798 807 nil nil nil t #s(yas--field 2 809 819 nil nil nil nil #s(yas--exit 815 nil))) #s(yas--field 2 809 819 nil nil nil nil #s(yas--exit 815 nil))) #s(yas--exit 815 nil) 3 nil #s(yas--field 1 798 807 nil nil nil t #s(yas--field 2 809 819 nil nil nil nil #s(yas--exit 815 nil))) nil nil)) (816 . 818) (794 . 817) (#("if" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t)) . 794) (undo-tree-id75 . -2) 796) nil (25192 7339 135748 792000) 0 nil])
([nil nil ((799 . 804) (#("condition" 0 9 (fontified nil)) . 799) (798 . 799)) nil (25192 7339 135746 272000) 0 nil])
([nil nil ((804 . 807)) nil (25192 7339 135745 688000) 0 nil])
([nil nil ((apply yas--snippet-revive 794 819 #s(yas--snippet nil (#s(yas--field 1 798 807 nil nil nil t #s(yas--field 2 809 819 nil nil nil nil #s(yas--exit 815 nil))) #s(yas--field 2 809 819 nil nil nil nil #s(yas--exit 815 nil))) #s(yas--exit 815 nil) 3 nil #s(yas--field 1 798 807 nil nil nil t #s(yas--field 2 809 819 nil nil nil nil #s(yas--exit 815 nil))) nil nil))) nil (25192 7339 135745 257000) 0 nil])
([nil nil ((809 . 813) (#(" " 0 1 (fontified nil)) . 808) (undo-tree-id74 . -1) (809 . 810)) nil (25192 7339 135744 770000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -813) (undo-tree-id73 . -1) 814) nil (25192 7339 135743 615000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 813) (#(" " 0 1 (fontified t)) . 813) (#(" " 0 1 (fontified t)) . 813) (#("
" 0 1 (fontified t)) . 813) (#(" " 0 1 (fontified t)) . 813) (#(" " 0 1 (fontified t)) . 813) (#(" " 0 1 (fontified t)) . 813) (#(" " 0 1 (fontified t)) . 813) (#("
" 0 1 (fontified t)) . 813)) nil (25192 7339 135742 12000) 0 nil])
([nil nil ((nil rear-nonsticky nil 967 . 968) (nil fontified nil 967 . 968) (nil fontified nil 963 . 967) (nil fontified nil 962 . 963) (nil fontified nil 961 . 962) (nil fontified nil 960 . 961) (nil fontified nil 959 . 960) (nil fontified nil 958 . 959) (nil fontified nil 957 . 958) (nil fontified nil 956 . 957) (nil fontified nil 955 . 956) (nil fontified nil 954 . 955) (nil fontified nil 953 . 954) (nil fontified nil 952 . 953) (nil fontified nil 951 . 952) (nil fontified nil 950 . 951) (nil fontified nil 949 . 950) (nil fontified nil 948 . 949) (nil fontified nil 947 . 948) (nil fontified nil 946 . 947) (nil fontified nil 945 . 946) (nil fontified nil 944 . 945) (nil fontified nil 943 . 944) (nil fontified nil 942 . 943) (nil fontified nil 941 . 942) (nil fontified nil 940 . 941) (nil fontified nil 939 . 940) (nil fontified nil 938 . 939) (nil fontified nil 937 . 938) (nil fontified nil 936 . 937) (nil fontified nil 935 . 936) (nil fontified nil 934 . 935) (nil fontified nil 933 . 934) (nil fontified nil 932 . 933) (nil fontified nil 926 . 932) (nil fontified nil 925 . 926) (nil fontified nil 924 . 925) (nil fontified nil 923 . 924) (nil fontified nil 922 . 923) (nil fontified nil 921 . 922) (nil fontified nil 920 . 921) (nil fontified nil 919 . 920) (nil fontified nil 918 . 919) (nil fontified nil 917 . 918) (nil fontified nil 916 . 917) (nil fontified nil 915 . 916) (nil fontified nil 914 . 915) (nil fontified nil 913 . 914) (nil fontified nil 912 . 913) (nil fontified nil 911 . 912) (nil fontified nil 910 . 911) (nil fontified nil 909 . 910) (nil fontified nil 908 . 909) (nil fontified nil 907 . 908) (nil fontified nil 906 . 907) (nil fontified nil 905 . 906) (nil fontified nil 904 . 905) (nil fontified nil 903 . 904) (nil fontified nil 902 . 903) (nil fontified nil 901 . 902) (nil fontified nil 900 . 901) (nil fontified nil 898 . 900) (nil fontified nil 897 . 898) (nil fontified nil 896 . 897) (nil fontified nil 895 . 896) (nil fontified nil 894 . 895) (nil fontified nil 893 . 894) (nil fontified nil 885 . 893) (nil fontified nil 883 . 885) (nil fontified nil 881 . 883) (nil fontified nil 880 . 881) (nil fontified nil 876 . 880) (nil fontified nil 870 . 876) (nil fontified nil 869 . 870) (nil fontified nil 868 . 869) (nil fontified nil 867 . 868) (nil fontified nil 866 . 867) (nil fontified nil 865 . 866) (nil fontified nil 864 . 865) (nil fontified nil 863 . 864) (nil fontified nil 862 . 863) (nil fontified nil 861 . 862) (nil fontified nil 860 . 861) (nil fontified nil 859 . 860) (nil fontified nil 858 . 859) (nil fontified nil 857 . 858) (nil fontified nil 856 . 857) (nil fontified nil 855 . 856) (nil fontified nil 854 . 855) (nil fontified nil 853 . 854) (nil fontified nil 852 . 853) (nil fontified nil 851 . 852) (nil fontified nil 850 . 851) (nil fontified nil 849 . 850) (nil fontified nil 848 . 849) (nil fontified nil 847 . 848) (nil fontified nil 846 . 847) (nil fontified nil 845 . 846) (nil fontified nil 844 . 845) (nil fontified nil 842 . 844) (nil fontified nil 841 . 842) (nil fontified nil 840 . 841) (nil fontified nil 839 . 840) (nil fontified nil 838 . 839) (nil fontified nil 837 . 838) (nil fontified nil 829 . 837) (nil fontified nil 827 . 829) (nil fontified nil 825 . 827) (nil fontified nil 819 . 825) (nil fontified nil 818 . 819) (nil fontified nil 817 . 818) (nil fontified nil 813 . 817) (813 . 968)) nil (25192 7339 135739 655000) 0 nil])
([nil nil ((963 . 964) (#("    " 0 4 (fontified t)) . 963) 968) nil (25192 7339 135733 688000) 0 nil])
([nil nil ((809 . 813) (#("        " 0 4 (fontified t) 4 8 (fontified t)) . 809) (undo-tree-id71 . -4) (undo-tree-id72 . -4) 818) nil (25192 7339 135732 763000) 0 nil])
([nil nil ((959 . 963) (#("	" 0 1 (fontified t)) . 959)) nil (25192 7339 135722 503000) 0 nil])
([nil nil ((964 . 967) (t 25192 7339 140077 300000)) nil (25192 7351 16926 767000) 0 nil])
([nil nil ((967 . 971)) nil (25192 7351 16926 343000) 0 nil])
([nil nil ((971 . 976) (#(" x" 0 2 (fontified nil)) . -971) (971 . 973) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 971) (undo-tree-id92 . -4) (967 . 971) 971) nil (25192 7351 16925 611000) 0 nil])
([nil nil ((976 . 978)) nil (25192 7351 16924 366000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1131 . 1132) (nil fontified nil 1131 . 1132) (nil fontified nil 1127 . 1131) (nil fontified nil 1126 . 1127) (nil fontified nil 1125 . 1126) (nil fontified nil 1124 . 1125) (nil fontified nil 1123 . 1124) (nil fontified nil 1122 . 1123) (nil fontified nil 1121 . 1122) (nil fontified nil 1120 . 1121) (nil fontified nil 1119 . 1120) (nil fontified nil 1118 . 1119) (nil fontified nil 1117 . 1118) (nil fontified nil 1116 . 1117) (nil fontified nil 1115 . 1116) (nil fontified nil 1114 . 1115) (nil fontified nil 1113 . 1114) (nil fontified nil 1112 . 1113) (nil fontified nil 1111 . 1112) (nil fontified nil 1110 . 1111) (nil fontified nil 1109 . 1110) (nil fontified nil 1108 . 1109) (nil fontified nil 1107 . 1108) (nil fontified nil 1106 . 1107) (nil fontified nil 1105 . 1106) (nil fontified nil 1104 . 1105) (nil fontified nil 1103 . 1104) (nil fontified nil 1102 . 1103) (nil fontified nil 1101 . 1102) (nil fontified nil 1100 . 1101) (nil fontified nil 1099 . 1100) (nil fontified nil 1098 . 1099) (nil fontified nil 1097 . 1098) (nil fontified nil 1096 . 1097) (nil fontified nil 1090 . 1096) (nil fontified nil 1089 . 1090) (nil fontified nil 1088 . 1089) (nil fontified nil 1087 . 1088) (nil fontified nil 1086 . 1087) (nil fontified nil 1085 . 1086) (nil fontified nil 1084 . 1085) (nil fontified nil 1083 . 1084) (nil fontified nil 1082 . 1083) (nil fontified nil 1081 . 1082) (nil fontified nil 1080 . 1081) (nil fontified nil 1079 . 1080) (nil fontified nil 1078 . 1079) (nil fontified nil 1077 . 1078) (nil fontified nil 1076 . 1077) (nil fontified nil 1075 . 1076) (nil fontified nil 1074 . 1075) (nil fontified nil 1073 . 1074) (nil fontified nil 1072 . 1073) (nil fontified nil 1071 . 1072) (nil fontified nil 1070 . 1071) (nil fontified nil 1069 . 1070) (nil fontified nil 1068 . 1069) (nil fontified nil 1067 . 1068) (nil fontified nil 1066 . 1067) (nil fontified nil 1065 . 1066) (nil fontified nil 1064 . 1065) (nil fontified nil 1062 . 1064) (nil fontified nil 1061 . 1062) (nil fontified nil 1060 . 1061) (nil fontified nil 1059 . 1060) (nil fontified nil 1058 . 1059) (nil fontified nil 1057 . 1058) (nil fontified nil 1049 . 1057) (nil fontified nil 1047 . 1049) (nil fontified nil 1045 . 1047) (nil fontified nil 1044 . 1045) (nil fontified nil 1040 . 1044) (nil fontified nil 1034 . 1040) (nil fontified nil 1033 . 1034) (nil fontified nil 1032 . 1033) (nil fontified nil 1031 . 1032) (nil fontified nil 1030 . 1031) (nil fontified nil 1029 . 1030) (nil fontified nil 1028 . 1029) (nil fontified nil 1027 . 1028) (nil fontified nil 1026 . 1027) (nil fontified nil 1025 . 1026) (nil fontified nil 1024 . 1025) (nil fontified nil 1023 . 1024) (nil fontified nil 1022 . 1023) (nil fontified nil 1021 . 1022) (nil fontified nil 1020 . 1021) (nil fontified nil 1019 . 1020) (nil fontified nil 1018 . 1019) (nil fontified nil 1017 . 1018) (nil fontified nil 1016 . 1017) (nil fontified nil 1015 . 1016) (nil fontified nil 1014 . 1015) (nil fontified nil 1013 . 1014) (nil fontified nil 1012 . 1013) (nil fontified nil 1011 . 1012) (nil fontified nil 1010 . 1011) (nil fontified nil 1009 . 1010) (nil fontified nil 1008 . 1009) (nil fontified nil 1006 . 1008) (nil fontified nil 1005 . 1006) (nil fontified nil 1004 . 1005) (nil fontified nil 1003 . 1004) (nil fontified nil 1002 . 1003) (nil fontified nil 1001 . 1002) (nil fontified nil 993 . 1001) (nil fontified nil 991 . 993) (nil fontified nil 989 . 991) (nil fontified nil 983 . 989) (nil fontified nil 982 . 983) (nil fontified nil 981 . 982) (nil fontified nil 977 . 981) (977 . 1132)) nil (25192 7351 16922 289000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -976) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 977) nil (25192 7351 16915 689000) 0 nil])
([nil nil ((972 . 976) (#("        " 0 4 (fontified t) 4 8 (fontified t)) . 972) (undo-tree-id88 . -4) (undo-tree-id89 . -4) 976) nil (25192 7351 16913 744000) 0 nil])
([nil nil ((#("}" 0 1 (rear-nonsticky t fontified t)) . 1126) (undo-tree-id87 . -1)) nil (25192 7351 16909 888000) 0 nil])
([nil nil ((801 . 802) (t 25192 7351 21653 100000)) nil (25192 7356 759398 749000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 851) (t 25192 7356 763520 400000)) nil (25192 7379 705314 954000) 0 nil])
([nil nil ((851 . 852)) nil (25192 7379 705314 203000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 907)) nil (25192 7379 705313 617000) 0 nil])
([nil nil ((907 . 908)) nil (25192 7379 705312 911000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 944)) nil (25192 7379 705311 443000) 0 nil])
([nil nil ((944 . 945)) nil (25192 7379 705307 578000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 1014) (t 25192 7379 710757 100000)) nil (25192 7398 805665 733000) 0 nil])
([nil nil ((1014 . 1015)) nil (25192 7398 805664 795000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1070)) nil (25192 7398 805664 147000) 0 nil])
([nil nil ((1070 . 1071)) nil (25192 7398 805663 472000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1107)) nil (25192 7398 805661 767000) 0 nil])
([nil nil ((1107 . 1108)) nil (25192 7398 805658 420000) 0 nil])
([nil nil ((1129 . 1131) (t 25192 7398 811593 0)) nil (25192 7405 902123 641000) 0 nil])
([nil nil ((1131 . 1143)) nil (25192 7405 902122 856000) 0 nil])
([nil nil ((1143 . 1144)) nil (25192 7405 902120 117000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1145) (#("
" 0 1 (fontified t)) . 1145) (t 25192 7405 906309 400000)) nil (25192 7408 366620 572000) 0 nil])
([nil nil ((1146 . 1147) (t 25192 7408 371050 500000)) nil (25192 7410 54248 822000) 0 nil])
([nil nil ((1147 . 1149) (t 25192 7410 58499 500000)) nil (25192 7411 208293 783000) 0 nil])
([nil nil ((1148 . 1157) (t 25192 7411 213126 300000)) nil (25192 7428 324830 985000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -1156) (undo-tree-id95 . -1) 1157) nil (25192 7428 324830 500000) 0 nil])
([nil nil ((1156 . 1158)) nil (25192 7428 324829 627000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1157) (undo-tree-id94 . -1) 1158) nil (25192 7428 324829 116000) 0 nil])
([nil nil ((1157 . 1159)) nil (25192 7428 324827 994000) 0 nil])
([nil nil ((1159 . 1162)) nil (25192 7428 324827 509000) 0 nil])
([nil nil ((1161 . 1162) (#("  " 0 2 (fontified nil)) . 1160) (undo-tree-id93 . -2) (1162 . 1163)) nil (25192 7428 324826 623000) 0 nil])
([nil nil ((1161 . 1163)) nil (25192 7428 324816 785000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1148) (#("n" 0 1 (face font-lock-type-face fontified t)) . 1148) (#("i" 0 1 (face font-lock-type-face fontified t)) . 1148) (t 25192 7428 329026 900000)) nil (25192 7442 766828 619000) 0 nil])
([nil nil ((1148 . 1155)) nil (25192 7442 766827 866000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1154) (undo-tree-id96 . -1) 1155) nil (25192 7442 766825 456000) 0 nil])
([nil nil ((1161 . 1165) (t 25192 7442 771088 900000)) nil (25192 7450 495915 557000) 0 nil])
([nil nil ((1165 . 1166)) nil (25192 7450 495912 586000) 0 nil])
([nil nil ((1161 . 1164) (t 25192 7450 500267 400000)) nil (25192 7457 463701 449000) 0 nil])
([nil nil ((1161 . 1168) (#("one" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1161) (undo-tree-id99 . -3) (undo-tree-id100 . 3) 1164) nil (25192 7457 463700 753000) 0 nil])
([nil nil ((1168 . 1169)) nil (25192 7457 463698 463000) 0 nil])
([nil nil ((1161 . 1172) (#("oneDvec_" 0 7 (fontified t) 7 8 (fontified t)) . -1161) (undo-tree-id97 . -8) (undo-tree-id98 . 8) 1169) nil (25192 7457 463697 285000) 0 nil])
([nil nil ((1172 . 1173)) nil (25192 7457 463687 19000) 0 nil])
([nil nil ((1172 . 1173) (t 25192 7457 468642 0)) nil (25192 7460 962236 916000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . -1172) (undo-tree-id101 . -1) 1173 (t 25192 7460 966828 900000)) nil (25192 7465 62742 798000) 0 nil])
([nil nil ((1173 . 1174)) nil (25192 7465 62732 832000) 0 nil])
([nil nil ((1183 . 1185) (t 25192 7465 67093 700000)) nil (25192 7480 479556 100000) 0 nil])
([nil nil ((1185 . 1187)) nil (25192 7480 479555 637000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1189 1202 nil nil nil t #s(yas--field 2 1204 1214 nil nil nil nil #s(yas--exit 1210 nil))) #s(yas--field 2 1204 1214 nil nil nil nil #s(yas--exit 1210 nil))) #s(yas--exit 1210 nil) 4 nil #s(yas--field 1 1189 1202 nil nil nil t #s(yas--field 2 1204 1214 nil nil nil nil #s(yas--exit 1210 nil))) nil nil)) (1207 . 1209) (1185 . 1208) (#("if" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t)) . 1185) (undo-tree-id104 . -2) 1187) nil (25192 7480 479554 844000) 0 nil])
([nil nil ((1190 . 1196) (#("condition" 0 9 (fontified nil)) . 1190) (undo-tree-id102 . -9) (undo-tree-id103 . -9) (1189 . 1190)) nil (25192 7480 479553 89000) 0 nil])
([nil nil ((1195 . 1196)) nil (25192 7480 479542 661000) 0 nil])
([nil nil ((1197 . 1201) (t 25192 7480 483809 600000)) nil (25192 7486 157270 957000) 0 nil])
([nil nil ((1201 . 1202)) nil (25192 7486 157269 958000) 0 nil])
([nil nil ((apply yas--snippet-revive 1185 1214 #s(yas--snippet nil (#s(yas--field 1 1189 1202 nil nil nil t #s(yas--field 2 1204 1214 nil nil nil nil #s(yas--exit 1210 nil))) #s(yas--field 2 1204 1214 nil nil nil nil #s(yas--exit 1210 nil))) #s(yas--exit 1210 nil) 4 nil #s(yas--field 1 1189 1202 nil nil nil t #s(yas--field 2 1204 1214 nil nil nil nil #s(yas--exit 1210 nil))) nil nil))) nil (25192 7486 157266 267000) 0 nil])
([nil nil ((1182 . 1185) (t 25192 7486 162872 100000)) nil (25192 7507 402257 457000) 0 nil])
([nil nil ((1185 . 1195)) nil (25192 7507 402256 655000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1193) (undo-tree-id108 . -1) (#("=" 0 1 (fontified t)) . -1194) (undo-tree-id109 . -1) 1195) nil (25192 7507 402255 773000) 0 nil])
([nil nil ((1193 . 1194)) nil (25192 7507 402253 495000) 0 nil])
([nil nil ((1217 . 1222)) nil (25192 7507 402252 989000) 0 nil])
([nil nil ((1222 . 1223)) nil (25192 7507 402252 614000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1223) (#(" " 0 1 (fontified t)) . 1223) (#("
" 0 1 (fontified t)) . 1223) (#(" " 0 1 (fontified t)) . 1223) (#(" " 0 1 (fontified t)) . 1223) (#(" " 0 1 (fontified t)) . 1223) (#(" " 0 1 (fontified t)) . 1223) (#("
" 0 1 (fontified t)) . 1223) (undo-tree-id106 . -1) (undo-tree-id107 . -1)) nil (25192 7507 402251 666000) 0 nil])
([nil nil ((1224 . 1227)) nil (25192 7507 402249 91000) 0 nil])
([nil nil ((1227 . 1231)) nil (25192 7507 402248 530000) 0 nil])
([nil nil ((1231 . 1232) (#(" x" 0 2 (fontified nil)) . -1231) (1231 . 1233) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 1231) (undo-tree-id105 . -4) (1227 . 1231) 1231) nil (25192 7507 402247 529000) 0 nil])
([nil nil ((1232 . 1234)) nil (25192 7507 403774 283000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1227) (undo-tree-id123 . -1) (#("l" 0 1 (fontified t)) . -1228) (undo-tree-id124 . -1) (#("s" 0 1 (fontified t)) . -1229) (undo-tree-id125 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -1230) (undo-tree-id126 . -1) (#(" " 0 1 (fontified t)) . -1231) (undo-tree-id127 . -1) (#("i" 0 1 (fontified t)) . -1232) (undo-tree-id128 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -1233) (undo-tree-id129 . -1) 1234) nil (25192 7545 919651 273000) 0 nil] [nil nil ((1234 . 1239)) ((#("
    " 0 5 (fontified t)) . 1234) (undo-tree-id110 . -5) (undo-tree-id111 . -1)) (25192 7507 402234 272000) 0 nil])
([nil nil ((1227 . 1231)) nil (25192 7545 919647 781000) 0 nil])
nil
([nil nil ((1231 . 1232) (#(" x" 0 2 (fontified nil)) . -1231) (1231 . 1233) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 1231) (undo-tree-id122 . -4) (1227 . 1231) 1231) nil (25192 7545 919647 99000) 0 nil])
([nil nil ((1232 . 1234)) nil (25192 7545 919645 910000) 0 nil])
([nil nil ((1234 . 1235)) nil (25192 7545 919645 528000) 0 nil])
([nil nil ((1235 . 1241)) nil (25192 7545 919645 178000) 0 nil])
([nil nil ((1241 . 1248)) nil (25192 7545 919644 584000) 0 nil])
([nil nil ((1248 . 1249)) nil (25192 7545 919643 893000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -1248) (undo-tree-id118 . -1) (undo-tree-id119 . 1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 1249) nil (25192 7545 919642 886000) 0 nil])
([nil nil ((1248 . 1249)) nil (25192 7545 919639 741000) 0 nil])
([nil nil ((1249 . 1250)) nil (25192 7545 919639 368000) 0 nil])
([nil nil ((1250 . 1255)) nil (25192 7545 919639 9000) 0 nil])
([nil nil ((1255 . 1256)) nil (25192 7545 919638 632000) 0 nil])
([nil nil ((1256 . 1257)) nil (25192 7545 919638 243000) 0 nil])
([nil nil ((1257 . 1258)) nil (25192 7545 919637 976000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -1257) (undo-tree-id117 . -1) 1258) nil (25192 7545 919637 229000) 0 nil])
([nil nil ((1257 . 1258)) nil (25192 7545 919621 365000) 0 nil])
([nil nil ((1258 . 1261)) nil (25192 7545 919621 143000) 0 nil])
([nil nil ((1261 . 1265)) nil (25192 7545 919620 813000) 0 nil])
([nil nil ((1265 . 1266) (#(" x" 0 2 (fontified nil)) . -1265) (1265 . 1267) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 4 (face font-lock-keyword-face fontified nil)) . 1265) (undo-tree-id116 . -4) (1261 . 1265) 1265) nil (25192 7545 919620 177000) 0 nil])
([nil nil ((1266 . 1267)) nil (25192 7545 919619 107000) 0 nil])
([nil nil ((1266 . 1270)) nil (25192 7545 919618 821000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1267) (undo-tree-id113 . -1) (#("=" 0 1 (fontified t)) . -1268) (undo-tree-id114 . -1) (#(" " 0 1 (fontified t)) . -1269) (undo-tree-id115 . -1) 1270) nil (25192 7545 919618 185000) 0 nil])
([nil nil ((1267 . 1269)) nil (25192 7545 919615 898000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1268) (undo-tree-id112 . -1) 1269) nil (25192 7545 919615 141000) 0 nil])
([nil nil ((1268 . 1269)) nil (25192 7545 919607 395000) 0 nil])
([nil nil ((1269 . 1270)) nil (25192 7545 919606 881000) 0 nil])
([nil nil ((1267 . 1268)) nil (25192 7545 919606 370000) 0 nil])
([nil nil ((1269 . 1270)) nil (25192 7545 919603 493000) 0 nil])
([nil nil ((1274 . 1275) (t 25192 7545 924350 900000)) nil (25192 7552 247218 99000) 0 nil])
([nil nil ((1274 . 1276)) nil (25192 7552 247217 605000) 0 nil])
([nil nil ((1276 . 1284)) nil (25192 7552 247217 38000) 0 nil])
([nil nil ((1284 . 1285)) nil (25192 7552 247214 6000) 0 nil])
([nil nil ((1288 . 1289) (t 25192 7552 251980 400000)) nil (25192 7557 879015 377000) 0 nil])
([nil nil ((1289 . 1296) (t 25192 7557 883532 900000)) nil (25192 7606 304045 194000) 0 nil])
([nil nil ((1293 . 1301) (#("opp" 0 1 (face font-lock-function-name-face fontified t) 1 2 (face font-lock-function-name-face fontified t) 2 3 (face font-lock-function-name-face fontified t)) . -1293) (undo-tree-id135 . -3) 1296) nil (25192 7606 304044 748000) 0 nil])
([nil nil ((1301 . 1306)) nil (25192 7606 304043 972000) 0 nil])
([nil nil ((1306 . 1308)) nil (25192 7606 304043 679000) 0 nil])
([nil nil ((1307 . 1310)) nil (25192 7606 304043 334000) 0 nil])
([nil nil ((1307 . 1314) (#("one" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t)) . -1307) (undo-tree-id134 . -3) 1310) nil (25192 7606 304042 720000) 0 nil])
([nil nil ((1314 . 1317)) nil (25192 7606 304041 735000) 0 nil])
([nil nil ((1307 . 1318) (#("oneDvec_in" 0 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . -1307) (undo-tree-id133 . -10) 1317) nil (25192 7606 304041 301000) 0 nil])
([nil nil ((1318 . 1326)) nil (25192 7606 304040 228000) 0 nil])
([nil nil ((1326 . 1327)) nil (25192 7606 304039 946000) 0 nil])
([nil nil ((1327 . 1337)) nil (25192 7606 304039 653000) 0 nil])
([nil nil ((1337 . 1338)) nil (25192 7606 304039 292000) 0 nil])
([nil nil ((1338 . 1341)) nil (25192 7606 304039 77000) 0 nil])
([nil nil ((1341 . 1347)) nil (25192 7606 304038 795000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -1346) (undo-tree-id132 . -1) 1347) nil (25192 7606 304038 459000) 0 nil])
([nil nil ((1346 . 1347)) nil (25192 7606 304037 348000) 0 nil])
([nil nil ((1348 . 1351)) nil (25192 7606 304036 733000) 0 nil])
([nil nil ((1350 . 1351) (#("  " 0 2 (fontified nil)) . 1349) (undo-tree-id130 . -2) (undo-tree-id131 . -1) (1351 . 1352)) nil (25192 7606 304035 619000) 0 nil])
([nil nil ((1350 . 1354)) nil (25192 7606 304024 462000) 0 nil])
([nil nil ((1351 . 1353) (t 25192 7606 309198 100000)) nil (25192 7698 209109 223000) 0 nil])
([nil nil ((1353 . 1356)) nil (25192 7698 209108 817000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1353) (undo-tree-id147 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -1354) (undo-tree-id148 . -1) (#(" " 0 1 (fontified t)) . -1355) (undo-tree-id149 . -1) 1356) nil (25192 7698 209108 259000) 0 nil])
([nil nil ((1353 . 1355)) nil (25192 7698 209105 907000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1357 1370 nil nil nil t #s(yas--field 2 1372 1382 nil nil nil nil #s(yas--exit 1378 nil))) #s(yas--field 2 1372 1382 nil nil nil nil #s(yas--exit 1378 nil))) #s(yas--exit 1378 nil) 5 nil #s(yas--field 1 1357 1370 nil nil nil t #s(yas--field 2 1372 1382 nil nil nil nil #s(yas--exit 1378 nil))) nil nil)) (1375 . 1377) (1353 . 1376) (#("if" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t)) . 1353) (undo-tree-id146 . -2) 1355) nil (25192 7698 209105 200000) 0 nil])
([nil nil ((1358 . 1370) (#("condition" 0 9 (fontified nil)) . 1358) (undo-tree-id144 . -9) (undo-tree-id145 . -9) (1357 . 1358)) nil (25192 7698 209103 851000) 0 nil])
([nil nil ((apply yas--snippet-revive 1353 1382 #s(yas--snippet nil (#s(yas--field 1 1357 1370 nil nil nil t #s(yas--field 2 1372 1382 nil nil nil nil #s(yas--exit 1378 nil))) #s(yas--field 2 1372 1382 nil nil nil nil #s(yas--exit 1378 nil))) #s(yas--exit 1378 nil) 5 nil #s(yas--field 1 1357 1370 nil nil nil t #s(yas--field 2 1372 1382 nil nil nil nil #s(yas--exit 1378 nil))) nil nil))) nil (25192 7698 209102 223000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1373) (#(" " 0 1 (fontified t)) . 1373) (#("
" 0 1 (fontified t)) . 1373)) nil (25192 7698 209101 763000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1371) (undo-tree-id143 . -1) 1372) nil (25192 7698 209101 146000) 0 nil])
([nil nil ((1371 . 1376)) nil (25192 7698 209100 368000) 0 nil])
([nil nil ((1380 . 1384) (#("  " 0 2 (fontified t)) . 1380) 1383) nil (25192 7698 209099 988000) 0 nil])
([nil nil ((1378 . 1384) (#("  " 0 2 (fontified nil)) . 1378) (1377 . 1378)) nil (25192 7698 209099 405000) 0 nil])
([nil nil ((1384 . 1386)) nil (25192 7698 209098 852000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1388 1397 nil nil nil nil #s(yas--field 2 1399 1410 nil nil nil nil #s(yas--exit 1402 nil))) #s(yas--field 2 1399 1410 nil nil nil nil #s(yas--exit 1402 nil))) #s(yas--exit 1402 nil) 6 nil #s(yas--field 1 1388 1397 nil nil nil nil #s(yas--field 2 1399 1410 nil nil nil nil #s(yas--exit 1402 nil))) nil nil)) (1403 . 1409) (1401 . 1402) (#("    " 0 4 (fontified nil)) . -1401) (undo-tree-id141 . -4) (1384 . 1407) (#("if" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t)) . 1384) (undo-tree-id142 . -2) 1386) nil (25192 7698 209098 7000) 0 nil])
([nil nil ((apply yas--snippet-revive 1384 1410 #s(yas--snippet nil (#s(yas--field 1 1388 1397 nil nil nil nil #s(yas--field 2 1399 1410 nil nil nil nil #s(yas--exit 1402 nil))) #s(yas--field 2 1399 1410 nil nil nil nil #s(yas--exit 1402 nil))) #s(yas--exit 1402 nil) 6 nil #s(yas--field 1 1388 1397 nil nil nil nil #s(yas--field 2 1399 1410 nil nil nil nil #s(yas--exit 1402 nil))) nil nil))) nil (25192 7698 209095 777000) 0 nil])
([nil nil ((#("  if(rand()/double (RAND_MAX) > epsilon)" 0 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 12 (fontified t) 12 18 (face font-lock-type-face fontified t) 18 40 (fontified t)) . 15144) (undo-tree-id140 . -40)) nil (25192 7698 209095 6000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15183 . 15184) (nil fontified nil 15162 . 15184) (nil fontified nil 15156 . 15162) (nil fontified nil 15148 . 15156) (nil fontified nil 15146 . 15148) (nil fontified nil 15144 . 15146) (15144 . 15184)) nil (25192 7698 209093 711000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1398) (#(" " 0 1 (fontified t)) . 1398) (#("
" 0 1 (fontified t)) . 1398) (#("	" 0 1 (fontified t)) . 1398) (#("
" 0 1 (fontified t)) . 1398) (#("{" 0 1 (fontified t)) . 1398) (#(" " 0 1 (fontified t)) . 1398)) nil (25192 7698 209092 495000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 1398) (#(" " 0 1 (fontified t)) . 1398) (#(" " 0 1 (fontified t)) . 1398) (#(" " 0 1 (fontified t)) . 1398) (#(" " 0 1 (fontified t)) . 1398)) nil (25192 7698 209091 293000) 0 nil])
([nil nil ((#("if (condition)" 0 2 (face font-lock-keyword-face fontified t) 2 14 (fontified t)) . 1384) (undo-tree-id136 . -14) (undo-tree-id137 . -14) (undo-tree-id138 . -4) (undo-tree-id139 . -13)) nil (25192 7698 209090 3000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1423 . 1424) (nil fontified nil 1402 . 1424) (nil fontified nil 1396 . 1402) (nil fontified nil 1388 . 1396) (nil fontified nil 1386 . 1388) (nil fontified nil 1384 . 1386) (1384 . 1424)) nil (25192 7698 209078 640000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1416) (undo-tree-id151 . -1) (#("p" 0 1 (fontified t)) . -1417) (undo-tree-id152 . -1) (#("s" 0 1 (fontified t)) . -1418) (undo-tree-id153 . -1) (#("i" 0 1 (fontified t)) . -1419) (undo-tree-id154 . -1) (#("l" 0 1 (fontified t)) . -1420) (undo-tree-id155 . -1) (#("o" 0 1 (fontified t)) . -1421) (undo-tree-id156 . -1) (#("n" 0 1 (fontified t)) . -1422) (undo-tree-id157 . -1) 1423 (t 25192 7698 214019 700000)) nil (25192 7706 912015 983000) 0 nil])
([nil nil ((1416 . 1417)) nil (25192 7706 912011 626000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -1414) (undo-tree-id150 . -1) 1415) nil (25192 7706 912010 723000) 0 nil])
([nil nil ((1414 . 1415)) nil (25192 7706 912001 517000) 0 nil])
([nil nil ((1417 . 1418) (1378 . 1384) (#("        " 0 6 (fontified nil) 6 8 (fontified nil)) . 1378) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (1418 . 1419) (t 25192 7706 917357 800000)) nil (25192 7744 707275 128000) 0 nil])
([nil nil ((1417 . 1418)) nil (25192 7744 707273 423000) 0 nil])
([nil nil ((1418 . 1420)) nil (25192 7744 707273 126000) 0 nil])
([nil nil ((1417 . 1425) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1417) (undo-tree-id161 . -3) 1420) nil (25192 7744 707272 680000) 0 nil])
([nil nil ((1425 . 1428)) nil (25192 7744 707271 818000) 0 nil])
([nil nil ((1428 . 1432)) nil (25192 7744 707271 531000) 0 nil])
([nil nil ((1432 . 1434)) nil (25192 7744 707271 235000) 0 nil])
([nil nil ((1434 . 1435)) nil (25192 7744 707270 922000) 0 nil])
([nil nil ((1435 . 1442)) nil (25192 7744 707270 629000) 0 nil])
([nil nil ((1442 . 1443)) nil (25192 7744 707270 336000) 0 nil])
([nil nil ((1443 . 1448)) nil (25192 7744 707270 20000) 0 nil])
([nil nil ((1443 . 1451) (#("RAND_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1443) (undo-tree-id158 . -5) (undo-tree-id159 . 5) (undo-tree-id160 . -5) 1448) nil (25192 7744 707269 274000) 0 nil])
([nil nil ((1451 . 1452)) nil (25192 7744 707260 282000) 0 nil])
([nil nil ((1452 . 1455)) nil (25192 7744 707260 20000) 0 nil])
([nil nil ((1454 . 1455)) nil (25192 7744 707259 571000) 0 nil])
([nil nil ((1456 . 1457)) nil (25192 7744 707256 397000) 0 nil])
([nil nil ((1350 . 1353) (t 25192 7744 712360 300000)) nil (25192 7826 791907 599000) 0 nil])
([nil nil ((1353 . 1374)) nil (25192 7826 791907 106000) 0 nil])
([nil nil ((1374 . 1377)) nil (25192 7826 791906 602000) 0 nil])
([nil nil ((1377 . 1378)) nil (25192 7826 791906 91000) 0 nil])
([nil nil ((1350 . 1353)) nil (25192 7826 791905 657000) 0 nil])
([nil nil ((1353 . 1363)) nil (25192 7826 791905 66000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1357) (undo-tree-id164 . -1) (#("e" 0 1 (fontified t)) . -1358) (undo-tree-id165 . -1) (#("s" 0 1 (fontified t)) . -1359) (undo-tree-id166 . -1) (#("u" 0 1 (fontified t)) . -1360) (undo-tree-id167 . -1) (#("l" 0 1 (fontified t)) . -1361) (undo-tree-id168 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1362) (undo-tree-id169 . -1) 1363) nil (25192 7826 791903 799000) 0 nil])
([nil nil ((1357 . 1368)) nil (25192 7826 791893 130000) 0 nil])
([nil nil ((1368 . 1379)) nil (25192 7826 791892 641000) 0 nil])
([nil nil ((1379 . 1380)) nil (25192 7826 791889 575000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1422) (undo-tree-id181 . -1) (undo-tree-id182 . 1) (undo-tree-id183 . -1) 1423 (t 25192 7826 796765 500000)) nil (25192 7835 793024 504000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1415) (undo-tree-id173 . -1) (undo-tree-id174 . 1) (#("t" 0 1 (fontified t)) . -1416) (undo-tree-id175 . -1) (#("a" 0 1 (fontified t)) . -1417) (undo-tree-id176 . -1) (#("t" 0 1 (fontified t)) . -1418) (undo-tree-id177 . -1) (#("e" 0 1 (fontified t)) . -1419) (undo-tree-id178 . -1) (#("[" 0 1 (fontified t)) . -1420) (undo-tree-id179 . -1) (#("0" 0 1 (fontified t)) . -1421) (undo-tree-id180 . -1) 1422) nil (25192 7835 793021 683000) 0 nil])
([nil nil ((1415 . 1424)) nil (25192 7835 792987 611000) 0 nil])
([nil nil ((1415 . 1426) (#("last_resu" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . -1415) (undo-tree-id170 . -9) (undo-tree-id171 . 9) (undo-tree-id172 . -4) 1424) nil (25192 7835 792985 457000) 0 nil])
([nil nil ((1408 . 1411) (t 25192 7835 797889 700000)) nil (25192 7845 49973 338000) 0 nil])
([nil nil ((1411 . 1413)) nil (25192 7845 49972 880000) 0 nil])
([nil nil ((1413 . 1419)) nil (25192 7845 49972 411000) 0 nil])
([nil nil ((1415 . 1423) (#("oppo" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t)) . -1415) (undo-tree-id184 . -4) (undo-tree-id185 . 4) 1419) nil (25192 7845 49971 432000) 0 nil])
([nil nil ((1423 . 1424)) nil (25192 7845 49960 974000) 0 nil])
([nil nil ((1493 . 1495) (t 25192 7845 55649 500000)) nil (25192 8169 225754 497000) 0 nil])
([nil nil ((1496 . 1513)) nil (25192 8169 225753 859000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1498) (undo-tree-id186 . -1) (#("l" 0 1 (fontified t)) . -1499) (undo-tree-id187 . -1) (#("a" 0 1 (fontified t)) . -1500) (undo-tree-id188 . -1) (#("s" 0 1 (fontified t)) . -1501) (undo-tree-id189 . -1) (#("t" 0 1 (fontified t)) . -1502) (undo-tree-id190 . -1) (#("_" 0 1 (fontified t)) . -1503) (undo-tree-id191 . -1) (#("m" 0 1 (fontified t)) . -1504) (undo-tree-id192 . -1) (#("o" 0 1 (fontified t)) . -1505) (undo-tree-id193 . -1) (#("v" 0 1 (fontified t)) . -1506) (undo-tree-id194 . -1) (#("e" 0 1 (fontified t)) . -1507) (undo-tree-id195 . -1) (#(" " 0 1 (fontified t)) . -1508) (undo-tree-id196 . -1) (#("=" 0 1 (fontified t)) . -1509) (undo-tree-id197 . -1) (#("=" 0 1 (fontified t)) . -1510) (undo-tree-id198 . -1) (#(" " 0 1 (fontified t)) . -1511) (undo-tree-id199 . -1) (#("0" 0 1 (fontified t)) . -1512) (undo-tree-id200 . -1) 1513) nil (25192 8169 225751 788000) 0 nil])
([nil nil ((1498 . 1500)) nil (25192 8169 225733 618000) 0 nil])
([nil nil ((1500 . 1501)) nil (25192 8169 225732 800000) 0 nil])
([nil nil ((1499 . 1513)) nil (25192 8169 225729 601000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 1553) (t 25192 8169 232658 400000)) nil (25192 8267 626576 946000) 0 nil])
([nil nil ((1553 . 1554)) nil (25192 8267 626576 587000) 0 nil])
([nil nil ((1496 . 1500)) nil (25192 8267 626576 279000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1519) (#("=" 0 1 (fontified t)) . 1519) (#(" " 0 1 (fontified t)) . 1519) (#("t" 0 1 (fontified t)) . 1519) (#("n" 0 1 (fontified t)) . 1519) (#("e" 0 1 (fontified t)) . 1519) (#("n" 0 1 (fontified t)) . 1519) (#("o" 0 1 (fontified nil)) . 1519) (#("p" 0 1 (fontified t)) . 1519) (#("p" 0 1 (fontified t)) . 1519) (#("o" 0 1 (fontified t)) . 1519)) nil (25192 8267 626575 89000) 0 nil])
([nil nil ((1518 . 1524)) nil (25192 8267 626574 226000) 0 nil])
([nil nil ((1525 . 1533)) nil (25192 8267 626573 909000) 0 nil])
([nil nil ((1533 . 1536)) nil (25192 8267 626573 523000) 0 nil])
([nil nil ((1536 . 1537)) nil (25192 8267 626573 230000) 0 nil])
([nil nil ((1561 . 1562)) nil (25192 8267 626572 957000) 0 nil])
([nil nil ((1562 . 1563)) nil (25192 8267 626572 630000) 0 nil])
([nil nil ((1563 . 1567)) nil (25192 8267 626572 152000) 0 nil])
([nil nil ((1567 . 1568)) nil (25192 8267 626571 911000) 0 nil])
([nil nil ((1568 . 1569)) nil (25192 8267 626571 394000) 0 nil])
([nil nil ((1569 . 1580)) nil (25192 8267 626570 900000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 1580) (#(" " 0 1 (fontified t)) . 1580) (undo-tree-id201 . -1) (#("%" 0 1 (fontified t)) . 1580) (undo-tree-id202 . -1) (#(" " 0 1 (fontified t)) . 1580) (undo-tree-id203 . -1)) nil (25192 8267 626569 541000) 0 nil])
([nil nil ((1580 . 1581)) nil (25192 8267 626558 407000) 0 nil])
([nil nil ((1583 . 1591) (t 25192 8267 631934 600000)) nil (25192 8279 658232 949000) 0 nil])
([nil nil ((1591 . 1595)) nil (25192 8279 658232 543000) 0 nil])
([nil nil ((1595 . 1596) (#(" x" 0 2 (fontified nil)) . -1595) (1595 . 1597) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 1595) (undo-tree-id206 . -4) (1591 . 1595) 1595) nil (25192 8279 658231 985000) 0 nil])
([nil nil ((1596 . 1597)) nil (25192 8279 658230 495000) 0 nil])
([nil nil ((1596 . 1600)) nil (25192 8279 658230 185000) 0 nil])
([nil nil ((1596 . 1604) (#("oppo" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1596) (undo-tree-id204 . -4) (undo-tree-id205 . 4) 1600) nil (25192 8279 658229 165000) 0 nil])
([nil nil ((1604 . 1608)) nil (25192 8279 658221 98000) 0 nil])
([nil nil ((1608 . 1609)) nil (25192 8279 658218 136000) 0 nil])
([nil nil ((1610 . 1618) (t 25192 8279 663318 300000)) nil (25192 8283 644277 922000) 0 nil])
([nil nil ((1611 . 1616) (#("	      " 0 7 (fontified nil)) . 1611) (undo-tree-id207 . -7) (1618 . 1619)) nil (25192 8283 644275 118000) 0 nil])
([nil nil ((1617 . 1621) (t 25192 8283 649715 700000)) nil (25192 8306 327960 479000) 0 nil])
([nil nil ((1621 . 1625)) nil (25192 8306 327960 43000) 0 nil])
([nil nil ((1625 . 1626) (#(" x" 0 2 (fontified nil)) . -1625) (1625 . 1627) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 4 (face font-lock-keyword-face fontified nil)) . 1625) (undo-tree-id217 . -4) (1621 . 1625) 1625) nil (25192 8306 327959 467000) 0 nil])
([nil nil ((1626 . 1629)) nil (25192 8306 327957 990000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1628) (undo-tree-id216 . -1) 1629) nil (25192 8306 327957 546000) 0 nil])
([nil nil ((1628 . 1630)) nil (25192 8306 327956 421000) 0 nil])
([nil nil ((1629 . 1641)) nil (25192 8306 327956 64000) 0 nil])
([nil nil ((1641 . 1643)) nil (25192 8306 327955 574000) 0 nil])
([nil nil ((#("{
	      if (rand()/double (RAND_MAX) < 0.5){opponent = 1;}
	      else{opponent = 2;}
	    }" 0 1 (fontified t) 1 2 (fontified t) 2 9 (fontified t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (face font-lock-type-face fontified t) 21 22 (face font-lock-type-face fontified t) 22 23 (face font-lock-type-face fontified t) 23 24 (face font-lock-type-face fontified t) 24 25 (face font-lock-type-face fontified t) 25 26 (face font-lock-type-face fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 67 (fontified t) 67 71 (face font-lock-keyword-face fontified t) 71 72 (fontified t) 72 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 92 (fontified t) 92 93 (fontified t)) . 1524) (undo-tree-id208 . -93) (undo-tree-id209 . -72) (undo-tree-id210 . -93) (undo-tree-id211 . -93) (undo-tree-id212 . 93) (undo-tree-id213 . -1) (undo-tree-id214 . 1) (undo-tree-id215 . -93)) nil (25192 8306 327954 647000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1616 . 1617) (nil fontified nil 1616 . 1617) (nil fontified nil 1611 . 1616) (nil fontified nil 1610 . 1611) (nil fontified nil 1609 . 1610) (nil fontified nil 1608 . 1609) (nil fontified nil 1607 . 1608) (nil fontified nil 1606 . 1607) (nil fontified nil 1605 . 1606) (nil fontified nil 1604 . 1605) (nil fontified nil 1596 . 1604) (nil fontified nil 1595 . 1596) (nil fontified nil 1591 . 1595) (nil fontified nil 1584 . 1591) (nil fontified nil 1583 . 1584) (nil fontified nil 1582 . 1583) (nil fontified nil 1581 . 1582) (nil fontified nil 1580 . 1581) (nil fontified nil 1579 . 1580) (nil fontified nil 1578 . 1579) (nil fontified nil 1577 . 1578) (nil fontified nil 1576 . 1577) (nil fontified nil 1575 . 1576) (nil fontified nil 1574 . 1575) (nil fontified nil 1573 . 1574) (nil fontified nil 1572 . 1573) (nil fontified nil 1571 . 1572) (nil fontified nil 1570 . 1571) (nil fontified nil 1569 . 1570) (nil fontified nil 1568 . 1569) (nil fontified nil 1567 . 1568) (nil fontified nil 1566 . 1567) (nil fontified nil 1565 . 1566) (nil fontified nil 1564 . 1565) (nil fontified nil 1563 . 1564) (nil fontified nil 1562 . 1563) (nil fontified nil 1561 . 1562) (nil fontified nil 1560 . 1561) (nil fontified nil 1552 . 1560) (nil fontified nil 1551 . 1552) (nil fontified nil 1550 . 1551) (nil fontified nil 1549 . 1550) (nil fontified nil 1548 . 1549) (nil fontified nil 1547 . 1548) (nil fontified nil 1546 . 1547) (nil fontified nil 1545 . 1546) (nil fontified nil 1544 . 1545) (nil fontified nil 1543 . 1544) (nil fontified nil 1542 . 1543) (nil fontified nil 1541 . 1542) (nil fontified nil 1540 . 1541) (nil fontified nil 1539 . 1540) (nil fontified nil 1538 . 1539) (nil fontified nil 1537 . 1538) (nil fontified nil 1536 . 1537) (nil fontified nil 1535 . 1536) (nil fontified nil 1534 . 1535) (nil fontified nil 1533 . 1534) (nil fontified nil 1526 . 1533) (nil fontified nil 1525 . 1526) (nil fontified nil 1524 . 1525) (1524 . 1617)) nil (25192 8306 327940 979000) 0 nil])
([nil nil ((1644 . 1650)) nil (25192 8306 327936 50000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1742 . 1743) (nil fontified nil 1742 . 1743) (nil fontified nil 1737 . 1742) (nil fontified nil 1736 . 1737) (nil fontified nil 1735 . 1736) (nil fontified nil 1734 . 1735) (nil fontified nil 1733 . 1734) (nil fontified nil 1732 . 1733) (nil fontified nil 1731 . 1732) (nil fontified nil 1730 . 1731) (nil fontified nil 1722 . 1730) (nil fontified nil 1721 . 1722) (nil fontified nil 1717 . 1721) (nil fontified nil 1710 . 1717) (nil fontified nil 1709 . 1710) (nil fontified nil 1708 . 1709) (nil fontified nil 1707 . 1708) (nil fontified nil 1706 . 1707) (nil fontified nil 1705 . 1706) (nil fontified nil 1704 . 1705) (nil fontified nil 1703 . 1704) (nil fontified nil 1702 . 1703) (nil fontified nil 1701 . 1702) (nil fontified nil 1700 . 1701) (nil fontified nil 1699 . 1700) (nil fontified nil 1698 . 1699) (nil fontified nil 1697 . 1698) (nil fontified nil 1696 . 1697) (nil fontified nil 1695 . 1696) (nil fontified nil 1694 . 1695) (nil fontified nil 1693 . 1694) (nil fontified nil 1692 . 1693) (nil fontified nil 1691 . 1692) (nil fontified nil 1690 . 1691) (nil fontified nil 1689 . 1690) (nil fontified nil 1688 . 1689) (nil fontified nil 1687 . 1688) (nil fontified nil 1686 . 1687) (nil fontified nil 1678 . 1686) (nil fontified nil 1677 . 1678) (nil fontified nil 1676 . 1677) (nil fontified nil 1675 . 1676) (nil fontified nil 1674 . 1675) (nil fontified nil 1673 . 1674) (nil fontified nil 1672 . 1673) (nil fontified nil 1671 . 1672) (nil fontified nil 1670 . 1671) (nil fontified nil 1669 . 1670) (nil fontified nil 1668 . 1669) (nil fontified nil 1667 . 1668) (nil fontified nil 1666 . 1667) (nil fontified nil 1665 . 1666) (nil fontified nil 1664 . 1665) (nil fontified nil 1663 . 1664) (nil fontified nil 1662 . 1663) (nil fontified nil 1661 . 1662) (nil fontified nil 1660 . 1661) (nil fontified nil 1659 . 1660) (nil fontified nil 1652 . 1659) (nil fontified nil 1651 . 1652) (nil fontified nil 1650 . 1651) (1650 . 1743)) nil (25192 8306 327931 353000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1706) (t 25192 8306 334549 500000)) nil (25192 8312 55990 833000) 0 nil])
([nil nil ((1706 . 1707)) nil (25192 8312 55987 398000) 0 nil])
([nil nil ((#("else if(last_move == 1)
	    {
	      if (rand()/double (RAND_MAX) < 0.5){opponent = 0;}
	      else{opponent = 2;}
	    }" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 38 (fontified t) 38 39 (face font-lock-keyword-face fontified t) 39 40 (face font-lock-keyword-face fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (face font-lock-type-face fontified t) 50 51 (face font-lock-type-face fontified t) 51 52 (face font-lock-type-face fontified t) 52 53 (face font-lock-type-face fontified t) 53 54 (face font-lock-type-face fontified t) 54 55 (face font-lock-type-face fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 96 (fontified t) 96 100 (face font-lock-keyword-face fontified t) 100 101 (fontified t) 101 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 121 (fontified t) 121 122 (fontified t rear-nonsticky t)) . 1621) (undo-tree-id218 . -122) (undo-tree-id219 . -29) (undo-tree-id220 . -122) (t 25192 8312 63012 300000)) nil (25192 8321 83622 203000) 0 nil])
([nil nil ((nil fontified nil 1742 . 1743) (nil fontified nil 1737 . 1742) (nil fontified nil 1736 . 1737) (nil fontified nil 1735 . 1736) (nil fontified nil 1734 . 1735) (nil fontified nil 1733 . 1734) (nil fontified nil 1732 . 1733) (nil fontified nil 1731 . 1732) (nil fontified nil 1730 . 1731) (nil fontified nil 1722 . 1730) (nil fontified nil 1721 . 1722) (nil fontified nil 1717 . 1721) (nil fontified nil 1710 . 1717) (nil fontified nil 1709 . 1710) (nil fontified nil 1708 . 1709) (nil fontified nil 1707 . 1708) (nil fontified nil 1706 . 1707) (nil fontified nil 1705 . 1706) (nil fontified nil 1704 . 1705) (nil fontified nil 1703 . 1704) (nil fontified nil 1702 . 1703) (nil fontified nil 1701 . 1702) (nil fontified nil 1700 . 1701) (nil fontified nil 1699 . 1700) (nil fontified nil 1698 . 1699) (nil fontified nil 1697 . 1698) (nil fontified nil 1696 . 1697) (nil fontified nil 1695 . 1696) (nil fontified nil 1694 . 1695) (nil fontified nil 1693 . 1694) (nil fontified nil 1692 . 1693) (nil fontified nil 1691 . 1692) (nil fontified nil 1690 . 1691) (nil fontified nil 1689 . 1690) (nil fontified nil 1688 . 1689) (nil fontified nil 1687 . 1688) (nil fontified nil 1686 . 1687) (nil fontified nil 1678 . 1686) (nil fontified nil 1677 . 1678) (nil fontified nil 1676 . 1677) (nil fontified nil 1675 . 1676) (nil fontified nil 1674 . 1675) (nil fontified nil 1673 . 1674) (nil fontified nil 1672 . 1673) (nil fontified nil 1671 . 1672) (nil fontified nil 1670 . 1671) (nil fontified nil 1669 . 1670) (nil fontified nil 1668 . 1669) (nil fontified nil 1667 . 1668) (nil fontified nil 1666 . 1667) (nil fontified nil 1665 . 1666) (nil fontified nil 1664 . 1665) (nil fontified nil 1663 . 1664) (nil fontified nil 1662 . 1663) (nil fontified nil 1661 . 1662) (nil fontified nil 1660 . 1661) (nil fontified nil 1659 . 1660) (nil fontified nil 1652 . 1659) (nil fontified nil 1651 . 1652) (nil fontified nil 1650 . 1651) (nil fontified nil 1645 . 1650) (nil fontified nil 1644 . 1645) (nil fontified nil 1643 . 1644) (nil fontified nil 1642 . 1643) (nil fontified nil 1641 . 1642) (nil fontified nil 1640 . 1641) (nil fontified nil 1639 . 1640) (nil fontified nil 1638 . 1639) (nil fontified nil 1637 . 1638) (nil fontified nil 1636 . 1637) (nil fontified nil 1635 . 1636) (nil fontified nil 1634 . 1635) (nil fontified nil 1633 . 1634) (nil fontified nil 1632 . 1633) (nil fontified nil 1631 . 1632) (nil fontified nil 1630 . 1631) (nil fontified nil 1629 . 1630) (nil fontified nil 1628 . 1629) (nil fontified nil 1627 . 1628) (nil fontified nil 1626 . 1627) (nil fontified nil 1625 . 1626) (nil fontified nil 1621 . 1625) (1621 . 1743)) nil (25192 8321 83612 991000) 0 nil])
([nil nil ((1743 . 1747)) nil (25192 8321 83608 370000) 0 nil])
([nil nil ((nil fontified nil 1868 . 1869) (nil fontified nil 1863 . 1868) (nil fontified nil 1862 . 1863) (nil fontified nil 1861 . 1862) (nil fontified nil 1860 . 1861) (nil fontified nil 1859 . 1860) (nil fontified nil 1858 . 1859) (nil fontified nil 1857 . 1858) (nil fontified nil 1856 . 1857) (nil fontified nil 1848 . 1856) (nil fontified nil 1847 . 1848) (nil fontified nil 1843 . 1847) (nil fontified nil 1836 . 1843) (nil fontified nil 1835 . 1836) (nil fontified nil 1834 . 1835) (nil fontified nil 1833 . 1834) (nil fontified nil 1832 . 1833) (nil fontified nil 1831 . 1832) (nil fontified nil 1830 . 1831) (nil fontified nil 1829 . 1830) (nil fontified nil 1828 . 1829) (nil fontified nil 1827 . 1828) (nil fontified nil 1826 . 1827) (nil fontified nil 1825 . 1826) (nil fontified nil 1824 . 1825) (nil fontified nil 1823 . 1824) (nil fontified nil 1822 . 1823) (nil fontified nil 1821 . 1822) (nil fontified nil 1820 . 1821) (nil fontified nil 1819 . 1820) (nil fontified nil 1818 . 1819) (nil fontified nil 1817 . 1818) (nil fontified nil 1816 . 1817) (nil fontified nil 1815 . 1816) (nil fontified nil 1814 . 1815) (nil fontified nil 1813 . 1814) (nil fontified nil 1812 . 1813) (nil fontified nil 1804 . 1812) (nil fontified nil 1803 . 1804) (nil fontified nil 1802 . 1803) (nil fontified nil 1801 . 1802) (nil fontified nil 1800 . 1801) (nil fontified nil 1799 . 1800) (nil fontified nil 1798 . 1799) (nil fontified nil 1797 . 1798) (nil fontified nil 1796 . 1797) (nil fontified nil 1795 . 1796) (nil fontified nil 1794 . 1795) (nil fontified nil 1793 . 1794) (nil fontified nil 1792 . 1793) (nil fontified nil 1791 . 1792) (nil fontified nil 1790 . 1791) (nil fontified nil 1789 . 1790) (nil fontified nil 1788 . 1789) (nil fontified nil 1787 . 1788) (nil fontified nil 1786 . 1787) (nil fontified nil 1785 . 1786) (nil fontified nil 1778 . 1785) (nil fontified nil 1777 . 1778) (nil fontified nil 1776 . 1777) (nil fontified nil 1771 . 1776) (nil fontified nil 1770 . 1771) (nil fontified nil 1769 . 1770) (nil fontified nil 1768 . 1769) (nil fontified nil 1767 . 1768) (nil fontified nil 1766 . 1767) (nil fontified nil 1765 . 1766) (nil fontified nil 1764 . 1765) (nil fontified nil 1763 . 1764) (nil fontified nil 1762 . 1763) (nil fontified nil 1761 . 1762) (nil fontified nil 1760 . 1761) (nil fontified nil 1759 . 1760) (nil fontified nil 1758 . 1759) (nil fontified nil 1757 . 1758) (nil fontified nil 1756 . 1757) (nil fontified nil 1755 . 1756) (nil fontified nil 1754 . 1755) (nil fontified nil 1753 . 1754) (nil fontified nil 1752 . 1753) (nil fontified nil 1751 . 1752) (nil fontified nil 1747 . 1751) (1747 . 1869)) nil (25192 8321 83606 600000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1751) (#("1" 0 1 (fontified t)) . 1751) (#(" " 0 1 (fontified t)) . 1751) (#("=" 0 1 (fontified t)) . 1751) (#("=" 0 1 (fontified t)) . 1751) (#(" " 0 1 (fontified t)) . 1751) (#("e" 0 1 (fontified t)) . 1751) (#("v" 0 1 (fontified t)) . 1751) (#("o" 0 1 (fontified t)) . 1751) (#("m" 0 1 (fontified t)) . 1751) (#("_" 0 1 (fontified t)) . 1751) (#("t" 0 1 (fontified t)) . 1751) (#("s" 0 1 (fontified t)) . 1751) (#("a" 0 1 (fontified t)) . 1751) (#("l" 0 1 (fontified t)) . 1751) (#("(" 0 1 (fontified t)) . 1751) (#("f" 0 1 (fontified t)) . 1751) (#("i" 0 1 (fontified t)) . 1751) (#(" " 0 1 (fontified t)) . 1751)) nil (25192 8321 83598 274000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 1840) (t 25192 8321 89317 600000)) nil (25192 8327 387937 231000) 0 nil])
([nil nil ((1840 . 1841)) nil (25192 8327 387933 824000) 0 nil])
([nil nil ((1850 . 1854) (t 25192 8327 393910 600000)) nil (25192 8329 864787 51000) 0 nil])
([nil nil ((1851 . 1852) (#("	  " 0 3 (fontified nil)) . 1851) (undo-tree-id221 . -3) (1854 . 1855) (t 25192 8329 872415 800000)) nil (25192 8333 139884 88000) 0 nil])
([nil nil ((1853 . 1860) (t 25192 8333 146230 200000)) nil (25192 8354 151089 491000) 0 nil])
([nil nil ((1853 . 1860) (t 25192 8354 158220 200000)) nil (25192 8396 641956 642000) 0 nil])
([nil nil ((1860 . 1864) (t 25192 8396 648670 700000)) nil (25192 8401 772176 770000) 0 nil])
([nil nil ((1864 . 1866) (#(" x" 0 2 (fontified nil)) . -1864) (1864 . 1866) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 1864) (undo-tree-id222 . -4) (1860 . 1864) 1864) nil (25192 8401 772175 848000) 0 nil])
([nil nil ((1866 . 1868)) nil (25192 8401 772167 889000) 0 nil])
([nil nil ((1867 . 1869)) nil (25192 8401 772164 569000) 0 nil])
([nil nil ((1867 . 1871) (t 25192 8401 777906 0)) nil (25192 8405 321860 743000) 0 nil])
([nil nil ((1871 . 1873) (t 25192 8405 329123 100000)) nil (25192 8421 870539 4000) 0 nil])
([nil nil ((1873 . 1875)) nil (25192 8421 870538 589000) 0 nil])
([nil nil ((1874 . 1878)) nil (25192 8421 870538 301000) 0 nil])
([nil nil ((1878 . 1880)) nil (25192 8421 870537 976000) 0 nil])
([nil nil ((1880 . 1881)) nil (25192 8421 870537 748000) 0 nil])
([nil nil ((1881 . 1892)) nil (25192 8421 870537 383000) 0 nil])
([nil nil ((1888 . 1896) (#("RAND" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1888) (undo-tree-id230 . -4) 1892) nil (25192 8421 870536 804000) 0 nil])
([nil nil ((1896 . 1898)) nil (25192 8421 870535 498000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1896) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . 1) (undo-tree-id226 . -1) (#(")" 0 1 (fontified t)) . -1897) (undo-tree-id227 . -1) (undo-tree-id228 . 1) (undo-tree-id229 . -1) 1898) nil (25192 8421 870532 687000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1887) (undo-tree-id231 . -1) (undo-tree-id232 . -1) 1888 (t 25192 8421 876982 700000)) nil (25192 8429 468719 869000) 0 nil])
([nil nil ((1887 . 1888)) nil (25192 8429 468711 411000) 0 nil])
([nil nil ((1897 . 1898)) nil (25192 8429 468708 570000) 0 nil])
([nil nil ((1897 . 1898) (t 25192 8429 474695 200000)) nil (25192 8445 220626 444000) 0 nil])
([nil nil ((1898 . 1899)) nil (25192 8445 220625 729000) 0 nil])
([nil nil ((1899 . 1900)) nil (25192 8445 220625 443000) 0 nil])
([nil nil ((1900 . 1902)) nil (25192 8445 220625 157000) 0 nil])
([nil nil ((1901 . 1902)) nil (25192 8445 220624 908000) 0 nil])
([nil nil ((1902 . 1906)) nil (25192 8445 220624 598000) 0 nil])
([nil nil ((1906 . 1907)) nil (25192 8445 220624 291000) 0 nil])
([nil nil ((1907 . 1908)) nil (25192 8445 220623 824000) 0 nil])
([nil nil ((1902 . 1904)) nil (25192 8445 220621 149000) 0 nil])
([nil nil ((1912 . 1914) (t 25192 8445 226039 800000)) nil (25192 8459 116240 744000) 0 nil])
([nil nil ((1913 . 1917)) nil (25192 8459 116240 423000) 0 nil])
([nil nil ((1913 . 1921) (#("oppo" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1913) (undo-tree-id234 . -4) (undo-tree-id235 . 4) 1917) nil (25192 8459 116239 900000) 0 nil])
([nil nil ((1921 . 1926)) nil (25192 8459 116238 86000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-warning-face fontified t)) . -1925) (undo-tree-id233 . -1) 1926) nil (25192 8459 116237 183000) 0 nil])
([nil nil ((1925 . 1926)) nil (25192 8459 116227 761000) 0 nil])
([nil nil ((1927 . 1931) (t 25192 8459 122358 200000)) nil (25192 8461 508341 18000) 0 nil])
([nil nil ((1931 . 1935) (t 25192 8461 516151 100000)) nil (25192 8490 460206 950000) 0 nil])
([nil nil ((1935 . 1941) (#(" x" 0 2 (fontified nil)) . -1935) (1935 . 1937) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 1935) (undo-tree-id244 . -4) (1931 . 1935) 1935) nil (25192 8490 460206 343000) 0 nil])
([nil nil ((1941 . 1943)) nil (25192 8490 460205 356000) 0 nil])
([nil nil ((1942 . 1948)) nil (25192 8490 460205 66000) 0 nil])
([nil nil ((1942 . 1950)) nil (25192 8490 460204 858000) 0 nil])
([nil nil ((1950 . 1952)) nil (25192 8490 460204 566000) 0 nil])
([nil nil ((1952 . 1955)) nil (25192 8490 460204 360000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1954) (undo-tree-id243 . -1) 1955) nil (25192 8490 460204 0) 0 nil])
([nil nil ((1954 . 1956)) nil (25192 8490 460203 212000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1953) (undo-tree-id240 . -1) (#("p" 0 1 (fontified t)) . -1954) (undo-tree-id241 . -1) (#("p" 0 1 (fontified t)) . -1955) (undo-tree-id242 . -1) 1956) nil (25192 8490 460202 672000) 0 nil])
([nil nil ((1953 . 1957)) nil (25192 8490 460200 577000) 0 nil])
([nil nil ((1957 . 1959)) nil (25192 8490 460200 289000) 0 nil])
([nil nil ((1959 . 1960)) nil (25192 8490 460199 893000) 0 nil])
([nil nil ((1960 . 1966)) nil (25192 8490 460199 482000) 0 nil])
([nil nil ((1966 . 1968)) nil (25192 8490 460199 265000) 0 nil])
([nil nil ((1967 . 1970)) nil (25192 8490 460198 956000) 0 nil])
([nil nil ((1970 . 1971)) nil (25192 8490 460198 723000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1968) (undo-tree-id237 . -1) (#("n" 0 1 (fontified t)) . -1969) (undo-tree-id238 . -1) (#("d" 0 1 (fontified t)) . -1970) (undo-tree-id239 . -1) 1971) nil (25192 8490 460198 160000) 0 nil])
([nil nil ((1967 . 1975) (#("R" 0 1 (fontified t)) . -1967) (undo-tree-id236 . -1) 1968) nil (25192 8490 460195 570000) 0 nil])
([nil nil ((1976 . 1977)) nil (25192 8490 460188 526000) 0 nil])
([nil nil ((1977 . 1978)) nil (25192 8490 460185 399000) 0 nil])
([nil nil ((1978 . 1981) (t 25192 8490 466401 900000)) nil (25192 8496 450084 455000) 0 nil])
([nil nil ((1981 . 1982)) nil (25192 8496 450083 951000) 0 nil])
([nil nil ((1982 . 1983)) nil (25192 8496 450083 580000) 0 nil])
([nil nil ((1983 . 1984)) nil (25192 8496 450083 196000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -1982) (undo-tree-id245 . -1) (#("{" 0 1 (fontified t)) . -1983) (undo-tree-id246 . -1) 1984) nil (25192 8496 450082 171000) 0 nil])
([nil nil ((1982 . 1984)) nil (25192 8496 450072 106000) 0 nil])
([nil nil ((1953 . 1954) (t 25192 8496 456326 800000)) nil (25192 8506 201219 722000) 0 nil])
([nil nil ((1984 . 1987) (t 25192 8506 207947 700000)) nil (25192 8522 45230 860000) 0 nil])
([nil nil ((1984 . 1992) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1984) (undo-tree-id251 . -3) 1987) nil (25192 8522 45230 375000) 0 nil])
([nil nil ((1992 . 1996)) nil (25192 8522 45229 391000) 0 nil])
([nil nil ((1996 . 1997)) nil (25192 8522 45229 181000) 0 nil])
([nil nil ((1998 . 2006)) nil (25192 8522 45228 848000) 0 nil])
([nil nil ((2006 . 2010)) nil (25192 8522 45228 443000) 0 nil])
([nil nil ((2010 . 2011) (#(" x" 0 2 (fontified nil)) . -2010) (2010 . 2012) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 2010) (undo-tree-id250 . -4) (2006 . 2010) 2010) nil (25192 8522 45227 900000) 0 nil])
([nil nil ((2011 . 2012)) nil (25192 8522 45226 835000) 0 nil])
([nil nil ((2011 . 2014)) nil (25192 8522 45226 423000) 0 nil])
([nil nil ((2011 . 2019) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2011) (undo-tree-id248 . -3) (undo-tree-id249 . 3) 2014) nil (25192 8522 45226 28000) 0 nil])
([nil nil ((2019 . 2023)) nil (25192 8522 45224 11000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -2022) (undo-tree-id247 . -1) 2023) nil (25192 8522 45223 268000) 0 nil])
([nil nil ((2022 . 2023)) nil (25192 8522 45215 900000) 0 nil])
([nil nil ((2023 . 2024)) nil (25192 8522 45213 109000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2035) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#(" " 0 1 (fontified t)) . -2036) (undo-tree-id254 . -1) (#(" " 0 1 (fontified t)) . -2037) (undo-tree-id255 . -1) (#(" " 0 1 (fontified t)) . -2038) (undo-tree-id256 . -1) (#(" " 0 1 (fontified t)) . -2039) (undo-tree-id257 . -1) (#(" " 0 1 (fontified t)) . -2040) (undo-tree-id258 . -1) (#(" " 0 1 (fontified t)) . -2041) (undo-tree-id259 . -1) 2042 (t 25192 8522 51546 700000)) nil (25192 8543 884783 194000) 0 nil])
([nil nil ((2041 . 2044) (t 25192 8543 892694 800000)) nil (25192 8546 469914 488000) 0 nil])
([nil nil ((2044 . 2047) (t 25192 8546 476105 0)) nil (25192 8558 422573 132000) 0 nil])
([nil nil ((2047 . 2048)) nil (25192 8558 422572 644000) 0 nil])
([nil nil ((2048 . 2049) (#(" x" 0 2 (fontified nil)) . -2048) (2048 . 2050) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 2048) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (2044 . 2048) 2048) nil (25192 8558 422572 2000) 0 nil])
([nil nil ((2049 . 2051)) nil (25192 8558 422546 685000) 0 nil])
([nil nil ((2051 . 2053)) nil (25192 8558 422546 446000) 0 nil])
([nil nil ((2052 . 2059)) nil (25192 8558 422546 84000) 0 nil])
([nil nil ((2052 . 2063) (#("last_re" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -2052) (undo-tree-id260 . -7) (undo-tree-id261 . 7) 2059) nil (25192 8558 422545 109000) 0 nil])
([nil nil ((2063 . 2068)) nil (25192 8558 422534 392000) 0 nil])
([nil nil ((2069 . 2074) (t 25192 8558 429919 400000)) nil (25192 8562 354027 681000) 0 nil])
([nil nil ((2074 . 2076)) nil (25192 8562 354027 6000) 0 nil])
([nil nil ((2081 . 2085) (#("    " 0 4 (fontified nil)) . 2080) (undo-tree-id264 . -4) (2080 . 2085) (#("    " 0 4 (fontified nil)) . 2079) (undo-tree-id265 . -4) (2079 . 2084) (#("    " 0 4 (fontified nil)) . 2078) (undo-tree-id266 . -4) (2078 . 2083) (#("    " 0 4 (fontified nil)) . 2077) (undo-tree-id267 . -4) (2077 . 2082) (#("    " 0 4 (fontified nil)) . 2076) (undo-tree-id268 . -4) (2075 . 2081)) nil (25192 8562 354024 255000) 0 nil])
([nil nil ((2075 . 2082) (t 25192 8562 360584 200000)) nil (25192 8592 78974 19000) 0 nil])
([nil nil ((2082 . 2085)) nil (25192 8592 78973 463000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2084) (undo-tree-id270 . -1) 2085) nil (25192 8592 78972 953000) 0 nil])
([nil nil ((2084 . 2085)) nil (25192 8592 78971 559000) 0 nil])
([nil nil ((2085 . 2089)) nil (25192 8592 78971 101000) 0 nil])
([nil nil ((2089 . 2091)) nil (25192 8592 78970 706000) 0 nil])
([nil nil ((2091 . 2092)) nil (25192 8592 78970 333000) 0 nil])
([nil nil ((2092 . 2098)) nil (25192 8592 78969 949000) 0 nil])
([nil nil ((2098 . 2099)) nil (25192 8592 78969 611000) 0 nil])
([nil nil ((2099 . 2103)) nil (25192 8592 78968 967000) 0 nil])
([nil nil ((2099 . 2107) (#("RAND" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2099) (undo-tree-id269 . -4) 2103) nil (25192 8592 78968 213000) 0 nil])
([nil nil ((2107 . 2108)) nil (25192 8592 78958 674000) 0 nil])
([nil nil ((2108 . 2109)) nil (25192 8592 78958 243000) 0 nil])
([nil nil ((2109 . 2110)) nil (25192 8592 78957 713000) 0 nil])
([nil nil ((2110 . 2112)) nil (25192 8592 78956 951000) 0 nil])
([nil nil ((2112 . 2113)) nil (25192 8592 78952 971000) 0 nil])
([nil nil ((2113 . 2115) (t 25192 8592 87045 100000)) nil (25192 8607 789044 286000) 0 nil])
([nil nil ((2114 . 2117)) nil (25192 8607 789043 814000) 0 nil])
([nil nil ((2114 . 2122) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2114) (undo-tree-id272 . -3) (undo-tree-id273 . 3) 2117) nil (25192 8607 789043 254000) 0 nil])
([nil nil ((2122 . 2125)) nil (25192 8607 789041 654000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -2124) (undo-tree-id271 . -1) 2125) nil (25192 8607 789041 48000) 0 nil])
([nil nil ((2124 . 2134)) nil (25192 8607 789033 798000) 0 nil])
([nil nil ((2134 . 2135)) nil (25192 8607 789030 943000) 0 nil])
([nil nil ((2136 . 2143) (t 25192 8607 795393 600000)) nil (25192 8634 103314 668000) 0 nil])
([nil nil ((2143 . 2147)) nil (25192 8634 103313 960000) 0 nil])
([nil nil ((2147 . 2149) (#(" x" 0 2 (fontified nil)) . -2147) (2147 . 2149) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 2147) (undo-tree-id282 . -4) (2143 . 2147) 2147) nil (25192 8634 103313 131000) 0 nil])
([nil nil ((2149 . 2151)) nil (25192 8634 103311 529000) 0 nil])
([nil nil ((2150 . 2152)) nil (25192 8634 103310 797000) 0 nil])
([nil nil ((2150 . 2154)) nil (25192 8634 103310 368000) 0 nil])
([nil nil ((2154 . 2157)) nil (25192 8634 103309 908000) 0 nil])
([nil nil ((2157 . 2159)) nil (25192 8634 103308 840000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2156) (undo-tree-id279 . -1) (#("(" 0 1 (fontified t)) . -2157) (undo-tree-id280 . -1) (#("(" 0 1 (fontified t)) . -2158) (undo-tree-id281 . -1) 2159) nil (25192 8634 103307 922000) 0 nil])
([nil nil ((2156 . 2158)) nil (25192 8634 103305 783000) 0 nil])
([nil nil ((2157 . 2161)) nil (25192 8634 103305 384000) 0 nil])
([nil nil ((2161 . 2163)) nil (25192 8634 103304 849000) 0 nil])
([nil nil ((2163 . 2164)) nil (25192 8634 103304 525000) 0 nil])
([nil nil ((2164 . 2167)) nil (25192 8634 103304 206000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2166) (undo-tree-id278 . -1) 2167) nil (25192 8634 103303 579000) 0 nil])
([nil nil ((2166 . 2168)) nil (25192 8634 103302 560000) 0 nil])
([nil nil ((2164 . 2170) (#("doub" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2164) (undo-tree-id276 . -4) (undo-tree-id277 . -4) 2168) nil (25192 8634 103302 95000) 0 nil])
([nil nil ((2170 . 2172)) nil (25192 8634 103300 397000) 0 nil])
([nil nil ((2171 . 2175)) nil (25192 8634 103299 958000) 0 nil])
([nil nil ((2171 . 2179) (#("RAND" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2171) (undo-tree-id274 . -4) (undo-tree-id275 . 4) 2175) nil (25192 8634 103299 212000) 0 nil])
([nil nil ((2180 . 2181)) nil (25192 8634 103291 308000) 0 nil])
([nil nil ((2181 . 2182)) nil (25192 8634 103290 717000) 0 nil])
([nil nil ((2182 . 2183)) nil (25192 8634 103287 720000) 0 nil])
([nil nil ((2183 . 2185) (t 25192 8634 109952 600000)) nil (25192 8643 941202 34000) 0 nil])
([nil nil ((2184 . 2186)) nil (25192 8643 941201 223000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2185) (undo-tree-id284 . -1) 2186) nil (25192 8643 941200 118000) 0 nil])
([nil nil ((2185 . 2186)) nil (25192 8643 941198 640000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -2185) (undo-tree-id283 . -1) 2186) nil (25192 8643 941197 999000) 0 nil])
([nil nil ((2185 . 2191)) nil (25192 8643 941180 481000) 0 nil])
([nil nil ((2191 . 2192)) nil (25192 8643 941179 952000) 0 nil])
([nil nil ((2192 . 2193)) nil (25192 8643 941176 573000) 0 nil])
([nil nil ((2195 . 2197) (t 25192 8643 947487 400000)) nil (25192 8703 702411 906000) 0 nil])
([nil nil ((2196 . 2199)) nil (25192 8703 702411 234000) 0 nil])
([nil nil ((2196 . 2204) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2196) (undo-tree-id303 . -3) 2199) nil (25192 8703 702410 814000) 0 nil])
([nil nil ((2204 . 2208)) nil (25192 8703 702409 763000) 0 nil])
([nil nil ((2208 . 2209)) nil (25192 8703 702409 362000) 0 nil])
([nil nil ((2210 . 2214)) nil (25192 8703 702408 851000) 0 nil])
([nil nil ((2214 . 2218)) nil (25192 8703 702408 551000) 0 nil])
([nil nil ((2218 . 2219) (#(" x" 0 2 (fontified nil)) . -2218) (2218 . 2220) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 2218) (undo-tree-id302 . -4) (2214 . 2218) 2218) nil (25192 8703 702408 57000) 0 nil])
([nil nil ((2219 . 2220)) nil (25192 8703 702406 953000) 0 nil])
([nil nil ((2219 . 2222)) nil (25192 8703 702406 688000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -2218) (undo-tree-id298 . -1) (#("o" 0 1 (fontified t)) . -2219) (undo-tree-id299 . -1) (#("p" 0 1 (fontified t)) . -2220) (undo-tree-id300 . -1) (#("p" 0 1 (fontified t)) . -2221) (undo-tree-id301 . -1) 2222) nil (25192 8703 702406 118000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 2218)) nil (25192 8703 702403 350000) 0 nil])
([nil nil ((2218 . 2224) (#(" x" 0 2 (fontified nil)) . -2218) (2218 . 2220) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 2218) (undo-tree-id297 . -4) (2214 . 2218) 2218) nil (25192 8703 702402 677000) 0 nil])
([nil nil ((2224 . 2226)) nil (25192 8703 702401 516000) 0 nil])
([nil nil ((2225 . 2231)) nil (25192 8703 702401 176000) 0 nil])
([nil nil ((2225 . 2233)) nil (25192 8703 702400 704000) 0 nil])
([nil nil ((2233 . 2235)) nil (25192 8703 702400 339000) 0 nil])
([nil nil ((2235 . 2237)) nil (25192 8703 702399 883000) 0 nil])
([nil nil ((2236 . 2240)) nil (25192 8703 702399 657000) 0 nil])
([nil nil ((2240 . 2242)) nil (25192 8703 702399 360000) 0 nil])
([nil nil ((2242 . 2243)) nil (25192 8703 702399 126000) 0 nil])
([nil nil ((2243 . 2247)) nil (25192 8703 702398 596000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t)) . -2243) (undo-tree-id293 . -1) (#("A" 0 1 (fontified t)) . -2244) (undo-tree-id294 . -1) (#("N" 0 1 (fontified t)) . -2245) (undo-tree-id295 . -1) (#("D" 0 1 (fontified t)) . -2246) (undo-tree-id296 . -1) 2247) nil (25192 8703 702397 944000) 0 nil])
([nil nil ((2243 . 2247)) nil (25192 8703 702395 449000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2245) (undo-tree-id291 . -1) (#("u" 0 1 (fontified t)) . -2246) (undo-tree-id292 . -1) 2247) nil (25192 8703 702394 623000) 0 nil])
([nil nil ((2245 . 2247)) nil (25192 8703 702393 126000) 0 nil])
([nil nil ((2243 . 2249) (#("doub" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2243) (undo-tree-id290 . -4) 2247) nil (25192 8703 702392 805000) 0 nil])
([nil nil ((2249 . 2251)) nil (25192 8703 702391 870000) 0 nil])
([nil nil ((2250 . 2254)) nil (25192 8703 702391 644000) 0 nil])
([nil nil ((2250 . 2258) (#("RAND" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2250) (undo-tree-id289 . -4) 2254) nil (25192 8703 702391 156000) 0 nil])
([nil nil ((2259 . 2260)) nil (25192 8703 702389 873000) 0 nil])
([nil nil ((2260 . 2261)) nil (25192 8703 702389 233000) 0 nil])
([nil nil ((2261 . 2265)) nil (25192 8703 702388 935000) 0 nil])
([nil nil ((2266 . 2268)) nil (25192 8703 702388 510000) 0 nil])
([nil nil ((2267 . 2270)) nil (25192 8703 702388 239000) 0 nil])
([nil nil ((2267 . 2275) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2267) (undo-tree-id288 . -3) 2270) nil (25192 8703 702387 745000) 0 nil])
([nil nil ((2275 . 2279)) nil (25192 8703 702378 464000) 0 nil])
([nil nil ((2279 . 2280)) nil (25192 8703 702378 77000) 0 nil])
([nil nil ((2281 . 2289)) nil (25192 8703 702377 679000) 0 nil])
([nil nil ((2289 . 2293)) nil (25192 8703 702377 269000) 0 nil])
([nil nil ((2293 . 2294) (#(" x" 0 2 (fontified nil)) . -2293) (2293 . 2295) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 2293) (undo-tree-id287 . -4) (2289 . 2293) 2293) nil (25192 8703 702376 692000) 0 nil])
([nil nil ((2294 . 2295)) nil (25192 8703 702375 301000) 0 nil])
([nil nil ((2294 . 2297)) nil (25192 8703 702374 937000) 0 nil])
([nil nil ((2294 . 2302) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2294) (undo-tree-id285 . -3) (undo-tree-id286 . 3) 2297) nil (25192 8703 702373 993000) 0 nil])
([nil nil ((2302 . 2306)) nil (25192 8703 702366 199000) 0 nil])
([nil nil ((2306 . 2307)) nil (25192 8703 702363 16000) 0 nil])
([nil nil ((#("




" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -2318) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (undo-tree-id306 . -5) 2323 (t 25192 8703 709145 800000)) nil (25192 8724 443670 880000) 0 nil])
([nil nil ((2324 . 2327) (t 25192 8724 450556 900000)) nil (25192 8757 954859 39000) 0 nil])
([nil nil ((2327 . 2331) (t 25192 8757 962495 700000)) nil (25192 8765 294206 899000) 0 nil])
([nil nil ((2331 . 2336) (#(" x" 0 2 (fontified nil)) . -2331) (2331 . 2333) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 2331) (undo-tree-id308 . -4) (2327 . 2331) 2331) nil (25192 8765 294206 359000) 0 nil])
([nil nil ((2336 . 2338)) nil (25192 8765 294204 894000) 0 nil])
([nil nil ((2339 . 2343) (#("    " 0 4 (fontified nil)) . 2338) (undo-tree-id307 . -4) (2337 . 2343)) nil (25192 8765 294202 311000) 0 nil])
([nil nil ((#("if(rand()/double(RAND_MAX) < (1.0-2.0*q)){opponent = 0;}
	  else
	    {
	      if(rand()/double(RAND_MAX) < 0.5){opponent = 1;}
	      else{opponent = 2;}
	    }" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 16 (face font-lock-type-face fontified t) 16 17 (fontified t) 17 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 60 (fontified t) 60 64 (face font-lock-keyword-face fontified t) 64 65 (fontified t) 65 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 79 (fontified t) 79 80 (face font-lock-keyword-face fontified t) 80 81 (face font-lock-keyword-face fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 95 (face font-lock-type-face fontified t) 95 96 (fontified t) 96 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 135 (fontified t) 135 139 (face font-lock-keyword-face fontified t) 139 140 (fontified t) 140 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 160 (fontified t) 160 161 (fontified t)) . 2154) (undo-tree-id309 . -140) (undo-tree-id310 . -161) (undo-tree-id311 . -161) (undo-tree-id312 . -155) (undo-tree-id313 . 1) (undo-tree-id314 . -161) (undo-tree-id315 . 91) (undo-tree-id316 . -71) (undo-tree-id317 . -161) 2315 (t 25192 8765 300720 200000)) nil (25192 8794 287333 142000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2314 . 2315) (nil fontified nil 2314 . 2315) (nil fontified nil 2309 . 2314) (nil fontified nil 2308 . 2309) (nil fontified nil 2307 . 2308) (nil fontified nil 2306 . 2307) (nil fontified nil 2305 . 2306) (nil fontified nil 2304 . 2305) (nil fontified nil 2303 . 2304) (nil fontified nil 2302 . 2303) (nil fontified nil 2294 . 2302) (nil fontified nil 2293 . 2294) (nil fontified nil 2289 . 2293) (nil fontified nil 2282 . 2289) (nil fontified nil 2281 . 2282) (nil fontified nil 2280 . 2281) (nil fontified nil 2279 . 2280) (nil fontified nil 2278 . 2279) (nil fontified nil 2277 . 2278) (nil fontified nil 2276 . 2277) (nil fontified nil 2275 . 2276) (nil fontified nil 2267 . 2275) (nil fontified nil 2266 . 2267) (nil fontified nil 2265 . 2266) (nil fontified nil 2264 . 2265) (nil fontified nil 2263 . 2264) (nil fontified nil 2262 . 2263) (nil fontified nil 2261 . 2262) (nil fontified nil 2260 . 2261) (nil fontified nil 2259 . 2260) (nil fontified nil 2258 . 2259) (nil fontified nil 2250 . 2258) (nil fontified nil 2249 . 2250) (nil fontified nil 2243 . 2249) (nil fontified nil 2242 . 2243) (nil fontified nil 2241 . 2242) (nil fontified nil 2240 . 2241) (nil fontified nil 2239 . 2240) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2226 . 2233) (nil fontified nil 2225 . 2226) (nil fontified nil 2224 . 2225) (nil fontified nil 2219 . 2224) (nil fontified nil 2218 . 2219) (nil fontified nil 2214 . 2218) (nil fontified nil 2211 . 2214) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2208 . 2209) (nil fontified nil 2207 . 2208) (nil fontified nil 2206 . 2207) (nil fontified nil 2205 . 2206) (nil fontified nil 2204 . 2205) (nil fontified nil 2196 . 2204) (nil fontified nil 2195 . 2196) (nil fontified nil 2194 . 2195) (nil fontified nil 2193 . 2194) (nil fontified nil 2192 . 2193) (nil fontified nil 2191 . 2192) (nil fontified nil 2190 . 2191) (nil fontified nil 2189 . 2190) (nil fontified nil 2188 . 2189) (nil fontified nil 2187 . 2188) (nil fontified nil 2186 . 2187) (nil fontified nil 2185 . 2186) (nil fontified nil 2184 . 2185) (nil fontified nil 2183 . 2184) (nil fontified nil 2182 . 2183) (nil fontified nil 2181 . 2182) (nil fontified nil 2180 . 2181) (nil fontified nil 2179 . 2180) (nil fontified nil 2171 . 2179) (nil fontified nil 2170 . 2171) (nil fontified nil 2164 . 2170) (nil fontified nil 2163 . 2164) (nil fontified nil 2162 . 2163) (nil fontified nil 2161 . 2162) (nil fontified nil 2160 . 2161) (nil fontified nil 2159 . 2160) (nil fontified nil 2158 . 2159) (nil fontified nil 2157 . 2158) (nil fontified nil 2156 . 2157) (nil fontified nil 2155 . 2156) (nil fontified nil 2154 . 2155) (2154 . 2315)) nil (25192 8794 287320 617000) 0 nil])
([nil nil ((2338 . 2344)) nil (25192 8794 287315 704000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2504 . 2505) (nil fontified nil 2504 . 2505) (nil fontified nil 2499 . 2504) (nil fontified nil 2498 . 2499) (nil fontified nil 2497 . 2498) (nil fontified nil 2496 . 2497) (nil fontified nil 2495 . 2496) (nil fontified nil 2494 . 2495) (nil fontified nil 2493 . 2494) (nil fontified nil 2492 . 2493) (nil fontified nil 2484 . 2492) (nil fontified nil 2483 . 2484) (nil fontified nil 2479 . 2483) (nil fontified nil 2472 . 2479) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2457 . 2465) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (nil fontified nil 2452 . 2453) (nil fontified nil 2451 . 2452) (nil fontified nil 2450 . 2451) (nil fontified nil 2449 . 2450) (nil fontified nil 2448 . 2449) (nil fontified nil 2440 . 2448) (nil fontified nil 2439 . 2440) (nil fontified nil 2433 . 2439) (nil fontified nil 2432 . 2433) (nil fontified nil 2431 . 2432) (nil fontified nil 2430 . 2431) (nil fontified nil 2429 . 2430) (nil fontified nil 2428 . 2429) (nil fontified nil 2427 . 2428) (nil fontified nil 2426 . 2427) (nil fontified nil 2425 . 2426) (nil fontified nil 2424 . 2425) (nil fontified nil 2423 . 2424) (nil fontified nil 2416 . 2423) (nil fontified nil 2415 . 2416) (nil fontified nil 2414 . 2415) (nil fontified nil 2409 . 2414) (nil fontified nil 2408 . 2409) (nil fontified nil 2404 . 2408) (nil fontified nil 2401 . 2404) (nil fontified nil 2400 . 2401) (nil fontified nil 2399 . 2400) (nil fontified nil 2398 . 2399) (nil fontified nil 2397 . 2398) (nil fontified nil 2396 . 2397) (nil fontified nil 2395 . 2396) (nil fontified nil 2394 . 2395) (nil fontified nil 2386 . 2394) (nil fontified nil 2385 . 2386) (nil fontified nil 2384 . 2385) (nil fontified nil 2383 . 2384) (nil fontified nil 2382 . 2383) (nil fontified nil 2381 . 2382) (nil fontified nil 2380 . 2381) (nil fontified nil 2379 . 2380) (nil fontified nil 2378 . 2379) (nil fontified nil 2377 . 2378) (nil fontified nil 2376 . 2377) (nil fontified nil 2375 . 2376) (nil fontified nil 2374 . 2375) (nil fontified nil 2373 . 2374) (nil fontified nil 2372 . 2373) (nil fontified nil 2371 . 2372) (nil fontified nil 2370 . 2371) (nil fontified nil 2369 . 2370) (nil fontified nil 2361 . 2369) (nil fontified nil 2360 . 2361) (nil fontified nil 2354 . 2360) (nil fontified nil 2353 . 2354) (nil fontified nil 2352 . 2353) (nil fontified nil 2351 . 2352) (nil fontified nil 2350 . 2351) (nil fontified nil 2349 . 2350) (nil fontified nil 2348 . 2349) (nil fontified nil 2347 . 2348) (nil fontified nil 2346 . 2347) (nil fontified nil 2345 . 2346) (nil fontified nil 2344 . 2345) (2344 . 2505)) nil (25192 8794 287311 475000) 0 nil])
([nil nil ((2512 . 2514) (t 25192 8794 294328 200000)) nil (25192 8813 405953 94000) 0 nil])
([nil nil ((2513 . 2515) (#("  " 0 2 (fontified nil)) . 2512) (undo-tree-id320 . -2) (2514 . 2515)) nil (25192 8813 405951 958000) 0 nil])
([nil nil ((2515 . 2525)) nil (25192 8813 405950 459000) 0 nil])
([nil nil ((2522 . 2530) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2522) (undo-tree-id318 . -3) (undo-tree-id319 . 3) 2525) nil (25192 8813 405949 363000) 0 nil])
([nil nil ((2530 . 2531)) nil (25192 8813 405938 875000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2531) (t 25192 8813 412731 900000)) nil (25192 8814 648022 544000) 0 nil])
([nil nil ((2533 . 2535) (t 25192 8814 655455 0)) nil (25192 8821 840863 339000) 0 nil])
([nil nil ((14710 . 14714) (t 25192 8821 849211 600000)) nil (25192 9172 420978 343000) 0 nil])
([nil nil ((14646 . 14650)) nil (25192 9172 420977 792000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -14714) (undo-tree-id324 . -1) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -14715) (undo-tree-id325 . -1) (#("n" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -14716) (undo-tree-id326 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -14717) (undo-tree-id327 . -1) 14718) nil (25192 9172 420976 936000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 14647) (#("n" 0 1 (face font-lock-type-face fontified t)) . 14647) (#("i" 0 1 (face font-lock-type-face fontified t)) . 14647)) nil (25192 9172 420974 516000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -14645) (undo-tree-id322 . -1) (#("_" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -14646) (undo-tree-id323 . -1) 14647) nil (25192 9172 420973 876000) 0 nil])
([nil nil ((14645 . 14647)) nil (25192 9172 420971 969000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14646) (undo-tree-id321 . -1) 14647) nil (25192 9172 420969 678000) 0 nil])
([nil nil ((14755 . 14757) (t 25192 9172 427897 400000)) nil (25192 9179 263970 516000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -14777) (undo-tree-id328 . -1) 14778 (t 25192 9179 271698 300000)) nil (25192 9226 54992 580000) 0 nil])
([nil nil ((14780 . 14781)) nil (25192 9226 54985 973000) 0 nil])
([nil nil ((14773 . 14774)) nil (25192 9226 54982 827000) 0 nil])
([nil nil ((4761 . 4764) (t 25192 9226 62423 100000)) nil (25192 9266 216852 943000) 0 nil])
([nil nil ((4764 . 4768) (t 25192 9266 225421 900000)) nil (25192 9316 495488 647000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4767) (undo-tree-id342 . -1) 4768) nil (25192 9316 495488 207000) 0 nil])
([nil nil ((4764 . 4771) (#("one" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -4764) (undo-tree-id341 . -3) 4767) nil (25192 9316 495487 288000) 0 nil])
([nil nil ((4771 . 4773)) nil (25192 9316 495486 485000) 0 nil])
([nil nil ((4773 . 4783)) nil (25192 9316 495486 214000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -4781) (undo-tree-id339 . -1) (#("p" 0 1 (fontified t)) . -4782) (undo-tree-id340 . -1) 4783) nil (25192 9316 495485 834000) 0 nil])
([nil nil ((4781 . 4785)) nil (25192 9316 495484 579000) 0 nil])
([nil nil ((4781 . 4789) (#("lins" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -4781) (undo-tree-id338 . -4) 4785) nil (25192 9316 495483 841000) 0 nil])
([nil nil ((4789 . 4791)) nil (25192 9316 495482 992000) 0 nil])
([nil nil ((4790 . 4791)) nil (25192 9316 495482 748000) 0 nil])
([nil nil ((4791 . 4792)) nil (25192 9316 495482 228000) 0 nil])
([nil nil ((4792 . 4794)) nil (25192 9316 495481 968000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4793) (undo-tree-id337 . -1) 4794) nil (25192 9316 495481 529000) 0 nil])
([nil nil ((4793 . 4794)) nil (25192 9316 495480 819000) 0 nil])
([nil nil ((4794 . 4796)) nil (25192 9316 495480 532000) 0 nil])
([nil nil ((4797 . 4798)) nil (25192 9316 495480 317000) 0 nil])
([nil nil ((4798 . 4801)) nil (25192 9316 495480 21000) 0 nil])
([nil nil ((4801 . 4804)) nil (25192 9316 495479 814000) 0 nil])
([nil nil ((4801 . 4808) (#("one" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -4801) (undo-tree-id336 . -3) 4804) nil (25192 9316 495479 388000) 0 nil])
([nil nil ((4808 . 4813)) nil (25192 9316 495478 483000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -4810) (undo-tree-id333 . -1) (#("L" 0 1 (fontified t)) . -4811) (undo-tree-id334 . -1) (#("i" 0 1 (fontified t)) . -4812) (undo-tree-id335 . -1) 4813) nil (25192 9316 495477 845000) 0 nil])
([nil nil ((4810 . 4818)) nil (25192 9316 495476 108000) 0 nil])
([nil nil ((4818 . 4822)) nil (25192 9316 495475 825000) 0 nil])
([nil nil ((4818 . 4826) (#("lins" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -4818) (undo-tree-id332 . -4) 4822) nil (25192 9316 495475 434000) 0 nil])
([nil nil ((4826 . 4828)) nil (25192 9316 495474 454000) 0 nil])
([nil nil ((4827 . 4828)) nil (25192 9316 495474 236000) 0 nil])
([nil nil ((4828 . 4829)) nil (25192 9316 495473 865000) 0 nil])
([nil nil ((4829 . 4830)) nil (25192 9316 495473 640000) 0 nil])
([nil nil ((4830 . 4831)) nil (25192 9316 495473 359000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -4830) (undo-tree-id331 . -1) 4831) nil (25192 9316 495473 67000) 0 nil])
([nil nil ((4830 . 4832)) nil (25192 9316 495472 284000) 0 nil])
([nil nil ((4832 . 4833)) nil (25192 9316 495472 10000) 0 nil])
([nil nil ((4833 . 4835)) nil (25192 9316 495471 733000) 0 nil])
([nil nil ((4835 . 4836)) nil (25192 9316 495471 463000) 0 nil])
([nil nil ((4793 . 4795)) nil (25192 9316 495471 147000) 0 nil])
([nil nil ((4838 . 4839)) nil (25192 9316 495470 854000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4838) (undo-tree-id330 . -1) 4839) nil (25192 9316 495470 404000) 0 nil])
([nil nil ((4838 . 4839)) nil (25192 9316 495469 444000) 0 nil])
([nil nil ((4839 . 4840)) nil (25192 9316 495468 762000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4839) (undo-tree-id329 . -1) 4840) nil (25192 9316 495467 895000) 0 nil])
([nil nil ((4839 . 4841)) nil (25192 9316 495458 301000) 0 nil])
([nil nil ((4842 . 4843) (t 25192 9316 502778 700000)) nil (25192 9318 253924 168000) 0 nil])
([nil nil ((4843 . 4846) (t 25192 9318 261135 0)) nil (25192 9319 376419 429000) 0 nil])
([nil nil ((4846 . 4853) (t 25192 9319 384851 300000)) nil (25192 9359 772762 96000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4846) (undo-tree-id352 . -1) (#("l" 0 1 (fontified t)) . -4847) (undo-tree-id353 . -1) (#("p" 0 1 (fontified t)) . -4848) (undo-tree-id354 . -1) (#("h" 0 1 (fontified t)) . -4849) (undo-tree-id355 . -1) (#(" " 0 1 (fontified t)) . -4850) (undo-tree-id356 . -1) (#("=" 0 1 (fontified t)) . -4851) (undo-tree-id357 . -1) (#(" " 0 1 (fontified t)) . -4852) (undo-tree-id358 . -1) 4853) nil (25192 9359 772761 206000) 0 nil])
([nil nil ((4846 . 4852)) nil (25192 9359 772757 367000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -4850) (undo-tree-id350 . -1) (#(" " 0 1 (fontified t)) . -4851) (undo-tree-id351 . -1) 4852) nil (25192 9359 772756 931000) 0 nil])
([nil nil ((4846 . 4852) (#("doub" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -4846) (undo-tree-id349 . -4) 4850) nil (25192 9359 772755 320000) 0 nil])
([nil nil ((4852 . 4861)) nil (25192 9359 772754 305000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -4859) (undo-tree-id347 . -1) (#("=" 0 1 (fontified t)) . -4860) (undo-tree-id348 . -1) 4861) nil (25192 9359 772753 749000) 0 nil])
([nil nil ((4859 . 4865)) nil (25192 9359 772752 536000) 0 nil])
([nil nil ((4865 . 4866)) nil (25192 9359 772752 151000) 0 nil])
([nil nil ((4866 . 4869)) nil (25192 9359 772751 850000) 0 nil])
([nil nil ((4869 . 4879)) nil (25192 9359 772751 361000) 0 nil])
([nil nil ((4879 . 4885)) nil (25192 9359 772751 123000) 0 nil])
([nil nil ((4885 . 4886)) nil (25192 9359 772750 859000) 0 nil])
([nil nil ((4886 . 4889)) nil (25192 9359 772750 622000) 0 nil])
([nil nil ((4885 . 4887)) nil (25192 9359 772750 335000) 0 nil])
([nil nil ((4891 . 4898)) nil (25192 9359 772750 78000) 0 nil])
([nil nil ((4898 . 4903)) nil (25192 9359 772749 772000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -4902) (undo-tree-id346 . -1) 4903) nil (25192 9359 772749 407000) 0 nil])
([nil nil ((4902 . 4903)) nil (25192 9359 772748 451000) 0 nil])
([nil nil ((4898 . 4905) (#("epsil" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -4898) (undo-tree-id344 . -5) (undo-tree-id345 . 5) 4903) nil (25192 9359 772748 15000) 0 nil])
([nil nil ((4905 . 4911)) nil (25192 9359 772745 909000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -4910) (undo-tree-id343 . -1) 4911) nil (25192 9359 772745 358000) 0 nil])
([nil nil ((4910 . 4911)) nil (25192 9359 772738 965000) 0 nil])
([nil nil ((4911 . 4912)) nil (25192 9359 772738 445000) 0 nil])
([nil nil ((4912 . 4915)) nil (25192 9359 772735 397000) 0 nil])
([nil nil ((4915 . 4918) (t 25192 9359 780543 400000)) nil (25192 9389 378403 774000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -4915) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . 1) (#("n" 0 1 (fontified t)) . -4916) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -4917) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) 4918) nil (25192 9389 378400 924000) 0 nil])
([nil nil ((4914 . 4916) (#("  " 0 2 (fontified nil)) . 4913) (undo-tree-id372 . -2) (undo-tree-id373 . -2) (undo-tree-id374 . -2) (4915 . 4916) (t 25192 9389 387248 600000)) nil (25192 9390 358514 981000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("s" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("d" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("l" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("e" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("i" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("f" 0 1 (face font-lock-string-face fontified t)) . 4932) (#(" " 0 1 (face font-lock-string-face fontified t)) . 4932) (#("e" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("h" 0 1 (face font-lock-string-face fontified nil)) . 4932) (#("t" 0 1 (face font-lock-string-face fontified t)) . 4932) (#(" " 0 1 (face font-lock-string-face fontified t)) . 4932) (#("g" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("n" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("i" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("d" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("a" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("o" 0 1 (face font-lock-string-face fontified t)) . 4932) (#("L" 0 1 (face font-lock-string-face fontified t)) . 4932) (t 25192 9390 366039 500000)) nil (25192 9475 313274 816000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -4931) (undo-tree-id385 . -1) (nil syntax-table nil 4941 . 4942) (nil syntax-table (1) 4931 . 4932)) nil (25192 9475 313273 493000) 0 nil])
([nil nil ((4931 . 4933)) nil (25192 9475 313272 479000) 0 nil])
([nil nil ((4933 . 4935)) nil (25192 9475 313272 226000) 0 nil])
([nil nil ((4935 . 4936)) nil (25192 9475 313271 987000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -4931) (undo-tree-id380 . -1) (#(" " 0 1 (fontified t)) . -4932) (undo-tree-id381 . -1) (#("<" 0 1 (fontified t)) . -4933) (undo-tree-id382 . -1) (#("<" 0 1 (fontified t)) . -4934) (undo-tree-id383 . -1) (#(" " 0 1 (fontified t)) . -4935) (undo-tree-id384 . -1) 4936) nil (25192 9475 313271 329000) 0 nil])
([nil nil ((4931 . 4939)) nil (25192 9475 313268 632000) 0 nil])
([nil nil ((4939 . 4940)) nil (25192 9475 313268 411000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -4939) (undo-tree-id379 . -1) 4940) nil (25192 9475 313268 5000) 0 nil])
([nil nil ((4939 . 4941)) nil (25192 9475 313266 977000) 0 nil])
([nil nil ((4941 . 4944)) nil (25192 9475 313266 732000) 0 nil])
([nil nil ((4944 . 4946)) nil (25192 9475 313266 487000) 0 nil])
([nil nil ((4946 . 4949)) nil (25192 9475 313266 162000) 0 nil])
([nil nil ((4949 . 4951)) nil (25192 9475 313265 933000) 0 nil])
([nil nil ((4951 . 4952)) nil (25192 9475 313265 482000) 0 nil])
([nil nil ((4952 . 4963)) nil (25192 9475 313265 193000) 0 nil])
([nil nil ((4963 . 4965)) nil (25192 9475 313264 887000) 0 nil])
([nil nil ((4965 . 4966)) nil (25192 9475 313264 636000) 0 nil])
([nil nil ((4941 . 4942)) nil (25192 9475 313264 390000) 0 nil])
([nil nil ((4943 . 4945) (nil syntax-table nil 4977 . 4978) (nil syntax-table (1) 4942 . 4943) (4942 . 4943)) nil (25192 9475 313264 99000) 0 nil])
([nil nil ((4945 . 4947)) nil (25192 9475 313263 583000) 0 nil])
([nil nil ((4947 . 4948)) nil (25192 9475 313263 335000) 0 nil])
([nil nil ((4944 . 4945) (nil syntax-table nil 4983 . 4984) (nil syntax-table (1) 4942 . 4943) (4943 . 4944)) nil (25192 9475 313262 873000) 0 nil])
([nil nil ((#("\"\\t\" <<" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 4942) (undo-tree-id377 . -7) (undo-tree-id378 . -7) 4949) nil (25192 9475 313262 315000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4948 . 4949) (nil fontified nil 4948 . 4949) (nil fontified nil 4947 . 4948) (nil fontified nil 4946 . 4947) (nil fontified nil 4945 . 4946) (nil fontified nil 4944 . 4945) (nil fontified nil 4943 . 4944) (nil fontified nil 4942 . 4943) (4942 . 4949)) nil (25192 9475 313260 763000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4962 . 4963) (nil fontified nil 4962 . 4963) (nil fontified nil 4961 . 4962) (nil fontified nil 4960 . 4961) (nil fontified nil 4959 . 4960) (nil fontified nil 4958 . 4959) (nil fontified nil 4957 . 4958) (nil fontified nil 4956 . 4957) (4956 . 4963)) nil (25192 9475 313259 584000) 0 nil])
([nil nil ((4963 . 4964)) nil (25192 9475 313258 786000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4972 . 4973) (nil fontified nil 4972 . 4973) (nil fontified nil 4971 . 4972) (nil fontified nil 4970 . 4971) (nil fontified nil 4969 . 4970) (nil fontified nil 4968 . 4969) (nil fontified nil 4967 . 4968) (nil fontified nil 4966 . 4967) (4966 . 4973)) nil (25192 9475 313258 316000) 0 nil])
([nil nil ((4973 . 4974)) nil (25192 9475 313257 543000) 0 nil])
([nil nil ((4966 . 4968)) nil (25192 9475 313257 225000) 0 nil])
([nil nil ((4968 . 4969)) nil (25192 9475 313256 726000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4977) (undo-tree-id375 . -1) (#("<" 0 1 (fontified t)) . 4977) (#("<" 0 1 (fontified t)) . 4977) (undo-tree-id376 . -1)) nil (25192 9475 313254 362000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4997 . 4998) (nil fontified nil 4997 . 4998) (nil fontified nil 4996 . 4997) (nil fontified nil 4995 . 4996) (nil fontified nil 4994 . 4995) (nil fontified nil 4993 . 4994) (nil fontified nil 4992 . 4993) (nil fontified nil 4991 . 4992) (4991 . 4998) (t 25192 9475 320747 400000)) nil (25192 9478 376257 572000) 0 nil])
([nil nil ((4998 . 4999) (t 25192 9478 384652 900000)) nil (25192 9537 487361 306000) 0 nil])
([nil nil ((4999 . 5000)) nil (25192 9537 487360 896000) 0 nil])
([nil nil ((5000 . 5001)) nil (25192 9537 487360 635000) 0 nil])
([nil nil ((5001 . 5003)) nil (25192 9537 487360 220000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5009 . 5010) (nil fontified nil 5009 . 5010) (nil fontified nil 5008 . 5009) (nil fontified nil 5007 . 5008) (nil fontified nil 5006 . 5007) (nil fontified nil 5005 . 5006) (nil fontified nil 5004 . 5005) (nil fontified nil 5003 . 5004) (5003 . 5010)) nil (25192 9537 487359 861000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -5003) (undo-tree-id389 . -1) (nil syntax-table nil 5013 . 5014) (nil syntax-table (1) 5003 . 5004) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -5004) (undo-tree-id390 . -1) (nil syntax-table nil 5014 . 5015) (nil syntax-table (1) 5003 . 5004) (#("t" 0 1 (face font-lock-string-face fontified nil)) . -5005) (undo-tree-id391 . -1) (nil syntax-table nil 5015 . 5016) (nil syntax-table (1) 5003 . 5004) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -5006) (undo-tree-id392 . -1) (#(" " 0 1 (fontified t)) . -5007) (undo-tree-id393 . -1) (#("<" 0 1 (fontified t)) . -5008) (undo-tree-id394 . -1) (#("<" 0 1 (rear-nonsticky t fontified t)) . -5009) (undo-tree-id395 . -1) 5010) nil (25192 9537 487357 958000) 0 nil])
([nil nil ((5003 . 5005)) nil (25192 9537 487353 729000) 0 nil])
([nil nil ((5005 . 5006)) nil (25192 9537 487353 499000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5012 . 5013) (nil fontified nil 5012 . 5013) (nil fontified nil 5011 . 5012) (nil fontified nil 5010 . 5011) (nil fontified nil 5009 . 5010) (nil fontified nil 5008 . 5009) (nil fontified nil 5007 . 5008) (nil fontified nil 5006 . 5007) (5006 . 5013)) nil (25192 9537 487353 131000) 0 nil])
([nil nil ((5013 . 5015)) nil (25192 9537 487352 323000) 0 nil])
([nil nil ((5015 . 5016)) nil (25192 9537 487352 104000) 0 nil])
([nil nil ((5016 . 5018)) nil (25192 9537 487351 807000) 0 nil])
([nil nil ((5018 . 5019)) nil (25192 9537 487351 588000) 0 nil])
([nil nil ((5019 . 5020)) nil (25192 9537 487351 364000) 0 nil])
([nil nil ((5020 . 5021)) nil (25192 9537 487351 134000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5027 . 5028) (nil fontified nil 5027 . 5028) (nil fontified nil 5026 . 5027) (nil fontified nil 5025 . 5026) (nil fontified nil 5024 . 5025) (nil fontified nil 5023 . 5024) (nil fontified nil 5022 . 5023) (nil fontified nil 5021 . 5022) (5021 . 5028)) nil (25192 9537 487350 720000) 0 nil])
([nil nil ((5028 . 5029)) nil (25192 9537 487349 970000) 0 nil])
([nil nil ((5029 . 5031)) nil (25192 9537 487349 689000) 0 nil])
([nil nil ((5030 . 5035)) nil (25192 9537 487349 456000) 0 nil])
([nil nil ((5036 . 5037)) nil (25192 9537 487349 160000) 0 nil])
([nil nil ((5037 . 5038)) nil (25192 9537 487348 870000) 0 nil])
([nil nil ((5038 . 5039)) nil (25192 9537 487348 582000) 0 nil])
([nil nil ((5039 . 5041)) nil (25192 9537 487348 131000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5038) (undo-tree-id386 . -1) (#("<" 0 1 (fontified t)) . -5039) (undo-tree-id387 . -1) (#("<" 0 1 (fontified t)) . -5040) (undo-tree-id388 . -1) 5041) nil (25192 9537 487345 564000) 0 nil])
([nil nil ((4914 . 4916) (#("  " 0 2 (fontified nil)) . 4913) (undo-tree-id396 . -2) (4912 . 4916) (t 25192 9537 495358 100000)) nil (25192 9550 231981 920000) 0 nil])
([nil nil ((4916 . 4919) (t 25192 9550 239860 900000)) nil (25192 9565 129103 761000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t)) . -4916) (undo-tree-id404 . -1) (#("T" 0 1 (fontified t)) . -4917) (undo-tree-id405 . -1) (#("r" 0 1 (fontified t)) . -4918) (undo-tree-id406 . -1) 4919) nil (25192 9565 129102 765000) 0 nil])
([nil nil ((4916 . 4917)) nil (25192 9565 129100 870000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t)) . -4916) (undo-tree-id403 . -1) 4917) nil (25192 9565 129100 440000) 0 nil])
([nil nil ((4916 . 4918)) nil (25192 9565 129099 414000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t)) . -4916) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (#("%" 0 1 (fontified t)) . -4917) (undo-tree-id401 . -1) (undo-tree-id402 . -1) 4918) nil (25192 9565 129098 512000) 0 nil])
([nil nil ((4916 . 4918)) nil (25192 9565 129088 547000) 0 nil])
([nil nil ((4918 . 4932)) nil (25192 9565 129087 499000) 0 nil])
([nil nil ((4932 . 4935)) nil (25192 9565 129084 684000) 0 nil])
([nil nil ((4935 . 4939) (t 25192 9565 136622 200000)) nil (25192 9585 539328 177000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-type-face c-type c-decl-id-start c-is-sws t fontified t)) . -4935) (undo-tree-id420 . -1) (#("o" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -4936) (undo-tree-id421 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -4937) (undo-tree-id422 . -1) (#(" " 0 1 (fontified t)) . -4938) (undo-tree-id423 . -1) 4939) nil (25192 9585 539327 294000) 0 nil])
([nil nil ((4935 . 4937)) nil (25192 9585 539324 573000) 0 nil])
([nil nil ((4935 . 4938) (#("fo" 0 1 (face font-lock-type-face c-is-sws t fontified t) 1 2 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -4935) (undo-tree-id419 . -2) 4937) nil (25192 9585 539324 25000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t c-is-sws t)) . -4935) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#("o" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -4936) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -4937) (undo-tree-id417 . -1) (undo-tree-id418 . -1) 4938) nil (25192 9585 539322 643000) 0 nil])
([nil nil ((4935 . 4937)) nil (25192 9585 539318 384000) 0 nil])
([nil nil ((4935 . 4938) (#("fo" 0 1 (face font-lock-type-face c-is-sws t fontified t) 1 2 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -4935) (undo-tree-id412 . -2) 4937) nil (25192 9585 539317 515000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 4940 4949 nil nil nil nil #s(yas--field 2 4951 4956 nil nil nil nil #s(yas--field 3 4958 4961 nil nil nil nil #s(yas--exit 4975 nil)))) #s(yas--field 2 4951 4956 nil nil nil nil #s(yas--field 3 4958 4961 nil nil nil nil #s(yas--exit 4975 nil))) #s(yas--field 3 4958 4961 nil nil nil nil #s(yas--exit 4975 nil))) #s(yas--exit 4975 nil) 7 nil #s(yas--field 1 4940 4949 nil nil nil nil #s(yas--field 2 4951 4956 nil nil nil nil #s(yas--field 3 4958 4961 nil nil nil nil #s(yas--exit 4975 nil)))) nil nil)) (4976 . 4980) (4969 . 4975) (#("    " 0 4 (fontified nil)) . -4969) (undo-tree-id407 . -4) (4963 . 4967) (4935 . 4971) (#("for" 0 1 (face font-lock-keyword-face fontified t c-is-sws t) 1 3 (face font-lock-keyword-face fontified t)) . 4935) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -3)) nil (25192 9585 539314 2000) 0 nil])
([nil nil ((apply yas--snippet-revive 4935 4981 #s(yas--snippet nil (#s(yas--field 1 4940 4949 nil nil nil nil #s(yas--field 2 4951 4956 nil nil nil nil #s(yas--field 3 4958 4961 nil nil nil nil #s(yas--exit 4975 nil)))) #s(yas--field 2 4951 4956 nil nil nil nil #s(yas--field 3 4958 4961 nil nil nil nil #s(yas--exit 4975 nil))) #s(yas--field 3 4958 4961 nil nil nil nil #s(yas--exit 4975 nil))) #s(yas--exit 4975 nil) 7 nil #s(yas--field 1 4940 4949 nil nil nil nil #s(yas--field 2 4951 4956 nil nil nil nil #s(yas--field 3 4958 4961 nil nil nil nil #s(yas--exit 4975 nil)))) nil nil))) nil (25192 9620 209036 149000) 0 nil])
([nil nil ((4761 . 4764) (t 25192 9585 549111 300000)) nil (25192 9620 209035 857000) 0 nil])
([nil nil ((4764 . 4776)) nil (25192 9620 209035 382000) 0 nil])
([nil nil ((4776 . 4777)) nil (25192 9620 209035 156000) 0 nil])
([nil nil ((4777 . 4780)) nil (25192 9620 209034 901000) 0 nil])
([nil nil ((4780 . 4787)) nil (25192 9620 209034 628000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -4786) (undo-tree-id429 . -1) 4787) nil (25192 9620 209034 216000) 0 nil])
([nil nil ((4786 . 4792)) nil (25192 9620 209033 461000) 0 nil])
([nil nil ((4792 . 4793)) nil (25192 9620 209033 203000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -4828) (undo-tree-id427 . -1) (#("0" 0 1 (fontified t)) . -4829) (undo-tree-id428 . -1) 4830) nil (25192 9620 209032 778000) 0 nil])
([nil nil ((4828 . 4830)) nil (25192 9620 209031 401000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -4829) (undo-tree-id426 . -1) 4830) nil (25192 9620 209031 41000) 0 nil])
([nil nil ((4829 . 4831)) nil (25192 9620 209029 909000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -4872) (undo-tree-id424 . -1) (#("5" 0 1 (fontified t)) . -4873) (undo-tree-id425 . -1) 4874) nil (25192 9620 209028 862000) 0 nil])
([nil nil ((4872 . 4875)) nil (25192 9620 209019 47000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . 4989) (t 25192 9620 216905 200000)) nil (25192 9650 304151 30000) 0 nil])
([nil nil ((4989 . 4992)) nil (25192 9650 304150 618000) 0 nil])
([nil nil ((5004 . 5011)) nil (25192 9650 304150 398000) 0 nil])
([nil nil ((5011 . 5014)) nil (25192 9650 304150 70000) 0 nil])
([nil nil ((5014 . 5016)) nil (25192 9650 304149 850000) 0 nil])
([nil nil ((5015 . 5025)) nil (25192 9650 304149 482000) 0 nil])
([nil nil ((5025 . 5026)) nil (25192 9650 304149 202000) 0 nil])
([nil nil ((5026 . 5029)) nil (25192 9650 304148 914000) 0 nil])
([nil nil ((5029 . 5030)) nil (25192 9650 304148 589000) 0 nil])
([nil nil ((5030 . 5032)) nil (25192 9650 304148 308000) 0 nil])
([nil nil ((5032 . 5035)) nil (25192 9650 304148 93000) 0 nil])
([nil nil ((5035 . 5036)) nil (25192 9650 304147 777000) 0 nil])
([nil nil ((5036 . 5040)) nil (25192 9650 304147 545000) 0 nil])
([nil nil ((5041 . 5043)) nil (25192 9650 304147 52000) 0 nil])
([nil nil ((5043 . 5045)) nil (25192 9650 304146 464000) 0 nil])
([nil nil ((5046 . 5047) (#("	" 0 1 (fontified nil)) . 5045) (undo-tree-id430 . -1) (5044 . 5047)) nil (25192 9650 304144 247000) 0 nil])
([nil nil ((5044 . 5048) (t 25192 9650 311958 100000)) nil (25192 9677 415887 355000) 0 nil])
([nil nil ((5048 . 5055)) nil (25192 9677 415887 22000) 0 nil])
([nil nil ((5052 . 5061) (#("two" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -5052) (undo-tree-id435 . -3) 5055) nil (25192 9677 415886 598000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5052) (undo-tree-id432 . -1) (#("w" 0 1 (fontified t)) . -5053) (undo-tree-id433 . -1) (#("o" 0 1 (fontified t)) . -5054) (undo-tree-id434 . -1) 5055) nil (25192 9677 415885 464000) 0 nil])
([nil nil ((5052 . 5053)) nil (25192 9677 415882 868000) 0 nil])
([nil nil ((5053 . 5061)) nil (25192 9677 415882 380000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 5061) (undo-tree-id431 . -1) (#("o" 0 1 (fontified t)) . 5061) (#("r" 0 1 (fontified t)) . 5061) (#("e" 0 1 (fontified t)) . 5061) (#("z" 0 1 (fontified t)) . 5061) (#("D" 0 1 (fontified t)) . 5061)) nil (25192 9677 415879 958000) 0 nil])
([nil nil ((5061 . 5063) (t 25192 9677 424247 800000)) nil (25192 9685 745112 717000) 0 nil])
([nil nil ((5062 . 5063)) nil (25192 9685 745112 340000) 0 nil])
([nil nil ((5063 . 5064)) nil (25192 9685 745112 41000) 0 nil])
([nil nil ((5064 . 5065)) nil (25192 9685 745111 713000) 0 nil])
([nil nil ((5065 . 5066)) nil (25192 9685 745111 247000) 0 nil])
([nil nil ((5066 . 5067)) nil (25192 9685 745107 857000) 0 nil])
([nil nil ((5068 . 5069) (t 25192 9685 753478 500000)) nil (25192 9688 460171 217000) 0 nil])
([nil nil ((#("
void printQ(twoDvec &v)
{
  for(int i =0 ; i < (int) v.size(); i++)
    {
      for(int j=0 ; j < (int)v[i].size();j++)
	    {
	      cout << v[i][j] << \"\\t\";
	    }
	  cout << endl;
	}

    }
" 0 1 (fontified t) 1 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified t) 5 6 (fontified t) 6 12 (face font-lock-function-name-face fontified t) 12 13 (c-type c-decl-arg-start fontified t) 13 20 (face font-lock-type-face fontified t) 20 22 (fontified t) 22 23 (face font-lock-variable-name-face fontified t) 23 29 (fontified t) 29 32 (face font-lock-keyword-face fontified t) 32 33 (fontified t) 33 35 (face font-lock-type-face fontified t) 35 36 (face font-lock-type-face c-type c-decl-id-start fontified t) 36 37 (fontified t) 37 38 (face font-lock-variable-name-face fontified t) 38 49 (fontified t) 49 52 (face font-lock-type-face fontified t) 52 81 (fontified t) 81 84 (face font-lock-keyword-face fontified t) 84 85 (fontified t) 85 87 (face font-lock-type-face fontified t) 87 88 (face font-lock-type-face c-type c-decl-id-start fontified t) 88 89 (fontified t) 89 90 (face font-lock-variable-name-face fontified t) 90 100 (fontified t) 100 103 (face font-lock-type-face fontified t) 103 154 (fontified t) 154 158 (face font-lock-string-face fontified t) 158 194 (fontified t)) . 14526) (undo-tree-id436 . -17) (undo-tree-id437 . -194) (undo-tree-id438 . -194) 14720 (t 25192 9688 469292 700000)) nil (25192 9717 119876 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14719 . 14720) (nil fontified nil 14684 . 14720) (nil fontified nil 14680 . 14684) (nil fontified nil 14629 . 14680) (nil fontified nil 14626 . 14629) (nil fontified nil 14616 . 14626) (nil fontified nil 14615 . 14616) (nil fontified nil 14614 . 14615) (nil fontified nil 14613 . 14614) (nil fontified nil 14611 . 14613) (nil fontified nil 14610 . 14611) (nil fontified nil 14607 . 14610) (nil fontified nil 14578 . 14607) (nil fontified nil 14575 . 14578) (nil fontified nil 14564 . 14575) (nil fontified nil 14563 . 14564) (nil fontified nil 14562 . 14563) (nil fontified nil 14561 . 14562) (nil fontified nil 14559 . 14561) (nil fontified nil 14558 . 14559) (nil fontified nil 14555 . 14558) (nil fontified nil 14549 . 14555) (nil fontified nil 14548 . 14549) (nil fontified nil 14546 . 14548) (nil fontified nil 14539 . 14546) (nil fontified nil 14538 . 14539) (nil fontified nil 14532 . 14538) (nil fontified nil 14531 . 14532) (nil fontified nil 14530 . 14531) (nil fontified nil 14527 . 14530) (nil fontified nil 14526 . 14527) (14526 . 14720)) nil (25192 9717 119866 98000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 14714)) nil (25192 9717 119863 117000) 0 nil])
([nil nil ((14701 . 14705) (#("	" 0 1 (fontified t)) . 14701) (14681 . 14687) (#("	  " 0 3 (fontified t)) . 14681) (14678 . 14679) (#("	    " 0 5 (fontified t)) . 14678) (14650 . 14653) (#("	      " 0 7 (fontified t)) . 14650) (14647 . 14648) (#("	    " 0 5 (fontified t)) . 14647) 14553) nil (25192 9717 119862 284000) 0 nil])
([nil nil ((14709 . 14710)) nil (25192 9717 331260 625000) 0 nil])
([nil nil ((#("
// MAKES A TWO DIMENSIONAL VECTOR OF ZEROS
twoDvec twoDzeros(int D1 , int D2)
{
  twoDvec dummy;
  oneDvec dummy_col;
  for(int i = 0; i < D1 ; ++i){
    dummy_col.clear();
    for(int j = 0; j < D2 ; ++j){
      dummy_col.push_back(0.0);
    }
    dummy.push_back(dummy_col);
  }
  return dummy;
}
" 0 1 (fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2 4 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4 44 (face font-lock-comment-face fontified t c-in-sws t) 44 45 (face font-lock-type-face fontified t c-is-sws t) 45 50 (face font-lock-type-face fontified t) 50 51 (face font-lock-type-face c-type c-decl-id-start fontified t) 51 52 (fontified t) 52 61 (face font-lock-function-name-face fontified t) 61 62 (c-type c-decl-arg-start fontified t) 62 65 (face font-lock-type-face fontified t) 65 66 (fontified t) 66 68 (face font-lock-variable-name-face fontified t) 68 69 (fontified t) 69 70 (c-type c-decl-arg-start fontified t) 70 71 (fontified t) 71 74 (face font-lock-type-face fontified t) 74 75 (fontified t) 75 77 (face font-lock-variable-name-face fontified t) 77 83 (fontified t) 83 89 (face font-lock-type-face fontified t) 89 90 (face font-lock-type-face c-type c-decl-id-start fontified t) 90 91 (fontified t) 91 96 (face font-lock-variable-name-face fontified t) 96 100 (fontified t) 100 106 (face font-lock-type-face fontified t) 106 107 (face font-lock-type-face c-type c-decl-id-start fontified t) 107 108 (fontified t) 108 117 (face font-lock-variable-name-face fontified t) 117 121 (fontified t) 121 124 (face font-lock-keyword-face fontified t) 124 125 (fontified t) 125 127 (face font-lock-type-face fontified t) 127 128 (face font-lock-type-face c-type c-decl-id-start fontified t) 128 129 (fontified t) 129 130 (face font-lock-variable-name-face fontified t) 130 178 (fontified t) 178 181 (face font-lock-keyword-face fontified t) 181 182 (fontified t) 182 184 (face font-lock-type-face fontified t) 184 185 (face font-lock-type-face c-type c-decl-id-start fontified t) 185 186 (fontified t) 186 187 (face font-lock-variable-name-face fontified t) 187 284 (fontified t) 284 290 (face font-lock-keyword-face fontified t) 290 300 (fontified t)) . 15544) (undo-tree-id444 . -57) (undo-tree-id445 . -300) (undo-tree-id446 . -300) 15844) nil (25192 9735 722482 438000) 0 nil] [nil nil ((nil rear-nonsticky nil 14903 . 14904) (nil fontified nil 14868 . 14904) (nil fontified nil 14864 . 14868) (nil fontified nil 14813 . 14864) (nil fontified nil 14810 . 14813) (nil fontified nil 14800 . 14810) (nil fontified nil 14799 . 14800) (nil fontified nil 14798 . 14799) (nil fontified nil 14797 . 14798) (nil fontified nil 14795 . 14797) (nil fontified nil 14794 . 14795) (nil fontified nil 14791 . 14794) (nil fontified nil 14762 . 14791) (nil fontified nil 14759 . 14762) (nil fontified nil 14748 . 14759) (nil fontified nil 14747 . 14748) (nil fontified nil 14746 . 14747) (nil fontified nil 14745 . 14746) (nil fontified nil 14743 . 14745) (nil fontified nil 14742 . 14743) (nil fontified nil 14739 . 14742) (nil fontified nil 14733 . 14739) (nil fontified nil 14732 . 14733) (nil fontified nil 14730 . 14732) (nil fontified nil 14723 . 14730) (nil fontified nil 14722 . 14723) (nil fontified nil 14716 . 14722) (nil fontified nil 14715 . 14716) (nil fontified nil 14714 . 14715) (nil fontified nil 14711 . 14714) (nil fontified nil 14710 . 14711) (14710 . 14904)) ((#("
void printQ(twoDvec &v)
{
  for(int i =0 ; i < (int) v.size(); i++)
    {
      for(int j=0 ; j < (int)v[i].size();j++)
	    {
	      cout << v[i][j] << \"\\t\";
	    }
	  cout << endl;
	}

    }
" 0 1 (fontified nil) 1 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified nil) 5 6 (fontified nil) 6 12 (face font-lock-function-name-face fontified nil) 12 13 (c-type c-decl-arg-start fontified nil) 13 20 (face font-lock-type-face fontified nil) 20 22 (fontified nil) 22 23 (face font-lock-variable-name-face fontified nil) 23 27 (fontified nil) 27 29 (fontified nil) 29 32 (face font-lock-keyword-face fontified nil) 32 33 (fontified nil) 33 35 (face font-lock-type-face fontified nil) 35 36 (face font-lock-type-face c-type c-decl-id-start fontified nil) 36 37 (fontified nil) 37 38 (face font-lock-variable-name-face fontified nil) 38 49 (fontified nil) 49 52 (face font-lock-type-face fontified nil) 52 75 (fontified nil) 75 81 (fontified nil) 81 84 (face font-lock-keyword-face fontified nil) 84 85 (fontified nil) 85 87 (face font-lock-type-face fontified nil) 87 88 (face font-lock-type-face c-type c-decl-id-start fontified nil) 88 89 (fontified nil) 89 90 (face font-lock-variable-name-face fontified nil) 90 100 (fontified nil) 100 103 (face font-lock-type-face fontified nil) 103 121 (fontified nil) 121 126 (fontified nil) 126 128 (fontified nil) 128 135 (fontified nil) 135 154 (fontified nil) 154 158 (face font-lock-string-face fontified nil) 158 160 (fontified nil) 160 165 (fontified nil) 165 167 (fontified nil) 167 170 (fontified nil) 170 184 (fontified nil) 184 185 (fontified nil) 185 187 (fontified nil) 187 188 (fontified nil) 188 192 (fontified nil) 192 193 (fontified nil) 193 194 (fontified nil rear-nonsticky nil)) . 14710) (undo-tree-id439 . -194) (undo-tree-id440 . -1) (undo-tree-id441 . -6) (undo-tree-id442 . -12) (undo-tree-id443 . -1) (nil fontified t 14710 . 14711) (nil fontified t 14733 . 14737) (nil fontified t 14762 . 14785) (nil fontified t 14836 . 14838) (nil fontified t 14831 . 14836) (nil fontified t 14813 . 14831) (nil fontified t 14897 . 14898) (nil fontified t 14895 . 14897) (nil fontified t 14894 . 14895) (nil fontified t 14880 . 14894) (nil fontified t 14877 . 14880) (nil fontified t 14875 . 14877) (nil fontified t 14870 . 14875) (nil fontified t 14868 . 14870) (nil rear-nonsticky t 14903 . 14904)) (25192 9717 134340 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15843 . 15844) (nil fontified nil 15834 . 15844) (nil fontified nil 15828 . 15834) (nil fontified nil 15731 . 15828) (nil fontified nil 15730 . 15731) (nil fontified nil 15729 . 15730) (nil fontified nil 15728 . 15729) (nil fontified nil 15726 . 15728) (nil fontified nil 15725 . 15726) (nil fontified nil 15722 . 15725) (nil fontified nil 15674 . 15722) (nil fontified nil 15673 . 15674) (nil fontified nil 15672 . 15673) (nil fontified nil 15671 . 15672) (nil fontified nil 15669 . 15671) (nil fontified nil 15668 . 15669) (nil fontified nil 15665 . 15668) (nil fontified nil 15661 . 15665) (nil fontified nil 15652 . 15661) (nil fontified nil 15651 . 15652) (nil fontified nil 15650 . 15651) (nil fontified nil 15644 . 15650) (nil fontified nil 15640 . 15644) (nil fontified nil 15635 . 15640) (nil fontified nil 15634 . 15635) (nil fontified nil 15633 . 15634) (nil fontified nil 15627 . 15633) (nil fontified nil 15621 . 15627) (nil fontified nil 15619 . 15621) (nil fontified nil 15618 . 15619) (nil fontified nil 15615 . 15618) (nil fontified nil 15614 . 15615) (nil fontified nil 15613 . 15614) (nil fontified nil 15612 . 15613) (nil fontified nil 15610 . 15612) (nil fontified nil 15609 . 15610) (nil fontified nil 15606 . 15609) (nil fontified nil 15605 . 15606) (nil fontified nil 15596 . 15605) (nil fontified nil 15595 . 15596) (nil fontified nil 15594 . 15595) (nil fontified nil 15589 . 15594) (nil fontified nil 15588 . 15589) (nil fontified nil 15548 . 15588) (nil fontified nil 15546 . 15548) (nil fontified nil 15545 . 15546) (nil fontified nil 15544 . 15545) (15544 . 15844)) nil (25192 9735 722473 92000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 14892) (14885 . 14889) (#("	" 0 1 (fontified t)) . 14885) (14865 . 14871) (#("	  " 0 3 (fontified t)) . 14865) (14862 . 14863) (#("	    " 0 5 (fontified t)) . 14862) (14834 . 14837) (#("	      " 0 7 (fontified t)) . 14834) (14831 . 14832) (#("	    " 0 5 (fontified t)) . 14831) 14711) ((14831 . 14836) (#("	" 0 1 (fontified t)) . 14831) (14834 . 14841) (#("	  " 0 3 (fontified t)) . 14834) (14862 . 14867) (#("	" 0 1 (fontified t)) . 14862) (14865 . 14868) (#("      " 0 6 (fontified t)) . 14865) (14885 . 14886) (#("    " 0 4 (fontified t)) . 14885) (14892 . 14896)) (25192 9717 119853 141000) 0 nil])
([nil nil ((15844 . 15845)) nil (25192 9735 722470 459000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 16144 . 16145) (nil fontified nil 16135 . 16145) (nil fontified nil 16129 . 16135) (nil fontified nil 16032 . 16129) (nil fontified nil 16031 . 16032) (nil fontified nil 16030 . 16031) (nil fontified nil 16029 . 16030) (nil fontified nil 16027 . 16029) (nil fontified nil 16026 . 16027) (nil fontified nil 16023 . 16026) (nil fontified nil 15975 . 16023) (nil fontified nil 15974 . 15975) (nil fontified nil 15973 . 15974) (nil fontified nil 15972 . 15973) (nil fontified nil 15970 . 15972) (nil fontified nil 15969 . 15970) (nil fontified nil 15966 . 15969) (nil fontified nil 15962 . 15966) (nil fontified nil 15953 . 15962) (nil fontified nil 15952 . 15953) (nil fontified nil 15951 . 15952) (nil fontified nil 15945 . 15951) (nil fontified nil 15941 . 15945) (nil fontified nil 15936 . 15941) (nil fontified nil 15935 . 15936) (nil fontified nil 15934 . 15935) (nil fontified nil 15928 . 15934) (nil fontified nil 15922 . 15928) (nil fontified nil 15920 . 15922) (nil fontified nil 15919 . 15920) (nil fontified nil 15916 . 15919) (nil fontified nil 15915 . 15916) (nil fontified nil 15914 . 15915) (nil fontified nil 15913 . 15914) (nil fontified nil 15911 . 15913) (nil fontified nil 15910 . 15911) (nil fontified nil 15907 . 15910) (nil fontified nil 15906 . 15907) (nil fontified nil 15897 . 15906) (nil fontified nil 15896 . 15897) (nil fontified nil 15895 . 15896) (nil fontified nil 15890 . 15895) (nil fontified nil 15889 . 15890) (nil fontified nil 15849 . 15889) (nil fontified nil 15847 . 15849) (nil fontified nil 15846 . 15847) (nil fontified nil 15845 . 15846) (15845 . 16145)) nil (25192 9735 722469 379000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-type-face c-is-sws t fontified t)) . 15889) (#("w" 0 1 (face font-lock-type-face c-is-sws t fontified t)) . 15889) (#("t" 0 1 (face font-lock-type-face fontified t c-is-sws t)) . 15889)) nil (25192 9735 722466 134000) 0 nil])
([nil nil ((15889 . 15892)) nil (25192 9735 722462 889000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-function-name-face fontified t)) . 15897) (#("w" 0 1 (face font-lock-function-name-face fontified t)) . 15897) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . 15897) (t 25192 9735 731579 600000)) nil (25192 9741 517652 424000) 0 nil])
([nil nil ((15897 . 15898)) nil (25192 9741 517651 301000) 0 nil])
([nil nil ((15898 . 15900)) nil (25192 9741 517647 603000) 0 nil])
([nil nil ((15922 . 15923) (t 25192 9741 529386 100000)) nil (25192 9747 240027 273000) 0 nil])
([nil nil ((15923 . 15924)) nil (25192 9747 240026 662000) 0 nil])
([nil nil ((15924 . 15931)) nil (25192 9747 240023 709000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-type-face fontified t)) . -15937) (undo-tree-id465 . -1) (#("w" 0 1 (face font-lock-type-face fontified t)) . -15938) (undo-tree-id466 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -15939) (undo-tree-id467 . -1) 15940 (t 25192 9747 248614 800000)) nil (25192 9814 342733 874000) 0 nil])
([nil nil ((15937 . 15940)) nil (25192 9814 342732 304000) 0 nil])
([nil nil ((15951 . 15954)) nil (25192 9814 342732 100000) 0 nil])
([nil nil ((15954 . 15955)) nil (25192 9814 342731 825000) 0 nil])
([nil nil ((15955 . 15957)) nil (25192 9814 342731 624000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15952) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (#(" " 0 1 (fontified t)) . -15953) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#("t" 0 1 (fontified t)) . -15954) (undo-tree-id458 . -1) (undo-tree-id459 . 1) (undo-tree-id460 . -1) (#("w" 0 1 (fontified t)) . -15955) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (#("o" 0 1 (fontified t)) . -15956) (undo-tree-id463 . -1) (undo-tree-id464 . -1) 15957) nil (25192 9814 342730 783000) 0 nil])
([nil nil ((#("
  oneDvec dummy_col;
" 0 1 (fontified t) 1 3 (fontified t) 3 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face c-type c-decl-id-start fontified t) 10 11 (fontified t) 11 20 (face font-lock-variable-name-face fontified t) 20 22 (fontified t)) . -15952) (undo-tree-id447 . -22) (undo-tree-id448 . -22) (undo-tree-id449 . -22) 15974) nil (25192 9814 342722 594000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 15974) (t 25192 9814 351146 300000)) nil (25192 9821 993937 724000) 0 nil])
([nil nil ((15974 . 15975)) nil (25192 9821 993934 771000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -15974) (undo-tree-id468 . -1) 15975 (t 25192 9822 3066 900000)) nil (25192 9825 63245 460000) 0 nil])
([nil nil ((15974 . 15975)) nil (25192 9825 63232 607000) 0 nil])
([nil nil ((#("dummy_col.clear();
    for(int j = 0; j < D2 ; ++j){
      dummy_col.push_back(0.0);
    }" 0 23 (fontified t) 23 26 (face font-lock-keyword-face fontified t) 26 27 (fontified t) 27 29 (face font-lock-type-face fontified t) 29 30 (face font-lock-type-face c-type c-decl-id-start fontified t) 30 31 (fontified t) 31 32 (face font-lock-variable-name-face fontified t) 32 90 (fontified t)) . -15988) (undo-tree-id482 . -90) (undo-tree-id483 . -90) (undo-tree-id484 . 1) (undo-tree-id485 . -90) (undo-tree-id486 . 39) (undo-tree-id487 . -52) 16078 (t 25192 9825 73697 0)) nil (25192 9862 964389 78000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 16009) (#("o" 0 1 (fontified t)) . 16009) (#("c" 0 1 (fontified t)) . 16009) (#("_" 0 1 (fontified t)) . 16009) (#("y" 0 1 (fontified t)) . 16009) (#("m" 0 1 (fontified t)) . 16009) (#("m" 0 1 (fontified t)) . 16009) (#("u" 0 1 (fontified t)) . 16009) (#("d" 0 1 (fontified t)) . 16009)) nil (25192 9862 964385 22000) 0 nil])
([nil nil ((16009 . 16011)) nil (25192 9862 964383 851000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -16010) (undo-tree-id481 . -1) 16011) nil (25192 9862 964383 449000) 0 nil])
([nil nil ((16010 . 16012)) nil (25192 9862 964382 590000) 0 nil])
([nil nil ((16009 . 16018) (#("two" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -16009) (undo-tree-id480 . -3) 16012) nil (25192 9862 964382 207000) 0 nil])
([nil nil ((16018 . 16020)) nil (25192 9862 964381 243000) 0 nil])
([nil nil ((16019 . 16021)) nil (25192 9862 964380 982000) 0 nil])
([nil nil ((16021 . 16022)) nil (25192 9862 964380 605000) 0 nil])
([nil nil ((16022 . 16024)) nil (25192 9862 964380 92000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -15983) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t)) . -15984) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#(" " 0 1 (fontified t)) . -15985) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#(" " 0 1 (fontified t)) . -15986) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#(" " 0 1 (fontified t)) . -15987) (undo-tree-id478 . -1) (undo-tree-id479 . -1) 15988) nil (25192 9862 964376 923000) 0 nil])
([nil nil ((15982 . 15987) (t 25192 9862 973287 0)) nil (25192 9866 387740 887000) 0 nil])
([nil nil ((16028 . 16032) (#("  " 0 2 (fontified t)) . 16028) 16031) nil (25192 9866 387737 473000) 0 nil])
([nil nil ((15989 . 15995) (#("    " 0 4 (fontified t)) . 15989) 15994 (t 25192 9866 396473 100000)) nil (25192 9867 817047 911000) 0 nil])
([nil nil ((4947 . 4949) (t 25192 9867 825711 200000)) nil (25192 9888 592500 574000) 0 nil])
([nil nil ((4949 . 4952)) nil (25192 9888 592500 259000) 0 nil])
([nil nil ((4949 . 4956) (#("tri" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -4949) (undo-tree-id488 . -3) (undo-tree-id489 . 3) 4952) nil (25192 9888 592499 643000) 0 nil])
([nil nil ((4956 . 4959)) nil (25192 9888 592491 806000) 0 nil])
([nil nil ((4959 . 4960)) nil (25192 9888 592491 387000) 0 nil])
([nil nil ((4960 . 4963)) nil (25192 9888 592488 362000) 0 nil])
([nil nil ((#("double magnitude(oneDvec &v);" 0 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 16 (face font-lock-function-name-face fontified t) 16 17 (c-type c-decl-arg-start fontified t) 17 24 (face font-lock-type-face fontified t) 24 26 (fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 28 (fontified t) 28 29 (fontified t)) . 2536) (t 25192 9888 601090 500000)) nil (25192 9925 681135 302000) 0 nil])
([nil nil ((#("oneDvec normalize(oneDvec &v);" 0 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face c-type c-decl-id-start fontified t) 7 8 (fontified t) 8 17 (face font-lock-function-name-face fontified t) 17 18 (c-type c-decl-arg-start fontified t) 18 25 (face font-lock-type-face fontified t) 25 27 (fontified t) 27 28 (face font-lock-variable-name-face fontified t) 28 30 (fontified t)) . 2537)) nil (25192 9925 681134 887000) 0 nil])
([nil nil ((#("double dot_prod(oneDvec &v1 , oneDvec &v2);" 0 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 15 (face font-lock-function-name-face fontified t) 15 16 (c-type c-decl-arg-start fontified t) 16 23 (face font-lock-type-face fontified t) 23 25 (fontified t) 25 27 (face font-lock-variable-name-face fontified t) 27 28 (fontified t) 28 29 (c-type c-decl-arg-start fontified t) 29 30 (fontified t) 30 37 (face font-lock-type-face fontified t) 37 39 (fontified t) 39 41 (face font-lock-variable-name-face fontified t) 41 43 (fontified t)) . 2639)) nil (25192 9925 681134 574000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2639) (undo-tree-id498 . -1) 2640) nil (25192 9925 681134 174000) 0 nil])
([nil nil ((#("twoDvec twoDzeros(int D1 , int D2);" 0 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face c-type c-decl-id-start fontified t) 7 8 (fontified t) 8 17 (face font-lock-function-name-face fontified t) 17 18 (c-type c-decl-arg-start fontified t) 18 21 (face font-lock-type-face fontified t) 21 22 (fontified t) 22 24 (face font-lock-variable-name-face fontified t) 24 25 (fontified t) 25 26 (c-type c-decl-arg-start fontified t) 26 27 (fontified t) 27 30 (face font-lock-type-face fontified t) 30 31 (fontified t) 31 33 (face font-lock-variable-name-face fontified t) 33 35 (fontified t)) . 2639)) nil (25192 9925 681133 380000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2673 . 2674) (nil fontified nil 2672 . 2674) (nil fontified nil 2670 . 2672) (nil fontified nil 2669 . 2670) (nil fontified nil 2666 . 2669) (nil fontified nil 2665 . 2666) (nil fontified nil 2664 . 2665) (nil fontified nil 2663 . 2664) (nil fontified nil 2661 . 2663) (nil fontified nil 2660 . 2661) (nil fontified nil 2657 . 2660) (nil fontified nil 2656 . 2657) (nil fontified nil 2647 . 2656) (nil fontified nil 2646 . 2647) (nil fontified nil 2645 . 2646) (nil fontified nil 2639 . 2645) (2639 . 2674)) nil (25192 9925 681132 937000) 0 nil])
([nil nil ((2674 . 2675)) nil (25192 9925 681131 991000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2709 . 2710) (nil fontified nil 2708 . 2710) (nil fontified nil 2706 . 2708) (nil fontified nil 2705 . 2706) (nil fontified nil 2702 . 2705) (nil fontified nil 2701 . 2702) (nil fontified nil 2700 . 2701) (nil fontified nil 2699 . 2700) (nil fontified nil 2697 . 2699) (nil fontified nil 2696 . 2697) (nil fontified nil 2693 . 2696) (nil fontified nil 2692 . 2693) (nil fontified nil 2683 . 2692) (nil fontified nil 2682 . 2683) (nil fontified nil 2681 . 2682) (nil fontified nil 2675 . 2681) (2675 . 2710)) nil (25192 9925 681131 435000) 0 nil])
([nil nil ((2708 . 2709)) nil (25192 9925 681130 184000) 0 nil])
([nil nil ((2709 . 2710)) nil (25192 9925 681129 748000) 0 nil])
([nil nil ((2710 . 2717)) nil (25192 9925 681129 385000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-function-name-face fontified t)) . -2683) (undo-tree-id494 . -1) (undo-tree-id495 . 1) (#("w" 0 1 (face font-lock-function-name-face fontified t)) . -2684) (undo-tree-id496 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -2685) (undo-tree-id497 . -1) 2686) nil (25192 9925 681128 743000) 0 nil])
([nil nil ((2683 . 2686)) nil (25192 9925 681126 338000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-type-face fontified t)) . -2675) (undo-tree-id490 . -1) (undo-tree-id491 . 1) (#("w" 0 1 (face font-lock-type-face fontified t)) . -2676) (undo-tree-id492 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -2677) (undo-tree-id493 . -1) 2678) nil (25192 9925 681125 202000) 0 nil])
([nil nil ((2675 . 2678)) nil (25192 9925 681113 303000) 0 nil])
([nil nil ((5027 . 5031) (t 25192 9925 689545 0)) nil (25192 9937 595125 240000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 4841) (t 25192 9937 604564 800000)) nil (25192 9968 600870 256000) 0 nil])
([nil nil ((4841 . 4842)) nil (25192 9968 600869 881000) 0 nil])
([nil nil ((4842 . 4843)) nil (25192 9968 600869 607000) 0 nil])
([nil nil ((4843 . 4856)) nil (25192 9968 600869 329000) 0 nil])
([nil nil ((4856 . 4857)) nil (25192 9968 600869 53000) 0 nil])
([nil nil ((4857 . 4861)) nil (25192 9968 600868 701000) 0 nil])
([nil nil ((4858 . 4865) (#("eps" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t)) . -4858) (undo-tree-id504 . -3) 4861) nil (25192 9968 600868 114000) 0 nil])
([nil nil ((4865 . 4871)) nil (25192 9968 600867 216000) 0 nil])
([nil nil ((4871 . 4872)) nil (25192 9968 600866 991000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -4871) (undo-tree-id503 . -1) 4872) nil (25192 9968 600866 640000) 0 nil])
([nil nil ((4871 . 4872)) nil (25192 9968 600865 828000) 0 nil])
([nil nil ((4872 . 4873)) nil (25192 9968 600865 502000) 0 nil])
([nil nil ((#("," 0 1 (c-type c-decl-id-start fontified t)) . -4871) (undo-tree-id501 . -1) (#(" " 0 1 (fontified t)) . -4872) (undo-tree-id502 . -1) 4873) nil (25192 9968 600865 55000) 0 nil])
([nil nil ((4871 . 4872)) nil (25192 9968 600863 306000) 0 nil])
([nil nil ((4872 . 4873)) nil (25192 9968 600863 81000) 0 nil])
([nil nil ((4873 . 4876)) nil (25192 9968 600862 837000) 0 nil])
([nil nil ((4876 . 4877)) nil (25192 9968 600862 552000) 0 nil])
([nil nil ((4877 . 4880)) nil (25192 9968 600862 277000) 0 nil])
([nil nil ((4880 . 4881)) nil (25192 9968 600861 956000) 0 nil])
([nil nil ((#("," 0 1 (c-type c-decl-id-start fontified t)) . -4880) (undo-tree-id500 . -1) 4881) nil (25192 9968 600861 570000) 0 nil])
([nil nil ((4880 . 4881)) nil (25192 9968 600860 239000) 0 nil])
([nil nil ((4881 . 4882)) nil (25192 9968 600859 754000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-warning-face fontified t)) . -4881) (undo-tree-id499 . -1) 4882) nil (25192 9968 600857 267000) 0 nil])
([nil nil ((#("  double gamma = 1.0;" 0 2 (fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face c-type c-decl-id-start fontified t) 8 9 (fontified t) 9 10 (face font-lock-variable-name-face fontified t) 10 11 (face font-lock-variable-name-face fontified t) 11 12 (face font-lock-variable-name-face fontified t) 12 13 (face font-lock-variable-name-face fontified t) 13 14 (face font-lock-variable-name-face fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t)) . 4882) (undo-tree-id516 . -21) (undo-tree-id517 . -21) (undo-tree-id518 . -21) (undo-tree-id519 . -9) (undo-tree-id520 . -14) (t 25192 9968 609402 300000)) nil (25192 9973 993109 853000) 0 nil])
([nil nil ((#("
  double epsilon = 0.1;" 0 1 (fontified t) 1 3 (fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face fontified t) 8 9 (face font-lock-type-face c-type c-decl-id-start fontified t) 9 10 (fontified t) 10 17 (face font-lock-variable-name-face fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t)) . -4882) (undo-tree-id511 . -24) (undo-tree-id512 . -24) (undo-tree-id513 . -1) (undo-tree-id514 . -10) (undo-tree-id515 . -17) 4906) nil (25192 9973 993106 787000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4881) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) 4882) nil (25192 9973 993102 417000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -4847) (undo-tree-id521 . -1) 4848 (t 25192 9974 1805 600000)) nil (25192 9986 994133 170000) 0 nil])
([nil nil ((5019 . 5023) (t 25192 9987 3141 600000)) nil (25192 9991 213185 682000) 0 nil])
([nil nil ((5023 . 5025) (t 25192 9991 223580 300000)) nil (25192 10062 946115 568000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5024) (undo-tree-id549 . -1) 5025) nil (25192 10062 946115 48000) 0 nil])
([nil nil ((5024 . 5025)) nil (25192 10062 946114 240000) 0 nil])
([nil nil ((5025 . 5031)) nil (25192 10062 946113 951000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -5030) (undo-tree-id548 . -1) 5031) nil (25192 10062 946113 580000) 0 nil])
([nil nil ((5030 . 5036)) nil (25192 10062 946112 709000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5032) (undo-tree-id544 . -1) (#(" " 0 1 (fontified t)) . -5033) (undo-tree-id545 . -1) (#(" " 0 1 (fontified t)) . -5034) (undo-tree-id546 . -1) (#(" " 0 1 (fontified t)) . -5035) (undo-tree-id547 . -1) 5036) nil (25192 10062 946111 979000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5030) (undo-tree-id534 . -1) (#(" " 0 1 (fontified t)) . -5031) (undo-tree-id535 . -1) (#(" " 0 1 (fontified t)) . -5032) (undo-tree-id536 . -1) (#(" " 0 1 (fontified t)) . -5033) (undo-tree-id537 . -1) (#(" " 0 1 (fontified t)) . -5034) (undo-tree-id538 . -1) (#(" " 0 1 (fontified t)) . -5035) (undo-tree-id539 . -1) (#(" " 0 1 (fontified t)) . -5036) (undo-tree-id540 . -1) (#(" " 0 1 (fontified t)) . -5037) (undo-tree-id541 . -1) (#(" " 0 1 (fontified nil)) . -5038) (undo-tree-id542 . -1) (#("	" 0 1 (fontified nil)) . 5039) (undo-tree-id543 . -1) (5031 . 5039) 5032) nil (25192 10062 946108 874000) 0 nil])
([nil nil ((5030 . 5031)) nil (25192 10062 946103 727000) 0 nil])
([nil nil ((5031 . 5035)) nil (25192 10062 946103 510000) 0 nil])
([nil nil ((5035 . 5042)) nil (25192 10062 946103 223000) 0 nil])
([nil nil ((5042 . 5043)) nil (25192 10062 946102 619000) 0 nil])
([nil nil ((5043 . 5047)) nil (25192 10062 946102 400000) 0 nil])
([nil nil ((5047 . 5050)) nil (25192 10062 946102 98000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 5052 5061 nil nil nil t #s(yas--field 2 5063 5068 nil nil nil nil #s(yas--field 3 5070 5073 nil nil nil nil #s(yas--exit 5089 nil)))) #s(yas--field 2 5063 5068 nil nil nil nil #s(yas--field 3 5070 5073 nil nil nil nil #s(yas--exit 5089 nil))) #s(yas--field 3 5070 5073 nil nil nil nil #s(yas--exit 5089 nil))) #s(yas--exit 5089 nil) 8 nil #s(yas--field 1 5052 5061 nil nil nil t #s(yas--field 2 5063 5068 nil nil nil nil #s(yas--field 3 5070 5073 nil nil nil nil #s(yas--exit 5089 nil)))) nil nil)) (5090 . 5095) (5082 . 5089) (#("    " 0 4 (fontified nil)) . -5082) (undo-tree-id531 . -4) (5075 . 5080) (5047 . 5083) (#("for" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t)) . 5047) (undo-tree-id532 . -3) (undo-tree-id533 . -3)) nil (25192 10062 946101 550000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . 5056)) nil (25192 10062 946099 433000) 0 nil])
([nil nil ((5056 . 5057)) nil (25192 10062 946099 98000) 0 nil])
([nil nil ((apply yas--snippet-revive 5047 5096 #s(yas--snippet nil (#s(yas--field 1 5052 5061 nil nil nil t #s(yas--field 2 5063 5068 nil nil nil nil #s(yas--field 3 5070 5073 nil nil nil nil #s(yas--exit 5089 nil)))) #s(yas--field 2 5063 5068 nil nil nil nil #s(yas--field 3 5070 5073 nil nil nil nil #s(yas--exit 5089 nil))) #s(yas--field 3 5070 5073 nil nil nil nil #s(yas--exit 5089 nil))) #s(yas--exit 5089 nil) 8 nil #s(yas--field 1 5052 5061 nil nil nil t #s(yas--field 2 5063 5068 nil nil nil nil #s(yas--field 3 5070 5073 nil nil nil nil #s(yas--exit 5089 nil)))) nil nil))) nil (25192 10062 946098 781000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 5063)) nil (25192 10062 946098 438000) 0 nil])
([nil nil ((5063 . 5064)) nil (25192 10062 946098 152000) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-variable-name-face fontified t)) . -5056) (undo-tree-id530 . -1) 5057) nil (25192 10062 946097 777000) 0 nil])
([nil nil ((5056 . 5063)) nil (25192 10062 946096 918000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . 5069)) nil (25192 10062 946096 532000) 0 nil])
([nil nil ((5069 . 5077)) nil (25192 10062 946095 941000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5076) (undo-tree-id529 . -1) 5077) nil (25192 10062 946095 553000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -5079) (undo-tree-id528 . -1) 5080) nil (25192 10062 946094 295000) 0 nil])
([nil nil ((5079 . 5081)) nil (25192 10062 946093 517000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -5079) (undo-tree-id526 . -1) (#("p" 0 1 (fontified t)) . -5080) (undo-tree-id527 . -1) 5081) nil (25192 10062 946093 78000) 0 nil])
([nil nil ((5079 . 5087)) nil (25192 10062 946091 789000) 0 nil])
([nil nil ((4894 . 4897)) nil (25192 10062 946091 582000) 0 nil])
([nil nil ((4897 . 4901)) nil (25192 10062 946091 359000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4892)) nil (25192 10062 946091 52000) 0 nil])
([nil nil ((4900 . 4915)) nil (25192 10062 946090 831000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -4911) (undo-tree-id525 . -1) 4912) nil (25192 10062 946090 549000) 0 nil])
([nil nil ((4911 . 4913)) nil (25192 10062 946089 457000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -4911) (undo-tree-id523 . -1) (#("0" 0 1 (fontified t)) . -4912) (undo-tree-id524 . -1) 4913) nil (25192 10062 946089 19000) 0 nil])
([nil nil ((4911 . 4912)) nil (25192 10062 946087 520000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -4911) (undo-tree-id522 . -1) 4912) nil (25192 10062 946086 784000) 0 nil])
([nil nil ((4911 . 4912)) nil (25192 10062 946079 959000) 0 nil])
([nil nil ((4915 . 4916)) nil (25192 10062 946077 405000) 0 nil])
([nil nil ((5122 . 5130) (t 25192 10062 955625 100000)) nil (25192 10071 436276 335000) 0 nil])
([nil nil ((5130 . 5132) (t 25192 10071 452010 0)) nil (25192 10105 127280 626000) 0 nil])
([nil nil ((5132 . 5134)) nil (25192 10105 127280 155000) 0 nil])
([nil nil ((5133 . 5137)) nil (25192 10105 127279 782000) 0 nil])
([nil nil ((5137 . 5139)) nil (25192 10105 127279 518000) 0 nil])
([nil nil ((5139 . 5140)) nil (25192 10105 127279 250000) 0 nil])
([nil nil ((5140 . 5142)) nil (25192 10105 127278 969000) 0 nil])
([nil nil ((5142 . 5145)) nil (25192 10105 127278 620000) 0 nil])
([nil nil ((5145 . 5149)) nil (25192 10105 127278 318000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5148) (undo-tree-id576 . -1) 5149) nil (25192 10105 127277 955000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5147) (undo-tree-id567 . -1) (#(" " 0 1 (fontified t)) . -5148) (undo-tree-id568 . -1) (#(" " 0 1 (fontified t)) . -5149) (undo-tree-id569 . -1) (#(" " 0 1 (fontified t)) . -5150) (undo-tree-id570 . -1) (#(" " 0 1 (fontified t)) . -5151) (undo-tree-id571 . -1) (#(" " 0 1 (fontified t)) . -5152) (undo-tree-id572 . -1) (#(" " 0 1 (fontified t)) . -5153) (undo-tree-id573 . -1) (#(" " 0 1 (fontified nil)) . -5154) (undo-tree-id574 . -1) (#("	" 0 1 (fontified nil)) . 5155) (undo-tree-id575 . -1) (5147 . 5155) 5148) nil (25192 10105 127276 473000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -5143) (undo-tree-id555 . -1) (#("e" 0 1 (fontified t)) . -5144) (undo-tree-id556 . -1) (#("
" 0 1 (fontified t)) . -5145) (undo-tree-id557 . -1) (#(" " 0 1 (fontified t)) . -5146) (undo-tree-id558 . -1) (#(" " 0 1 (fontified t)) . -5147) (undo-tree-id559 . -1) (#(" " 0 1 (fontified t)) . -5148) (undo-tree-id560 . -1) (#(" " 0 1 (fontified t)) . -5149) (undo-tree-id561 . -1) (#(" " 0 1 (fontified t)) . -5150) (undo-tree-id562 . -1) (#(" " 0 1 (fontified t)) . -5151) (undo-tree-id563 . -1) (#(" " 0 1 (fontified t)) . -5152) (undo-tree-id564 . -1) (#(" " 0 1 (fontified nil)) . -5153) (undo-tree-id565 . -1) (#("	" 0 1 (fontified nil)) . 5154) (undo-tree-id566 . -1) (5146 . 5154) 5147) nil (25192 10105 127270 243000) 0 nil])
([nil nil ((5140 . 5146) (#("dou" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -5140) (undo-tree-id554 . -3) 5143) nil (25192 10105 127262 822000) 0 nil])
([nil nil ((5146 . 5148)) nil (25192 10105 127261 779000) 0 nil])
([nil nil ((5147 . 5151)) nil (25192 10105 127261 468000) 0 nil])
([nil nil ((5147 . 5155) (#("RAND" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -5147) (undo-tree-id552 . -4) (undo-tree-id553 . 4) 5151) nil (25192 10105 127260 864000) 0 nil])
([nil nil ((5156 . 5157)) nil (25192 10105 127259 196000) 0 nil])
([nil nil ((5157 . 5158)) nil (25192 10105 127258 868000) 0 nil])
([nil nil ((5158 . 5159)) nil (25192 10105 127258 580000) 0 nil])
([nil nil ((5159 . 5161)) nil (25192 10105 127258 254000) 0 nil])
([nil nil ((5160 . 5163)) nil (25192 10105 127257 952000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -5161) (undo-tree-id550 . -1) (#("2" 0 1 (fontified t)) . -5162) (undo-tree-id551 . -1) 5163) nil (25192 10105 127257 90000) 0 nil])
([nil nil ((5161 . 5167)) nil (25192 10105 127247 613000) 0 nil])
([nil nil ((5167 . 5168)) nil (25192 10105 127247 32000) 0 nil])
([nil nil ((5168 . 5169)) nil (25192 10105 127243 976000) 0 nil])
([nil nil ((5169 . 5176) (t 25192 10105 138875 100000)) nil (25192 10118 838951 364000) 0 nil])
([nil nil ((5175 . 5176)) nil (25192 10118 838948 506000) 0 nil])
([nil nil ((5179 . 5181) (t 25192 10118 848503 900000)) nil (25192 10144 138943 619000) 0 nil])
([nil nil ((5180 . 5183)) nil (25192 10144 138943 21000) 0 nil])
([nil nil ((5180 . 5188) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -5180) (undo-tree-id578 . -3) (undo-tree-id579 . 3) 5183) nil (25192 10144 138942 253000) 0 nil])
([nil nil ((5188 . 5191)) nil (25192 10144 138939 982000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -5190) (undo-tree-id577 . -1) 5191) nil (25192 10144 138939 29000) 0 nil])
([nil nil ((5190 . 5192)) nil (25192 10144 138929 999000) 0 nil])
([nil nil ((5192 . 5193)) nil (25192 10144 138926 568000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -4915) (undo-tree-id582 . -1) 4916 (t 25192 10144 150830 200000)) nil (25192 10168 121495 647000) 0 nil])
([nil nil ((4915 . 4916)) nil (25192 10168 121494 370000) 0 nil])
([nil nil ((4916 . 4917)) nil (25192 10168 121494 7000) 0 nil])
([nil nil ((4917 . 4921)) nil (25192 10168 121493 622000) 0 nil])
([nil nil ((4918 . 4926) (#("opp" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t)) . -4918) (undo-tree-id580 . -3) (undo-tree-id581 . 3) 4921) nil (25192 10168 121492 728000) 0 nil])
([nil nil ((4926 . 4927)) nil (25192 10168 121483 692000) 0 nil])
([nil nil ((4927 . 4928)) nil (25192 10168 121483 290000) 0 nil])
([nil nil ((4928 . 4929)) nil (25192 10168 121482 783000) 0 nil])
([nil nil ((4929 . 4934)) nil (25192 10168 121482 50000) 0 nil])
([nil nil ((4934 . 4935)) nil (25192 10168 121478 399000) 0 nil])
([nil nil ((5213 . 5221) (t 25192 10168 133793 800000)) nil (25192 10171 216517 409000) 0 nil])
([nil nil ((5221 . 5225) (t 25192 10171 227058 600000)) nil (25192 10221 689425 124000) 0 nil])
([nil nil ((5225 . 5226) (#(" x" 0 2 (fontified nil)) . -5225) (5225 . 5227) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 5225) (undo-tree-id605 . -4) (5221 . 5225) 5225) nil (25192 10221 689424 661000) 0 nil])
([nil nil ((5226 . 5227)) nil (25192 10221 689423 695000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -5225) (undo-tree-id603 . -1) (#("o" 0 1 (fontified t)) . -5226) (undo-tree-id604 . -1) 5227) nil (25192 10221 689423 345000) 0 nil])
([nil nil ((5225 . 5228) (#(" x" 0 2 (fontified nil)) . -5225) (5225 . 5227) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 5225) (undo-tree-id602 . -4) (5221 . 5225) 5225) nil (25192 10221 689421 603000) 0 nil])
([nil nil ((5228 . 5230)) nil (25192 10221 689400 322000) 0 nil])
([nil nil ((5231 . 5233) (#("		" 0 2 (fontified nil)) . 5230) (undo-tree-id601 . -2) (5229 . 5233)) nil (25192 10221 689399 945000) 0 nil])
([nil nil ((5230 . 5234)) nil (25192 10221 689399 99000) 0 nil])
([nil nil ((5234 . 5236)) nil (25192 10221 689398 881000) 0 nil])
([nil nil ((5236 . 5238)) nil (25192 10221 689398 661000) 0 nil])
([nil nil ((5237 . 5241)) nil (25192 10221 689398 420000) 0 nil])
([nil nil ((5241 . 5243)) nil (25192 10221 689398 121000) 0 nil])
([nil nil ((5243 . 5244)) nil (25192 10221 689397 906000) 0 nil])
([nil nil ((5244 . 5248)) nil (25192 10221 689397 666000) 0 nil])
([nil nil ((5244 . 5252) (#("RAND" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -5244) (undo-tree-id600 . -4) 5248) nil (25192 10221 689397 12000) 0 nil])
([nil nil ((5244 . 5250)) nil (25192 10221 689396 130000) 0 nil])
([nil nil ((5250 . 5251)) nil (25192 10221 689395 911000) 0 nil])
([nil nil ((5259 . 5260)) nil (25192 10221 689395 605000) 0 nil])
([nil nil ((5260 . 5261)) nil (25192 10221 689395 95000) 0 nil])
([nil nil ((5261 . 5262)) nil (25192 10221 689394 815000) 0 nil])
([nil nil ((5262 . 5263)) nil (25192 10221 689394 531000) 0 nil])
([nil nil ((5263 . 5265)) nil (25192 10221 689394 251000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -5264) (undo-tree-id599 . -1) 5265) nil (25192 10221 689393 972000) 0 nil])
([nil nil ((5264 . 5266)) nil (25192 10221 689393 148000) 0 nil])
([nil nil ((5267 . 5269)) nil (25192 10221 689392 934000) 0 nil])
([nil nil ((5268 . 5270)) nil (25192 10221 689392 721000) 0 nil])
([nil nil ((5268 . 5276) (#("op" 0 1 (fontified t) 1 2 (fontified t)) . -5268) (undo-tree-id598 . -2) 5270) nil (25192 10221 689392 340000) 0 nil])
([nil nil ((5276 . 5280)) nil (25192 10221 689391 464000) 0 nil])
([nil nil ((5280 . 5281)) nil (25192 10221 689391 247000) 0 nil])
([nil nil ((5282 . 5287)) nil (25192 10221 689390 967000) 0 nil])
([nil nil ((5287 . 5291)) nil (25192 10221 689390 637000) 0 nil])
([nil nil ((5291 . 5292) (#(" x" 0 2 (fontified nil)) . -5291) (5291 . 5293) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 5291) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (5287 . 5291) 5291) nil (25192 10221 689390 83000) 0 nil])
([nil nil ((5292 . 5295)) nil (25192 10221 689388 137000) 0 nil])
([nil nil ((5292 . 5296) (#("ope" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -5292) (undo-tree-id594 . -3) (undo-tree-id595 . 3) 5295) nil (25192 10221 689387 504000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -5294) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (#("n" 0 1 (fontified t)) . -5295) (undo-tree-id592 . -1) (undo-tree-id593 . -1) 5296) nil (25192 10221 689385 843000) 0 nil])
([nil nil ((5294 . 5296)) nil (25192 10221 689383 507000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -5294) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (#("e" 0 1 (fontified t)) . -5295) (undo-tree-id588 . -1) (undo-tree-id589 . -1) 5296) nil (25192 10221 689382 940000) 0 nil])
([nil nil ((5292 . 5300) (#("op" 0 2 (fontified t)) . -5292) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (undo-tree-id585 . 2) 5294) nil (25192 10221 689380 28000) 0 nil])
([nil nil ((5300 . 5304)) nil (25192 10221 689370 914000) 0 nil])
([nil nil ((5304 . 5305)) nil (25192 10221 689370 623000) 0 nil])
([nil nil ((5305 . 5306)) nil (25192 10221 689370 156000) 0 nil])
([nil nil ((5306 . 5311)) nil (25192 10221 689367 491000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5306) (undo-tree-id606 . -1) (undo-tree-id607 . -1) 5307 (t 25192 10221 698926 700000)) nil (25192 10226 521737 762000) 0 nil])
([nil nil ((5314 . 5322) (t 25192 10226 534728 600000)) nil (25192 10341 84047 366000) 0 nil])
([nil nil ((#("
double  L0 = 0.01 ,  gridspace = L0/1024;
oneDvec grid = linspace(0 , L0 , 1024);
double gama = 0.999 , epsilon0 = 0.05 , alpha0 = 0.04 , sigma0 = 1000.0 , E_0 = 2000.0 , epsilon , alpha;
double dt = 0.01 , steady_T = 500.0 , T = 5000+steady_T;
double c1 = 3.0/2.0 * dt , c2 = 1.0/2.0 * dt;
double omega_s = 4.5 , vs = 0.001  , v_s;
const double beta = 0.0;
const double grad_threshold_a = 1000.0;
const double grad_threshold_b = 3000.0;
const double trSS_threshold = 1.7;
int num_state = 10, num_action = 5;

const double mean = 0.0;
const double stddev = 1.0;
const double trans_noise = sqrt(2.0*dt*0.000000001);
const double rot_noise = sqrt(2.0*dt*0.0002) ;
default_random_engine generator;
normal_distribution<double> dist(mean , stddev);

//opening HDF5 file
H5File file(\"Data.h5\", H5F_ACC_TRUNC);
//creating groups in the file
Group group1  = file.createGroup(\"/Qs\");
Group group2 = file.createGroup(\"/Episodes\");
" 0 1 (c-is-sws t fontified t) 1 2 (face font-lock-type-face fontified t c-is-sws t) 2 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face c-type c-decl-id-start fontified t) 7 9 (fontified t) 9 11 (face font-lock-variable-name-face fontified t) 11 19 (fontified t) 19 20 (c-type c-decl-id-start fontified t) 20 22 (fontified t) 22 31 (face font-lock-variable-name-face fontified t) 31 43 (fontified t) 43 49 (face font-lock-type-face fontified t) 49 50 (face font-lock-type-face c-type c-decl-id-start fontified t) 50 51 (fontified t) 51 55 (face font-lock-variable-name-face fontified t) 55 83 (fontified t) 83 88 (face font-lock-type-face fontified t) 88 89 (face font-lock-type-face c-type c-decl-id-start fontified t) 89 90 (fontified t) 90 94 (face font-lock-variable-name-face fontified t) 94 103 (fontified t) 103 104 (c-type c-decl-id-start fontified t) 104 105 (fontified t) 105 112 (face font-lock-variable-name-face fontified t) 112 113 (face font-lock-variable-name-face fontified t) 113 121 (fontified t) 121 122 (c-type c-decl-id-start fontified t) 122 123 (fontified t) 123 129 (face font-lock-variable-name-face fontified t) 129 137 (fontified t) 137 138 (c-type c-decl-id-start fontified t) 138 139 (fontified t) 139 145 (face font-lock-variable-name-face fontified t) 145 155 (fontified t) 155 156 (c-type c-decl-id-start fontified t) 156 157 (fontified t) 157 160 (face font-lock-variable-name-face fontified t) 160 168 (fontified t) 168 170 (fontified t) 170 171 (c-type c-decl-id-start fontified t) 171 172 (fontified t) 172 179 (face font-lock-variable-name-face fontified t) 179 180 (fontified t) 180 181 (c-type c-decl-id-start fontified t) 181 182 (fontified t) 182 187 (face font-lock-variable-name-face fontified t) 187 189 (fontified t) 189 194 (face font-lock-type-face fontified t) 194 195 (face font-lock-type-face c-type c-decl-id-start fontified t) 195 196 (fontified t) 196 198 (face font-lock-variable-name-face fontified t) 198 205 (fontified t) 205 206 (fontified t) 206 207 (c-type c-decl-id-start fontified t) 207 208 (fontified t) 208 216 (face font-lock-variable-name-face fontified t) 216 224 (fontified t) 224 225 (fontified t) 225 226 (c-type c-decl-id-start fontified t) 226 227 (fontified t) 227 228 (face font-lock-variable-name-face fontified t) 228 232 (fontified t) 232 233 (fontified t) 233 246 (fontified t) 246 251 (face font-lock-type-face fontified t) 251 252 (face font-lock-type-face c-type c-decl-id-start fontified t) 252 253 (fontified t) 253 255 (face font-lock-variable-name-face fontified t) 255 258 (fontified t) 258 261 (fontified t) 261 262 (fontified t) 262 270 (fontified t) 270 271 (fontified t) 271 272 (c-type c-decl-id-start fontified t) 272 273 (fontified t) 273 275 (face font-lock-variable-name-face fontified t) 275 277 (fontified t) 277 281 (fontified t) 281 282 (fontified t) 282 292 (fontified t) 292 293 (face font-lock-type-face fontified t) 293 297 (face font-lock-type-face fontified t) 297 298 (face font-lock-type-face c-type c-decl-id-start fontified t) 298 299 (fontified t) 299 306 (face font-lock-variable-name-face fontified t) 306 310 (fontified t) 310 313 (fontified t) 313 314 (c-type c-decl-id-start fontified t) 314 315 (fontified t) 315 317 (face font-lock-variable-name-face fontified t) 317 326 (fontified t) 326 327 (fontified t) 327 328 (c-type c-decl-id-start fontified t) 328 329 (fontified t) 329 331 (face font-lock-variable-name-face fontified t) 331 332 (face font-lock-variable-name-face fontified t) 332 334 (fontified t) 334 335 (face font-lock-keyword-face fontified t) 335 336 (face font-lock-keyword-face fontified t) 336 338 (face font-lock-keyword-face fontified t) 338 339 (face font-lock-keyword-face fontified t) 339 340 (fontified t) 340 342 (face font-lock-type-face fontified t) 342 344 (face font-lock-type-face fontified t) 344 345 (face font-lock-type-face fontified t) 345 346 (face font-lock-type-face c-type c-decl-id-start fontified t) 346 347 (fontified t) 347 351 (face font-lock-variable-name-face fontified t) 351 352 (fontified t) 352 354 (fontified t) 354 358 (fontified t) 358 359 (fontified t) 359 360 (face font-lock-keyword-face fontified t) 360 361 (face font-lock-keyword-face fontified t) 361 362 (face font-lock-keyword-face fontified t) 362 363 (face font-lock-keyword-face fontified t) 363 364 (face font-lock-keyword-face fontified t) 364 365 (fontified t) 365 366 (face font-lock-type-face fontified t) 366 367 (face font-lock-type-face fontified t) 367 368 (face font-lock-type-face fontified t) 368 369 (face font-lock-type-face fontified t) 369 370 (face font-lock-type-face fontified t) 370 371 (face font-lock-type-face c-type c-decl-id-start fontified t) 371 372 (fontified t) 372 373 (face font-lock-variable-name-face fontified t) 373 374 (face font-lock-variable-name-face fontified t) 374 375 (face font-lock-variable-name-face fontified t) 375 376 (face font-lock-variable-name-face fontified t) 376 377 (face font-lock-variable-name-face fontified t) 377 378 (face font-lock-variable-name-face fontified t) 378 379 (face font-lock-variable-name-face fontified t) 379 388 (face font-lock-variable-name-face fontified t) 388 399 (fontified t) 399 404 (face font-lock-keyword-face fontified t) 404 405 (fontified t) 405 407 (face font-lock-type-face fontified t) 407 409 (face font-lock-type-face fontified t) 409 410 (face font-lock-type-face fontified t) 410 411 (face font-lock-type-face c-type c-decl-id-start fontified t) 411 412 (fontified t) 412 428 (face font-lock-variable-name-face fontified t) 428 439 (fontified t) 439 440 (face font-lock-keyword-face fontified t) 440 444 (face font-lock-keyword-face fontified t) 444 445 (fontified t) 445 450 (face font-lock-type-face fontified t) 450 451 (face font-lock-type-face c-type c-decl-id-start fontified t) 451 452 (fontified t) 452 466 (face font-lock-variable-name-face fontified t) 466 474 (fontified t) 474 476 (face font-lock-type-face fontified t) 476 477 (face font-lock-type-face c-type c-decl-id-start fontified t) 477 478 (fontified t) 478 487 (face font-lock-variable-name-face fontified t) 487 492 (fontified t) 492 493 (c-type c-decl-id-start fontified t) 493 494 (fontified t) 494 504 (face font-lock-variable-name-face fontified t) 504 511 (fontified t) 511 516 (face font-lock-keyword-face fontified t) 516 517 (fontified t) 517 522 (face font-lock-type-face fontified t) 522 523 (face font-lock-type-face c-type c-decl-id-start fontified t) 523 524 (fontified t) 524 528 (face font-lock-variable-name-face fontified t) 528 536 (fontified t) 536 541 (face font-lock-keyword-face fontified t) 541 542 (fontified t) 542 547 (face font-lock-type-face fontified t) 547 548 (face font-lock-type-face c-type c-decl-id-start fontified t) 548 549 (fontified t) 549 555 (face font-lock-variable-name-face fontified t) 555 563 (fontified t) 563 568 (face font-lock-keyword-face fontified t) 568 569 (fontified t) 569 574 (face font-lock-type-face fontified t) 574 575 (face font-lock-type-face c-type c-decl-id-start fontified t) 575 576 (fontified t) 576 584 (face font-lock-variable-name-face fontified t) 584 585 (face font-lock-variable-name-face fontified t) 585 587 (face font-lock-variable-name-face fontified t) 587 616 (fontified t) 616 619 (face font-lock-keyword-face fontified t) 619 621 (fontified t face font-lock-keyword-face) 621 622 (fontified t) 622 627 (fontified t face font-lock-type-face) 627 628 (fontified t face font-lock-type-face c-type c-decl-id-start) 628 629 (fontified t) 629 638 (fontified t face font-lock-variable-name-face) 638 663 (fontified t) 663 683 (face font-lock-type-face fontified t) 683 684 (face font-lock-type-face c-type c-decl-id-start fontified t) 684 685 (fontified t) 685 694 (face font-lock-variable-name-face fontified t) 694 696 (fontified t) 696 715 (face font-lock-type-face fontified t) 715 716 (fontified t syntax-table (4 . 62)) 716 722 (face font-lock-type-face fontified t) 722 723 (c-type c-decl-id-start fontified t syntax-table (5 . 60)) 723 724 (fontified t) 724 728 (face font-lock-function-name-face fontified t) 728 729 (c-type c-decl-arg-start fontified t) 729 734 (fontified t) 734 735 (c-type c-decl-arg-start fontified t) 735 746 (fontified t) 746 747 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 747 748 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 748 766 (face font-lock-comment-face fontified t c-in-sws t) 766 767 (face font-lock-type-face fontified t c-is-sws t) 767 771 (face font-lock-type-face fontified t) 771 772 (face font-lock-type-face c-type c-decl-id-start fontified t) 772 773 (fontified t) 773 777 (face font-lock-variable-name-face fontified t) 777 778 (fontified t) 778 787 (face font-lock-string-face fontified t) 787 788 (c-type c-decl-arg-start fontified t) 788 805 (fontified t) 805 806 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 806 807 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 807 835 (face font-lock-comment-face fontified t c-in-sws t) 835 836 (face font-lock-type-face fontified t c-is-sws t) 836 839 (face font-lock-type-face fontified t) 839 840 (face font-lock-type-face c-type c-decl-id-start fontified t) 840 841 (fontified t) 841 847 (face font-lock-variable-name-face fontified t) 847 868 (fontified t) 868 873 (face font-lock-string-face fontified t) 873 876 (fontified t) 876 880 (face font-lock-type-face fontified t) 880 881 (face font-lock-type-face c-type c-decl-id-start fontified t) 881 882 (fontified t) 882 888 (face font-lock-variable-name-face fontified t) 888 908 (fontified t) 908 919 (face font-lock-string-face fontified t) 919 922 (fontified t)) . -3599) (undo-tree-id608 . -922) (undo-tree-id609 . -922) 4521) nil (25192 10341 84046 423000) 0 nil])
([nil nil ((4392 . 4400)) nil (25192 10341 84036 793000) 0 nil])
([nil nil ((4400 . 4408)) nil (25192 10341 84033 347000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4400) (undo-tree-id613 . -1) (#("g" 0 1 (fontified t)) . -4401) (undo-tree-id614 . -1) (#("e" 0 1 (fontified t)) . -4402) (undo-tree-id615 . -1) (#("n" 0 1 (fontified t)) . -4403) (undo-tree-id616 . -1) (#("t" 0 1 (fontified t)) . -4404) (undo-tree-id617 . -1) (#(" " 0 1 (fontified t)) . -4405) (undo-tree-id618 . -1) (#("=" 0 1 (fontified t)) . -4406) (undo-tree-id619 . -1) (#(" " 0 1 (fontified t)) . -4407) (undo-tree-id620 . -1) 4408 (t 25192 10341 96570 100000)) nil (25192 10367 513667 176000) 0 nil])
([nil nil ((4400 . 4402)) nil (25192 10367 513660 602000) 0 nil])
([nil nil ((4402 . 4404)) nil (25192 10367 513660 304000) 0 nil])
([nil nil ((4403 . 4407)) nil (25192 10367 513660 8000) 0 nil])
([nil nil ((4407 . 4409)) nil (25192 10367 513659 708000) 0 nil])
([nil nil ((4409 . 4410)) nil (25192 10367 513659 411000) 0 nil])
([nil nil ((4410 . 4414)) nil (25192 10367 513659 112000) 0 nil])
([nil nil ((4410 . 4416) (#("doub" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -4410) (undo-tree-id612 . -4) 4414) nil (25192 10367 513658 574000) 0 nil])
([nil nil ((4416 . 4418)) nil (25192 10367 513609 63000) 0 nil])
([nil nil ((4417 . 4421)) nil (25192 10367 513608 689000) 0 nil])
([nil nil ((4417 . 4425) (#("RAND" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -4417) (undo-tree-id610 . -4) (undo-tree-id611 . 4) 4421) nil (25192 10367 513607 807000) 0 nil])
([nil nil ((4426 . 4428)) nil (25192 10367 513598 475000) 0 nil])
([nil nil ((4428 . 4429)) nil (25192 10367 513597 778000) 0 nil])
([nil nil ((4429 . 4430)) nil (25192 10367 513594 648000) 0 nil])
([nil nil ((4403 . 4405) (t 25192 10367 526632 200000)) nil (25192 10375 827894 709000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -4404) (undo-tree-id631 . -1) 4405) nil (25192 10375 827894 232000) 0 nil])
([nil nil ((4404 . 4411)) nil (25192 10375 827893 293000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -4400) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (#("f" 0 1 (fontified t)) . -4401) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (#("(" 0 1 (fontified t)) . -4402) (undo-tree-id629 . -1) (undo-tree-id630 . -1) 4403) nil (25192 10375 827892 416000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -4435) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . 1) (undo-tree-id624 . -1) 4436) nil (25192 10375 827887 271000) 0 nil])
([nil nil ((4433 . 4434) (t 25192 10375 838043 400000)) nil (25192 10378 772880 899000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4431) (undo-tree-id632 . -1) (undo-tree-id633 . -1) 4432 (t 25192 10378 783656 100000)) nil (25192 10395 969386 985000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4432)) nil (25192 10395 969374 657000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -4414) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (#("d" 0 1 (fontified t)) . -4415) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (#("o" 0 1 (face font-lock-keyword-face fontified t)) . -4416) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (#("u" 0 1 (fontified t)) . -4417) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (#("b" 0 1 (fontified t)) . -4418) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (#("l" 0 1 (fontified t)) . -4419) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -4420) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (#("(" 0 1 (fontified t)) . -4421) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (#("R" 0 1 (fontified t)) . -4422) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (#("A" 0 1 (fontified t)) . -4423) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (#("N" 0 1 (fontified t)) . -4424) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (#("D" 0 1 (fontified t)) . -4425) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (#("_" 0 1 (fontified t)) . -4426) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (#("M" 0 1 (fontified t)) . -4427) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (#("A" 0 1 (fontified t)) . -4428) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (#("X" 0 1 (fontified t)) . -4429) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (#(")" 0 1 (fontified t)) . -4430) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . 1) (undo-tree-id677 . -1) 4431 (t 25192 10395 982909 500000)) nil (25192 10431 766252 15000) 0 nil])
([nil nil ((4417 . 4425) (t 25192 10431 779511 300000)) nil (25192 10461 190168 80000) 0 nil])
([nil nil ((4425 . 4433)) nil (25192 10461 190167 753000) 0 nil])
([nil nil ((4016 . 4019)) nil (25192 10461 190167 467000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4016) (undo-tree-id680 . -1) (#("w" 0 1 (fontified t)) . -4017) (undo-tree-id681 . -1) (#("o" 0 1 (fontified t)) . -4018) (undo-tree-id682 . -1) 4019) nil (25192 10461 190166 864000) 0 nil])
([nil nil ((4016 . 4019)) nil (25192 10461 190164 785000) 0 nil])
([nil nil ((4016 . 4023) (#("one" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -4016) (undo-tree-id679 . -3) 4019) nil (25192 10461 190164 459000) 0 nil])
([nil nil ((4023 . 4026)) nil (25192 10461 190163 208000) 0 nil])
([nil nil ((4016 . 4027) (#("oneDvec_in" 0 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . -4016) (undo-tree-id678 . -10) 4026) nil (25192 10461 190162 524000) 0 nil])
([nil nil ((4027 . 4033)) nil (25192 10461 190155 228000) 0 nil])
([nil nil ((4033 . 4034)) nil (25192 10461 190152 550000) 0 nil])
([nil nil ((4033 . 4034) (t 25192 10461 200571 600000)) nil (25192 10468 201566 327000) 0 nil])
([nil nil ((4034 . 4036)) nil (25192 10468 201565 211000) 0 nil])
([nil nil ((4035 . 4036)) nil (25192 10468 201561 711000) 0 nil])
([nil nil ((4455 . 4462) (t 25192 10468 213951 900000)) nil (25192 10486 725665 238000) 0 nil])
([nil nil ((4455 . 4465) (#("eval_st" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -4455) (undo-tree-id689 . -7) 4462) nil (25192 10486 725664 653000) 0 nil])
([nil nil ((4465 . 4467)) nil (25192 10486 725663 693000) 0 nil])
([nil nil ((4466 . 4472)) nil (25192 10486 725663 411000) 0 nil])
([nil nil ((4472 . 4473)) nil (25192 10486 725663 126000) 0 nil])
([nil nil ((4473 . 4474)) nil (25192 10486 725662 825000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4469) (undo-tree-id684 . -1) (#("n" 0 1 (fontified t)) . -4470) (undo-tree-id685 . -1) (#(" " 0 1 (fontified t)) . -4471) (undo-tree-id686 . -1) (#("," 0 1 (fontified t)) . -4472) (undo-tree-id687 . -1) (#(" " 0 1 (fontified t)) . -4473) (undo-tree-id688 . -1) 4474) nil (25192 10486 725661 860000) 0 nil])
([nil nil ((4469 . 4472)) nil (25192 10486 725658 568000) 0 nil])
([nil nil ((4472 . 4473)) nil (25192 10486 725658 151000) 0 nil])
([nil nil ((4473 . 4476)) nil (25192 10486 725657 699000) 0 nil])
([nil nil ((4474 . 4482) (#("op" 0 1 (fontified t) 1 2 (fontified t)) . -4474) (undo-tree-id683 . -2) 4476) nil (25192 10486 725656 772000) 0 nil])
([nil nil ((4483 . 4484)) nil (25192 10486 725647 65000) 0 nil])
([nil nil ((4484 . 4492) (t 25192 10486 736622 0)) nil (25192 10514 499862 790000) 0 nil])
([nil nil ((4492 . 4495)) nil (25192 10514 499862 494000) 0 nil])
([nil nil ((4492 . 4500) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -4492) (undo-tree-id697 . -3) 4495) nil (25192 10514 499862 140000) 0 nil])
([nil nil ((4500 . 4506)) nil (25192 10514 499861 318000) 0 nil])
([nil nil ((4503 . 4511) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -4503) (undo-tree-id696 . -3) 4506) nil (25192 10514 499860 940000) 0 nil])
([nil nil ((4511 . 4514)) nil (25192 10514 499860 186000) 0 nil])
([nil nil ((4503 . 4516) (#("opponent_mo" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . -4503) (undo-tree-id695 . -11) 4514) nil (25192 10514 499859 759000) 0 nil])
([nil nil ((4516 . 4518)) nil (25192 10514 499858 762000) 0 nil])
([nil nil ((4517 . 4522)) nil (25192 10514 499858 473000) 0 nil])
([nil nil ((4522 . 4523)) nil (25192 10514 499858 179000) 0 nil])
([nil nil ((4523 . 4526)) nil (25192 10514 499857 882000) 0 nil])
([nil nil ((4526 . 4527)) nil (25192 10514 499857 416000) 0 nil])
([nil nil ((4527 . 4528)) nil (25192 10514 499856 931000) 0 nil])
([nil nil ((4528 . 4529)) nil (25192 10514 499856 646000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -3865) (undo-tree-id690 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -3866) (undo-tree-id691 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -3867) (undo-tree-id692 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -3868) (undo-tree-id693 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -3869) (undo-tree-id694 . -1) 3870) nil (25192 10514 499855 949000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3865)) nil (25192 10514 499846 537000) 0 nil])
([nil nil ((3865 . 3866)) nil (25192 10514 499846 95000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-variable-name-face fontified t)) . 3825) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . 3825) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . 3825) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . 3825) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . 3825)) nil (25192 10514 499842 649000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 4278) (#("s" 0 1 (fontified t)) . 4278) (#("i" 0 1 (fontified t)) . 4278) (#("l" 0 1 (fontified t)) . 4278) (#("_" 0 1 (fontified t)) . 4278) (t 25192 10514 510953 100000)) nil (25192 10529 910735 119000) 0 nil])
([nil nil ((4510 . 4512)) nil (25192 10529 910734 238000) 0 nil])
([nil nil ((4511 . 4512)) nil (25192 10529 910733 576000) 0 nil])
([nil nil ((4517 . 4520)) nil (25192 10529 910730 621000) 0 nil])
([nil nil ((4521 . 4522) (t 25192 10529 921967 200000)) nil (25192 10536 596995 39000) 0 nil])
([nil nil ((#("oneDvec_int eval_state(int agent , int opponent)
{
  oneDvec_int state (2);
  if (agent == 0)
    {
      if (opponent == 0) {state[0]=2; state[1]=0;}
      else if (opponent == 1) {state[0]=1; state[1]=1;}
      else {state[0]=0; state[1]=2;}
    }
  else if (agent == 1)
    {
      if (opponent == 0) {state[0]=0; state[1]=0;}
      else if (opponent == 1) {state[0]=2; state[1]=1;}
      else {state[0]=1; state[1]=2;}
    }
  else
    {
      if (opponent == 0) {state[0]=1; state[1]=0;}
      else if (opponent == 1) {state[0]=0; state[1]=1;}
      else {state[0]=2; state[1]=2;}
    }
  return state;
}

double get_R(oneDvec_int &state)
{
  double R;
  if (state[0] == 0) {R = 1;}
  else if(state[0] == 1){R = -1;}
  else{R = 0;}
  return R;
}

int opponent_move(oneDvec_int &state , double p , double q)
{
  int last_result = state[0];
  int last_move = state[1];
  int opponent;
  if (last_result == 0)
    {
      if(rand()/double (RAND_MAX) < p)
	{
	  if(last_move == 0)
	    {
	      if (rand()/double (RAND_MAX) < 0.5){opponent = 1;}
	      else{opponent = 2;}
	    }
	  else if(last_move == 1)
	    {
	      if (rand()/double (RAND_MAX) < 0.5){opponent = 0;}
	      else{opponent = 2;}
	    }
	  else
	    {
	      if (rand()/double (RAND_MAX) < 0.5){opponent = 0;}
	      else{opponent = 1;}
	    }
	}
      else
	{
	  if(rand()/double(RAND_MAX) < (1.0-2.0*q)){opponent = 0;}
	  else
	    {
	      if (rand()/double(RAND_MAX) <0.5){opponent = 1;}
	      else{opponent = 2;}
	    }
	}
    }
  else if(last_result == 1)
    {
      if(rand()/double(RAND_MAX) < p){opponent = last_move;}
      else
	{
	  if(rand()/double(RAND_MAX) < (1.0-2.0*q)){opponent = 0;}
	  else
	    {
	      if(rand()/double(RAND_MAX) < 0.5){opponent = 1;}
	      else{opponent = 2;}
	    }
	}
    }
  else
    {
      if(rand()/double(RAND_MAX) < (1.0-2.0*q)){opponent = 0;}
	  else
	    {
	      if(rand()/double(RAND_MAX) < 0.5){opponent = 1;}
	      else{opponent = 2;}
	    }
    }

  return opponent;
}

" 0 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face fontified t) 8 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face c-type c-decl-id-start fontified t) 11 12 (fontified t) 12 13 (face font-lock-function-name-face fontified t) 13 14 (face font-lock-function-name-face fontified t) 14 15 (face font-lock-function-name-face fontified t) 15 16 (face font-lock-function-name-face fontified t) 16 17 (face font-lock-function-name-face fontified t) 17 18 (face font-lock-function-name-face fontified t) 18 19 (face font-lock-function-name-face fontified t) 19 20 (face font-lock-function-name-face fontified t) 20 21 (face font-lock-function-name-face fontified t) 21 22 (face font-lock-function-name-face fontified t) 22 23 (c-type c-decl-arg-start fontified t) 23 24 (face font-lock-type-face fontified t) 24 25 (face font-lock-type-face fontified t) 25 26 (face font-lock-type-face fontified t) 26 27 (fontified t) 27 28 (face font-lock-variable-name-face fontified t) 28 29 (face font-lock-variable-name-face fontified t) 29 30 (face font-lock-variable-name-face fontified t) 30 31 (face font-lock-variable-name-face fontified t) 31 32 (face font-lock-variable-name-face fontified t) 32 33 (fontified t) 33 34 (c-type c-decl-arg-start fontified t) 34 35 (fontified t) 35 36 (face font-lock-type-face fontified t) 36 37 (face font-lock-type-face fontified t) 37 38 (face font-lock-type-face fontified t) 38 39 (fontified t) 39 40 (face font-lock-variable-name-face fontified t) 40 41 (face font-lock-variable-name-face fontified t) 41 42 (face font-lock-variable-name-face fontified t) 42 43 (face font-lock-variable-name-face fontified t) 43 44 (face font-lock-variable-name-face fontified t) 44 45 (face font-lock-variable-name-face fontified t) 45 46 (face font-lock-variable-name-face fontified t) 46 47 (face font-lock-variable-name-face fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 53 (fontified t) 53 59 (face font-lock-type-face fontified t) 59 60 (face font-lock-type-face fontified t) 60 61 (face font-lock-type-face fontified t) 61 62 (face font-lock-type-face fontified t) 62 63 (face font-lock-type-face fontified t) 63 64 (face font-lock-type-face c-type c-decl-id-start fontified t) 64 65 (fontified t) 65 66 (face font-lock-variable-name-face fontified t) 66 67 (face font-lock-variable-name-face fontified t) 67 68 (face font-lock-variable-name-face fontified t) 68 69 (face font-lock-variable-name-face fontified t) 69 70 (face font-lock-variable-name-face fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 78 (fontified t) 78 80 (face font-lock-keyword-face fontified t) 80 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 106 (fontified t) 106 108 (face font-lock-keyword-face fontified t) 108 110 (fontified t) 110 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 140 (fontified t) 140 141 (fontified t) 141 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t rear-nonsticky t) 149 150 (fontified t) 150 151 (fontified t) 151 157 (fontified t) 157 161 (face font-lock-keyword-face fontified t) 161 162 (fontified t) 162 164 (face font-lock-keyword-face fontified t) 164 166 (fontified t) 166 174 (fontified t) 174 175 (fontified t) 175 176 (fontified t) 176 177 (fontified t) 177 178 (fontified t) 178 179 (fontified t) 179 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t rear-nonsticky t) 205 206 (fontified t rear-nonsticky t) 206 207 (fontified t) 207 213 (fontified t) 213 214 (face font-lock-keyword-face fontified t) 214 215 (face font-lock-keyword-face fontified t) 215 216 (face font-lock-keyword-face fontified t) 216 217 (face font-lock-keyword-face fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 220 (fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t rear-nonsticky t) 242 243 (fontified t rear-nonsticky t) 243 244 (fontified t) 244 248 (fontified t) 248 249 (rear-nonsticky t fontified t) 249 250 (fontified t) 250 252 (fontified t) 252 256 (face font-lock-keyword-face fontified t) 256 257 (fontified t) 257 259 (face font-lock-keyword-face fontified t) 259 261 (fontified t) 261 262 (fontified t) 262 263 (fontified t) 263 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 271 (fontified t) 271 272 (fontified t) 272 273 (fontified t) 273 277 (fontified t) 277 278 (fontified t) 278 279 (fontified t) 279 285 (fontified t) 285 287 (face font-lock-keyword-face fontified t) 287 289 (fontified t) 289 297 (fontified t) 297 298 (fontified t) 298 299 (fontified t) 299 300 (fontified t) 300 301 (fontified t) 301 302 (fontified t) 302 304 (fontified t) 304 305 (fontified t) 305 306 (fontified t) 306 307 (fontified t) 307 308 (fontified t) 308 309 (fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (fontified t) 312 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 320 (fontified t) 320 321 (fontified t) 321 322 (fontified t) 322 323 (fontified t) 323 324 (fontified t) 324 325 (fontified t) 325 326 (fontified t) 326 327 (fontified t) 327 328 (fontified t rear-nonsticky t) 328 329 (fontified t) 329 330 (fontified t) 330 336 (fontified t) 336 340 (face font-lock-keyword-face fontified t) 340 341 (fontified t) 341 343 (face font-lock-keyword-face fontified t) 343 345 (fontified t) 345 353 (fontified t) 353 354 (fontified t) 354 355 (fontified t) 355 356 (fontified t) 356 357 (fontified t) 357 358 (fontified t) 358 360 (fontified t) 360 361 (fontified t) 361 362 (fontified t) 362 363 (fontified t) 363 364 (fontified t) 364 365 (fontified t) 365 366 (fontified t) 366 367 (fontified t) 367 368 (fontified t) 368 369 (fontified t) 369 370 (fontified t) 370 371 (fontified t) 371 372 (fontified t) 372 373 (fontified t) 373 374 (fontified t) 374 375 (fontified t) 375 376 (fontified t) 376 377 (fontified t) 377 378 (fontified t) 378 379 (fontified t) 379 380 (fontified t) 380 381 (fontified t) 381 382 (fontified t) 382 383 (fontified t) 383 384 (fontified t rear-nonsticky t) 384 385 (fontified t rear-nonsticky t) 385 386 (fontified t) 386 392 (fontified t) 392 393 (face font-lock-keyword-face fontified t) 393 394 (face font-lock-keyword-face fontified t) 394 395 (face font-lock-keyword-face fontified t) 395 396 (face font-lock-keyword-face fontified t) 396 397 (fontified t) 397 398 (fontified t) 398 399 (fontified t) 399 400 (fontified t) 400 401 (fontified t) 401 402 (fontified t) 402 403 (fontified t) 403 404 (fontified t) 404 405 (fontified t) 405 406 (fontified t) 406 407 (fontified t) 407 408 (fontified t) 408 409 (fontified t) 409 410 (fontified t) 410 411 (fontified t) 411 412 (fontified t) 412 413 (fontified t) 413 414 (fontified t) 414 415 (fontified t) 415 416 (fontified t) 416 417 (fontified t) 417 418 (fontified t) 418 419 (fontified t) 419 420 (fontified t) 420 421 (fontified t rear-nonsticky t) 421 422 (fontified t rear-nonsticky t) 422 423 (fontified t) 423 427 (fontified t) 427 428 (fontified t rear-nonsticky t) 428 429 (fontified t) 429 431 (fontified t) 431 435 (face font-lock-keyword-face fontified t) 435 436 (fontified t) 436 440 (fontified t) 440 441 (fontified t) 441 442 (fontified t) 442 448 (fontified t) 448 450 (face font-lock-keyword-face fontified t) 450 452 (fontified t) 452 460 (fontified t) 460 461 (fontified t) 461 462 (fontified t) 462 463 (fontified t) 463 464 (fontified t) 464 465 (fontified t) 465 467 (fontified t) 467 468 (fontified t) 468 469 (fontified t) 469 470 (fontified t) 470 471 (fontified t) 471 472 (fontified t) 472 473 (fontified t) 473 474 (fontified t) 474 475 (fontified t) 475 476 (fontified t) 476 477 (fontified t) 477 478 (fontified t) 478 479 (fontified t) 479 480 (fontified t) 480 481 (fontified t) 481 482 (fontified t) 482 483 (fontified t) 483 484 (fontified t) 484 485 (fontified t) 485 486 (fontified t) 486 487 (fontified t) 487 488 (fontified t) 488 489 (fontified t) 489 490 (fontified t) 490 491 (fontified t rear-nonsticky t) 491 492 (fontified t) 492 493 (fontified t) 493 499 (fontified t) 499 503 (face font-lock-keyword-face fontified t) 503 504 (fontified t) 504 506 (face font-lock-keyword-face fontified t) 506 508 (fontified t) 508 516 (fontified t) 516 517 (fontified t) 517 518 (fontified t) 518 519 (fontified t) 519 520 (fontified t) 520 521 (fontified t) 521 523 (fontified t) 523 524 (fontified t) 524 525 (fontified t) 525 526 (fontified t) 526 527 (fontified t) 527 528 (fontified t) 528 529 (fontified t) 529 530 (fontified t) 530 531 (fontified t) 531 532 (fontified t) 532 533 (fontified t) 533 534 (fontified t) 534 535 (fontified t) 535 536 (fontified t) 536 537 (fontified t) 537 538 (fontified t) 538 539 (fontified t) 539 540 (fontified t) 540 541 (fontified t) 541 542 (fontified t) 542 543 (fontified t) 543 544 (fontified t) 544 545 (fontified t) 545 546 (fontified t) 546 547 (fontified t rear-nonsticky t) 547 548 (fontified t rear-nonsticky t) 548 549 (fontified t) 549 555 (fontified t) 555 556 (face font-lock-keyword-face fontified t) 556 557 (face font-lock-keyword-face fontified t) 557 558 (face font-lock-keyword-face fontified t) 558 559 (face font-lock-keyword-face fontified t) 559 560 (fontified t) 560 561 (fontified t) 561 562 (fontified t) 562 563 (fontified t) 563 564 (fontified t) 564 565 (fontified t) 565 566 (fontified t) 566 567 (fontified t) 567 568 (fontified t) 568 569 (fontified t) 569 570 (fontified t) 570 571 (fontified t) 571 572 (fontified t) 572 573 (fontified t) 573 574 (fontified t) 574 575 (fontified t) 575 576 (fontified t) 576 577 (fontified t) 577 578 (fontified t) 578 579 (fontified t) 579 580 (fontified t) 580 581 (fontified t) 581 582 (fontified t) 582 583 (fontified t) 583 584 (fontified t rear-nonsticky t) 584 585 (fontified t rear-nonsticky t) 585 586 (fontified t) 586 590 (fontified t) 590 591 (fontified t) 591 592 (fontified t) 592 594 (fontified t) 594 595 (face font-lock-keyword-face fontified t) 595 596 (face font-lock-keyword-face fontified t) 596 597 (face font-lock-keyword-face fontified t) 597 598 (face font-lock-keyword-face fontified t) 598 599 (face font-lock-keyword-face fontified t) 599 600 (face font-lock-keyword-face fontified t) 600 601 (fontified t) 601 602 (fontified t) 602 603 (fontified t) 603 604 (fontified t) 604 605 (fontified t) 605 606 (fontified t) 606 607 (fontified t) 607 608 (fontified t) 608 609 (fontified t) 609 610 (fontified t) 610 611 (fontified t) 611 612 (face font-lock-type-face fontified t) 612 613 (face font-lock-type-face fontified t) 613 614 (face font-lock-type-face fontified t) 614 615 (face font-lock-type-face fontified t) 615 616 (face font-lock-type-face fontified t) 616 617 (face font-lock-type-face c-type c-decl-id-start fontified t) 617 618 (fontified t) 618 619 (face font-lock-function-name-face fontified t) 619 620 (face font-lock-function-name-face fontified t) 620 621 (face font-lock-function-name-face fontified t) 621 622 (face font-lock-function-name-face fontified t) 622 623 (face font-lock-function-name-face fontified t) 623 624 (c-type c-decl-arg-start fontified t) 624 635 (face font-lock-type-face fontified t) 635 636 (fontified t) 636 637 (fontified t) 637 638 (face font-lock-variable-name-face fontified t) 638 639 (face font-lock-variable-name-face fontified t) 639 640 (face font-lock-variable-name-face fontified t) 640 641 (face font-lock-variable-name-face fontified t) 641 642 (face font-lock-variable-name-face fontified t) 642 643 (fontified t) 643 644 (fontified t) 644 645 (fontified t) 645 646 (fontified t) 646 648 (fontified t) 648 649 (face font-lock-type-face fontified t) 649 650 (face font-lock-type-face fontified t) 650 651 (face font-lock-type-face fontified t) 651 652 (face font-lock-type-face fontified t) 652 653 (face font-lock-type-face fontified t) 653 654 (face font-lock-type-face c-type c-decl-id-start fontified t) 654 655 (fontified t) 655 656 (face font-lock-variable-name-face fontified t) 656 657 (fontified t) 657 658 (fontified t) 658 660 (fontified t) 660 662 (face font-lock-keyword-face fontified t) 662 664 (fontified t) 664 665 (fontified t) 665 666 (fontified t) 666 667 (fontified t) 667 668 (fontified t) 668 669 (fontified t) 669 670 (fontified t) 670 671 (fontified t) 671 672 (fontified t) 672 673 (fontified t) 673 674 (fontified t) 674 675 (fontified t) 675 676 (fontified t) 676 677 (fontified t) 677 678 (fontified t) 678 679 (fontified t) 679 680 (fontified t) 680 681 (fontified t) 681 682 (fontified t) 682 683 (fontified t) 683 684 (fontified t) 684 685 (fontified t) 685 686 (fontified t) 686 687 (fontified t) 687 688 (fontified t) 688 690 (fontified t) 690 694 (face font-lock-keyword-face fontified t) 694 695 (fontified t) 695 696 (face font-lock-keyword-face fontified t) 696 697 (face font-lock-keyword-face fontified t) 697 698 (fontified t) 698 699 (fontified t) 699 700 (fontified t) 700 701 (fontified t) 701 702 (fontified t) 702 703 (fontified t) 703 704 (fontified t) 704 705 (fontified t) 705 706 (fontified t) 706 707 (fontified t) 707 708 (fontified t) 708 709 (fontified t) 709 710 (fontified t) 710 711 (fontified t) 711 712 (fontified t) 712 713 (fontified t) 713 714 (fontified t) 714 715 (fontified t) 715 716 (fontified t) 716 717 (fontified t) 717 718 (fontified t) 718 719 (fontified t) 719 720 (fontified t) 720 721 (fontified t) 721 722 (fontified t) 722 724 (fontified t) 724 728 (face font-lock-keyword-face fontified t) 728 729 (fontified t) 729 730 (fontified t) 730 731 (fontified t) 731 732 (fontified t) 732 733 (fontified t) 733 734 (fontified t) 734 735 (fontified t) 735 736 (fontified t) 736 737 (fontified t) 737 739 (fontified t) 739 740 (face font-lock-keyword-face fontified t) 740 741 (face font-lock-keyword-face fontified t) 741 742 (face font-lock-keyword-face fontified t) 742 743 (face font-lock-keyword-face fontified t) 743 744 (face font-lock-keyword-face fontified t) 744 745 (face font-lock-keyword-face fontified t) 745 746 (fontified t) 746 747 (fontified t) 747 748 (fontified t) 748 749 (fontified t) 749 750 (fontified t) 750 751 (fontified t) 751 752 (fontified t) 752 753 (face font-lock-type-face fontified t) 753 754 (face font-lock-type-face fontified t) 754 755 (face font-lock-type-face c-type c-decl-id-start fontified t) 755 756 (fontified t) 756 764 (face font-lock-function-name-face fontified t) 764 765 (face font-lock-function-name-face fontified t) 765 766 (face font-lock-function-name-face fontified t) 766 767 (face font-lock-function-name-face fontified t) 767 768 (face font-lock-function-name-face fontified t) 768 769 (face font-lock-function-name-face fontified t) 769 770 (c-type c-decl-arg-start fontified t) 770 781 (face font-lock-type-face fontified t) 781 782 (fontified t) 782 783 (fontified t) 783 784 (face font-lock-variable-name-face fontified t) 784 785 (face font-lock-variable-name-face fontified t) 785 786 (face font-lock-variable-name-face fontified t) 786 787 (face font-lock-variable-name-face fontified t) 787 788 (face font-lock-variable-name-face fontified t) 788 789 (fontified t) 789 790 (c-type c-decl-arg-start fontified t) 790 791 (fontified t) 791 792 (face font-lock-type-face fontified t) 792 793 (face font-lock-type-face fontified t) 793 794 (face font-lock-type-face fontified t) 794 795 (face font-lock-type-face fontified t) 795 796 (face font-lock-type-face fontified t) 796 797 (face font-lock-type-face fontified t) 797 798 (fontified t) 798 799 (face font-lock-variable-name-face fontified t) 799 800 (fontified t) 800 801 (c-type c-decl-arg-start fontified t) 801 802 (fontified t) 802 803 (face font-lock-type-face fontified t) 803 804 (face font-lock-type-face fontified t) 804 805 (face font-lock-type-face fontified t) 805 806 (face font-lock-type-face fontified t) 806 807 (face font-lock-type-face fontified t) 807 808 (face font-lock-type-face fontified t) 808 809 (fontified t) 809 810 (face font-lock-variable-name-face fontified t) 810 811 (fontified t) 811 812 (fontified t) 812 813 (fontified t) 813 814 (fontified t) 814 816 (fontified t) 816 817 (face font-lock-type-face fontified t) 817 818 (face font-lock-type-face fontified t) 818 819 (face font-lock-type-face c-type c-decl-id-start fontified t) 819 820 (fontified t) 820 821 (face font-lock-variable-name-face fontified t) 821 822 (face font-lock-variable-name-face fontified t) 822 823 (face font-lock-variable-name-face fontified t) 823 824 (face font-lock-variable-name-face fontified t) 824 825 (face font-lock-variable-name-face fontified t) 825 826 (face font-lock-variable-name-face fontified t) 826 827 (face font-lock-variable-name-face fontified t) 827 828 (face font-lock-variable-name-face fontified t) 828 829 (face font-lock-variable-name-face fontified t) 829 830 (face font-lock-variable-name-face fontified t) 830 831 (face font-lock-variable-name-face fontified t) 831 832 (fontified t) 832 833 (fontified t) 833 834 (fontified t) 834 835 (fontified t) 835 836 (fontified t) 836 837 (fontified t) 837 838 (fontified t) 838 839 (fontified t) 839 840 (fontified t) 840 841 (fontified t) 841 842 (fontified t) 842 843 (fontified t) 843 844 (fontified t) 844 846 (fontified t) 846 847 (face font-lock-type-face fontified t) 847 848 (face font-lock-type-face fontified t) 848 849 (face font-lock-type-face c-type c-decl-id-start fontified t) 849 850 (fontified t) 850 851 (face font-lock-variable-name-face fontified t) 851 852 (face font-lock-variable-name-face fontified t) 852 853 (face font-lock-variable-name-face fontified t) 853 854 (face font-lock-variable-name-face fontified t) 854 855 (face font-lock-variable-name-face fontified t) 855 856 (face font-lock-variable-name-face fontified t) 856 857 (face font-lock-variable-name-face fontified t) 857 858 (face font-lock-variable-name-face fontified t) 858 859 (face font-lock-variable-name-face fontified t) 859 860 (fontified t) 860 861 (fontified t) 861 862 (fontified t) 862 863 (fontified t) 863 864 (fontified t) 864 865 (fontified t) 865 866 (fontified t) 866 867 (fontified t) 867 868 (fontified t) 868 869 (fontified t) 869 870 (fontified t) 870 871 (fontified t) 871 872 (fontified t) 872 874 (fontified t) 874 875 (face font-lock-type-face fontified t) 875 876 (face font-lock-type-face fontified t) 876 877 (face font-lock-type-face c-type c-decl-id-start fontified t) 877 878 (fontified t) 878 886 (face font-lock-variable-name-face fontified t) 886 887 (fontified t) 887 888 (fontified t) 888 890 (fontified t) 890 892 (face font-lock-keyword-face fontified t) 892 894 (fontified t) 894 905 (fontified t) 905 906 (fontified t) 906 907 (fontified t) 907 908 (fontified t) 908 909 (fontified t) 909 910 (fontified t) 910 911 (fontified t) 911 912 (fontified t) 912 916 (fontified t) 916 917 (fontified t) 917 918 (fontified t) 918 924 (fontified t) 924 926 (face font-lock-keyword-face fontified t) 926 934 (fontified t) 934 940 (face font-lock-type-face fontified t) 940 952 (fontified t) 952 953 (fontified t) 953 954 (fontified t) 954 955 (fontified t) 955 956 (fontified t rear-nonsticky t) 956 957 (fontified t) 957 958 (fontified t) 958 959 (fontified t) 959 960 (fontified t) 960 963 (fontified t) 963 964 (face font-lock-keyword-face fontified t) 964 965 (face font-lock-keyword-face fontified t) 965 966 (fontified t) 966 967 (fontified t) 967 968 (fontified t) 968 969 (fontified t) 969 970 (fontified t) 970 971 (fontified t) 971 972 (fontified t) 972 973 (fontified t) 973 974 (fontified t) 974 975 (fontified t) 975 976 (fontified t) 976 977 (fontified t) 977 978 (fontified t) 978 979 (fontified t) 979 980 (fontified t) 980 981 (fontified t) 981 982 (fontified t) 982 987 (fontified t) 987 988 (fontified t) 988 989 (fontified t) 989 996 (fontified t) 996 997 (face font-lock-keyword-face fontified t) 997 998 (face font-lock-keyword-face fontified t) 998 999 (fontified t) 999 1000 (fontified t) 1000 1001 (fontified t) 1001 1002 (fontified t) 1002 1003 (fontified t) 1003 1004 (fontified t) 1004 1005 (fontified t) 1005 1006 (fontified t) 1006 1007 (fontified t) 1007 1008 (face font-lock-type-face fontified t) 1008 1009 (face font-lock-type-face fontified t) 1009 1010 (face font-lock-type-face fontified t) 1010 1011 (face font-lock-type-face fontified t) 1011 1012 (face font-lock-type-face fontified t) 1012 1013 (face font-lock-type-face fontified t) 1013 1014 (fontified t) 1014 1015 (fontified t) 1015 1023 (fontified t) 1023 1024 (fontified t) 1024 1025 (fontified t) 1025 1026 (fontified t) 1026 1027 (fontified t) 1027 1028 (fontified t) 1028 1029 (fontified t) 1029 1030 (fontified t) 1030 1031 (fontified t) 1031 1032 (fontified t) 1032 1033 (fontified t) 1033 1034 (fontified t) 1034 1035 (fontified t) 1035 1036 (fontified t) 1036 1037 (fontified t) 1037 1038 (fontified t) 1038 1039 (fontified t) 1039 1040 (fontified t) 1040 1041 (fontified t) 1041 1042 (fontified t) 1042 1043 (fontified t) 1043 1044 (fontified t) 1044 1045 (fontified t) 1045 1046 (fontified t) 1046 1047 (fontified t) 1047 1054 (fontified t) 1054 1058 (face font-lock-keyword-face fontified t) 1058 1059 (fontified t) 1059 1067 (fontified t) 1067 1068 (fontified t) 1068 1069 (fontified t) 1069 1070 (fontified t) 1070 1071 (fontified t) 1071 1072 (fontified t) 1072 1073 (fontified t) 1073 1074 (fontified t) 1074 1079 (fontified t) 1079 1080 (rear-nonsticky t fontified t) 1080 1081 (fontified t) 1081 1084 (fontified t) 1084 1088 (face font-lock-keyword-face fontified t) 1088 1089 (fontified t) 1089 1090 (face font-lock-keyword-face fontified t) 1090 1091 (face font-lock-keyword-face fontified t) 1091 1092 (fontified t) 1092 1093 (fontified t) 1093 1094 (fontified t) 1094 1095 (fontified t) 1095 1096 (fontified t) 1096 1097 (fontified t) 1097 1098 (fontified t) 1098 1099 (fontified t) 1099 1100 (fontified t) 1100 1101 (fontified t) 1101 1102 (fontified t) 1102 1103 (fontified t) 1103 1104 (fontified t) 1104 1105 (fontified t) 1105 1106 (fontified t) 1106 1107 (fontified t) 1107 1108 (fontified t) 1108 1113 (fontified t) 1113 1114 (fontified t) 1114 1115 (fontified t) 1115 1122 (fontified t) 1122 1123 (face font-lock-keyword-face fontified t) 1123 1124 (face font-lock-keyword-face fontified t) 1124 1125 (fontified t) 1125 1126 (fontified t) 1126 1127 (fontified t) 1127 1128 (fontified t) 1128 1129 (fontified t) 1129 1130 (fontified t) 1130 1131 (fontified t) 1131 1132 (fontified t) 1132 1133 (fontified t) 1133 1134 (face font-lock-type-face fontified t) 1134 1135 (face font-lock-type-face fontified t) 1135 1136 (face font-lock-type-face fontified t) 1136 1137 (face font-lock-type-face fontified t) 1137 1138 (face font-lock-type-face fontified t) 1138 1139 (face font-lock-type-face fontified t) 1139 1140 (fontified t) 1140 1141 (fontified t) 1141 1149 (fontified t) 1149 1150 (fontified t) 1150 1151 (fontified t) 1151 1152 (fontified t) 1152 1153 (fontified t) 1153 1154 (fontified t) 1154 1155 (fontified t) 1155 1156 (fontified t) 1156 1157 (fontified t) 1157 1158 (fontified t) 1158 1159 (fontified t) 1159 1160 (fontified t) 1160 1161 (fontified t) 1161 1162 (fontified t) 1162 1163 (fontified t) 1163 1164 (fontified t) 1164 1165 (fontified t) 1165 1166 (fontified t) 1166 1167 (fontified t) 1167 1168 (fontified t) 1168 1169 (fontified t) 1169 1170 (fontified t) 1170 1171 (fontified t) 1171 1172 (fontified t) 1172 1173 (fontified t) 1173 1180 (fontified t) 1180 1184 (face font-lock-keyword-face fontified t) 1184 1185 (fontified t) 1185 1193 (fontified t) 1193 1194 (fontified t) 1194 1195 (fontified t) 1195 1196 (fontified t) 1196 1197 (fontified t) 1197 1198 (fontified t) 1198 1199 (fontified t) 1199 1200 (fontified t) 1200 1205 (fontified t) 1205 1206 (fontified t rear-nonsticky t) 1206 1207 (fontified t) 1207 1210 (fontified t) 1210 1214 (face font-lock-keyword-face fontified t) 1214 1215 (fontified t) 1215 1220 (fontified t) 1220 1221 (fontified t) 1221 1222 (fontified t) 1222 1229 (fontified t) 1229 1230 (face font-lock-keyword-face fontified t) 1230 1231 (face font-lock-keyword-face fontified t) 1231 1232 (fontified t) 1232 1233 (fontified t) 1233 1234 (fontified t) 1234 1235 (fontified t) 1235 1236 (fontified t) 1236 1237 (fontified t) 1237 1238 (fontified t) 1238 1239 (fontified t) 1239 1240 (fontified t) 1240 1241 (face font-lock-type-face fontified t) 1241 1242 (face font-lock-type-face fontified t) 1242 1243 (face font-lock-type-face fontified t) 1243 1244 (face font-lock-type-face fontified t) 1244 1245 (face font-lock-type-face fontified t) 1245 1246 (face font-lock-type-face fontified t) 1246 1247 (fontified t) 1247 1248 (fontified t) 1248 1256 (fontified t) 1256 1257 (fontified t) 1257 1258 (fontified t) 1258 1259 (fontified t) 1259 1260 (fontified t) 1260 1261 (fontified t) 1261 1262 (fontified t) 1262 1263 (fontified t) 1263 1264 (fontified t) 1264 1265 (fontified t) 1265 1266 (fontified t) 1266 1267 (fontified t) 1267 1268 (fontified t) 1268 1269 (fontified t) 1269 1270 (fontified t) 1270 1271 (fontified t) 1271 1272 (fontified t) 1272 1273 (fontified t) 1273 1274 (fontified t) 1274 1275 (fontified t) 1275 1276 (fontified t) 1276 1277 (fontified t) 1277 1278 (fontified t) 1278 1279 (fontified t) 1279 1280 (fontified t) 1280 1287 (fontified t) 1287 1291 (face font-lock-keyword-face fontified t) 1291 1292 (fontified t) 1292 1300 (fontified t) 1300 1301 (fontified t) 1301 1302 (fontified t) 1302 1303 (fontified t) 1303 1304 (fontified t) 1304 1305 (fontified t) 1305 1306 (fontified t) 1306 1307 (fontified t) 1307 1312 (fontified t) 1312 1313 (fontified t rear-nonsticky t) 1313 1314 (fontified t) 1314 1315 (fontified t) 1315 1316 (fontified t) 1316 1317 (fontified t) 1317 1323 (fontified t) 1323 1327 (face font-lock-keyword-face fontified t) 1327 1328 (fontified t) 1328 1329 (fontified t) 1329 1330 (fontified t) 1330 1331 (fontified t) 1331 1334 (fontified t) 1334 1335 (face font-lock-keyword-face fontified t) 1335 1336 (face font-lock-keyword-face fontified t) 1336 1337 (fontified t) 1337 1338 (fontified t) 1338 1339 (fontified t) 1339 1340 (fontified t) 1340 1341 (fontified t) 1341 1342 (fontified t) 1342 1343 (fontified t) 1343 1344 (fontified t) 1344 1345 (face font-lock-type-face fontified t) 1345 1346 (face font-lock-type-face fontified t) 1346 1347 (face font-lock-type-face fontified t) 1347 1348 (face font-lock-type-face fontified t) 1348 1349 (face font-lock-type-face fontified t) 1349 1350 (face font-lock-type-face fontified t) 1350 1351 (fontified t) 1351 1359 (fontified t) 1359 1360 (fontified t) 1360 1361 (fontified t) 1361 1362 (fontified t) 1362 1363 (fontified t) 1363 1364 (fontified t) 1364 1365 (fontified t) 1365 1366 (fontified t) 1366 1367 (fontified t) 1367 1368 (fontified t) 1368 1369 (fontified t) 1369 1370 (fontified t) 1370 1371 (fontified t) 1371 1372 (fontified t) 1372 1373 (fontified t) 1373 1374 (fontified t) 1374 1375 (fontified t) 1375 1376 (fontified t) 1376 1384 (fontified t) 1384 1385 (fontified t) 1385 1386 (fontified t) 1386 1387 (fontified t) 1387 1388 (fontified t) 1388 1389 (fontified t) 1389 1390 (fontified t) 1390 1391 (fontified t) 1391 1394 (fontified t) 1394 1398 (face font-lock-keyword-face fontified t) 1398 1399 (fontified t) 1399 1404 (fontified t) 1404 1405 (fontified t) 1405 1406 (fontified t) 1406 1413 (fontified t) 1413 1414 (face font-lock-keyword-face fontified t) 1414 1415 (face font-lock-keyword-face fontified t) 1415 1416 (fontified t) 1416 1417 (fontified t) 1417 1418 (fontified t) 1418 1419 (fontified t) 1419 1420 (fontified t) 1420 1421 (fontified t) 1421 1422 (fontified t) 1422 1423 (fontified t) 1423 1424 (fontified t) 1424 1425 (face font-lock-type-face fontified t) 1425 1426 (face font-lock-type-face fontified t) 1426 1427 (face font-lock-type-face fontified t) 1427 1428 (face font-lock-type-face fontified t) 1428 1429 (face font-lock-type-face fontified t) 1429 1430 (face font-lock-type-face fontified t) 1430 1431 (fontified t) 1431 1439 (fontified t) 1439 1440 (fontified t) 1440 1441 (fontified t) 1441 1442 (fontified t) 1442 1443 (fontified t) 1443 1444 (fontified t) 1444 1445 (fontified t) 1445 1446 (fontified t) 1446 1447 (fontified t) 1447 1455 (fontified t) 1455 1456 (fontified t) 1456 1457 (fontified t) 1457 1458 (fontified t) 1458 1459 (fontified t) 1459 1460 (fontified t) 1460 1461 (fontified t) 1461 1462 (fontified t) 1462 1469 (fontified t) 1469 1473 (face font-lock-keyword-face fontified t) 1473 1474 (fontified t) 1474 1482 (fontified t) 1482 1483 (fontified t) 1483 1484 (fontified t) 1484 1485 (fontified t) 1485 1486 (fontified t) 1486 1487 (fontified t) 1487 1488 (fontified t) 1488 1489 (fontified t) 1489 1494 (fontified t) 1494 1495 (fontified t) 1495 1496 (fontified t) 1496 1497 (fontified t) 1497 1498 (fontified t) 1498 1499 (fontified t) 1499 1503 (fontified t) 1503 1504 (fontified t) 1504 1505 (fontified t) 1505 1507 (fontified t) 1507 1511 (face font-lock-keyword-face fontified t) 1511 1512 (fontified t) 1512 1513 (face font-lock-keyword-face fontified t) 1513 1514 (face font-lock-keyword-face fontified t) 1514 1515 (fontified t) 1515 1526 (fontified t) 1526 1527 (fontified t) 1527 1528 (fontified t) 1528 1529 (fontified t) 1529 1530 (fontified t) 1530 1531 (fontified t) 1531 1532 (fontified t) 1532 1533 (fontified t) 1533 1537 (fontified t) 1537 1538 (fontified t) 1538 1539 (fontified t) 1539 1545 (fontified t) 1545 1546 (face font-lock-keyword-face fontified t) 1546 1547 (face font-lock-keyword-face fontified t) 1547 1548 (fontified t) 1548 1549 (fontified t) 1549 1550 (fontified t) 1550 1551 (fontified t) 1551 1552 (fontified t) 1552 1553 (fontified t) 1553 1554 (fontified t) 1554 1555 (fontified t) 1555 1556 (face font-lock-type-face fontified t) 1556 1557 (face font-lock-type-face fontified t) 1557 1558 (face font-lock-type-face fontified t) 1558 1559 (face font-lock-type-face fontified t) 1559 1560 (face font-lock-type-face fontified t) 1560 1561 (face font-lock-type-face fontified t) 1561 1562 (fontified t) 1562 1570 (fontified t) 1570 1571 (fontified t) 1571 1572 (fontified t) 1572 1573 (fontified t) 1573 1574 (fontified t) 1574 1575 (fontified t) 1575 1576 (fontified t) 1576 1577 (fontified t) 1577 1585 (fontified t) 1585 1586 (fontified t) 1586 1587 (fontified t) 1587 1588 (fontified t) 1588 1589 (fontified t) 1589 1590 (fontified t) 1590 1591 (fontified t) 1591 1592 (fontified t) 1592 1593 (fontified t) 1593 1594 (fontified t) 1594 1595 (fontified t) 1595 1596 (fontified t) 1596 1597 (fontified t) 1597 1598 (fontified t) 1598 1599 (fontified t) 1599 1600 (fontified t) 1600 1606 (fontified t) 1606 1610 (face font-lock-keyword-face fontified t) 1610 1611 (fontified t) 1611 1612 (fontified t) 1612 1613 (fontified t) 1613 1614 (fontified t) 1614 1617 (fontified t) 1617 1618 (face font-lock-keyword-face fontified t) 1618 1619 (face font-lock-keyword-face fontified t) 1619 1620 (fontified t) 1620 1621 (fontified t) 1621 1622 (fontified t) 1622 1623 (fontified t) 1623 1624 (fontified t) 1624 1625 (fontified t) 1625 1626 (fontified t) 1626 1627 (fontified t) 1627 1633 (face font-lock-type-face fontified t) 1633 1634 (fontified t) 1634 1642 (fontified t) 1642 1643 (fontified t) 1643 1644 (fontified t) 1644 1645 (fontified t) 1645 1646 (fontified t) 1646 1647 (fontified t) 1647 1648 (fontified t) 1648 1649 (fontified t) 1649 1650 (fontified t) 1650 1651 (fontified t) 1651 1652 (fontified t) 1652 1653 (fontified t) 1653 1654 (fontified t) 1654 1655 (fontified t) 1655 1656 (fontified t) 1656 1657 (fontified t) 1657 1658 (fontified t) 1658 1659 (fontified t) 1659 1667 (fontified t) 1667 1668 (fontified t) 1668 1669 (fontified t) 1669 1670 (fontified t) 1670 1671 (fontified t) 1671 1672 (fontified t) 1672 1673 (fontified t) 1673 1674 (fontified t) 1674 1677 (fontified t) 1677 1681 (face font-lock-keyword-face fontified t) 1681 1682 (fontified t) 1682 1687 (fontified t) 1687 1688 (fontified t) 1688 1689 (fontified t) 1689 1696 (fontified t) 1696 1697 (face font-lock-keyword-face fontified t) 1697 1698 (face font-lock-keyword-face fontified t) 1698 1699 (fontified t) 1699 1700 (fontified t) 1700 1701 (fontified t) 1701 1702 (fontified t) 1702 1703 (fontified t) 1703 1704 (fontified t) 1704 1705 (fontified t) 1705 1706 (fontified t) 1706 1712 (face font-lock-type-face fontified t) 1712 1713 (fontified t) 1713 1721 (fontified t) 1721 1722 (fontified t) 1722 1723 (fontified t) 1723 1724 (fontified t) 1724 1725 (fontified t) 1725 1726 (fontified t) 1726 1727 (fontified t) 1727 1728 (fontified t) 1728 1729 (fontified t) 1729 1730 (fontified t) 1730 1738 (fontified t) 1738 1739 (fontified t) 1739 1740 (fontified t) 1740 1741 (fontified t) 1741 1742 (fontified t) 1742 1743 (fontified t) 1743 1744 (fontified t) 1744 1745 (fontified t) 1745 1752 (fontified t) 1752 1756 (face font-lock-keyword-face fontified t) 1756 1757 (fontified t) 1757 1765 (fontified t) 1765 1766 (fontified t) 1766 1767 (fontified t) 1767 1768 (fontified t) 1768 1769 (fontified t) 1769 1770 (fontified t) 1770 1771 (fontified t) 1771 1772 (fontified t) 1772 1777 (fontified t) 1777 1778 (rear-nonsticky t fontified t) 1778 1779 (fontified t) 1779 1780 (fontified t) 1780 1781 (fontified t) 1781 1782 (fontified t) 1782 1786 (fontified t) 1786 1787 (fontified t) 1787 1788 (fontified t) 1788 1790 (fontified t) 1790 1794 (face font-lock-keyword-face fontified t) 1794 1795 (fontified t) 1795 1799 (fontified t) 1799 1800 (fontified t) 1800 1801 (fontified t) 1801 1807 (fontified t) 1807 1808 (face font-lock-keyword-face fontified t) 1808 1809 (face font-lock-keyword-face fontified t) 1809 1810 (fontified t) 1810 1811 (fontified t) 1811 1812 (fontified t) 1812 1813 (fontified t) 1813 1814 (fontified t) 1814 1815 (fontified t) 1815 1816 (fontified t) 1816 1817 (fontified t) 1817 1823 (face font-lock-type-face fontified t) 1823 1824 (fontified t) 1824 1832 (fontified t) 1832 1833 (fontified t) 1833 1834 (fontified t) 1834 1835 (fontified t) 1835 1836 (fontified t) 1836 1837 (fontified t) 1837 1838 (fontified t) 1838 1839 (fontified t) 1839 1840 (fontified t) 1840 1841 (fontified t) 1841 1842 (fontified t) 1842 1843 (fontified t) 1843 1844 (fontified t) 1844 1845 (fontified t) 1845 1846 (fontified t) 1846 1847 (fontified t) 1847 1848 (fontified t) 1848 1849 (fontified t) 1849 1857 (fontified t) 1857 1858 (fontified t) 1858 1859 (fontified t) 1859 1860 (fontified t) 1860 1861 (fontified t) 1861 1862 (fontified t) 1862 1863 (fontified t) 1863 1864 (fontified t) 1864 1867 (fontified t) 1867 1871 (face font-lock-keyword-face fontified t) 1871 1872 (fontified t) 1872 1877 (fontified t) 1877 1878 (fontified t) 1878 1879 (fontified t) 1879 1886 (fontified t) 1886 1887 (face font-lock-keyword-face fontified t) 1887 1888 (face font-lock-keyword-face fontified t) 1888 1889 (fontified t) 1889 1890 (fontified t) 1890 1891 (fontified t) 1891 1892 (fontified t) 1892 1893 (fontified t) 1893 1894 (fontified t) 1894 1895 (fontified t) 1895 1896 (fontified t) 1896 1902 (face font-lock-type-face fontified t) 1902 1903 (fontified t) 1903 1911 (fontified t) 1911 1912 (fontified t) 1912 1913 (fontified t) 1913 1914 (fontified t) 1914 1915 (fontified t) 1915 1916 (fontified t) 1916 1917 (fontified t) 1917 1918 (fontified t) 1918 1919 (fontified t) 1919 1920 (fontified t) 1920 1928 (fontified t) 1928 1929 (fontified t) 1929 1930 (fontified t) 1930 1931 (fontified t) 1931 1932 (fontified t) 1932 1933 (fontified t) 1933 1934 (fontified t) 1934 1935 (fontified t) 1935 1942 (fontified t) 1942 1946 (face font-lock-keyword-face fontified t) 1946 1947 (fontified t) 1947 1955 (fontified t) 1955 1956 (fontified t) 1956 1957 (fontified t) 1957 1958 (fontified t) 1958 1959 (fontified t) 1959 1960 (fontified t) 1960 1961 (fontified t) 1961 1962 (fontified t) 1962 1967 (fontified t) 1967 1968 (rear-nonsticky t fontified t) 1968 1969 (fontified t) 1969 1973 (fontified t) 1973 1974 (fontified t) 1974 1975 (fontified t) 1975 1976 (fontified t) 1976 1978 (fontified t) 1978 1979 (face font-lock-keyword-face fontified t) 1979 1980 (face font-lock-keyword-face fontified t) 1980 1981 (face font-lock-keyword-face fontified t) 1981 1982 (face font-lock-keyword-face fontified t) 1982 1983 (face font-lock-keyword-face fontified t) 1983 1984 (face font-lock-keyword-face fontified t) 1984 1985 (fontified t) 1985 1993 (fontified t) 1993 1994 (fontified t) 1994 1995 (fontified t) 1995 1996 (fontified t) 1996 1997 (fontified t) 1997 1998 (fontified t)) . 537) (undo-tree-id698 . -918) (undo-tree-id699 . -1998) (undo-tree-id700 . -1998) 2535 (t 25192 10536 611453 600000)) nil (25192 10585 618517 298000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14005 . 14006) (nil fontified nil 14005 . 14006) (nil fontified nil 14004 . 14005) (nil fontified nil 14003 . 14004) (nil fontified nil 14002 . 14003) (nil fontified nil 14001 . 14002) (nil fontified nil 13993 . 14001) (nil fontified nil 13992 . 13993) (nil fontified nil 13991 . 13992) (nil fontified nil 13990 . 13991) (nil fontified nil 13989 . 13990) (nil fontified nil 13988 . 13989) (nil fontified nil 13987 . 13988) (nil fontified nil 13986 . 13987) (nil fontified nil 13984 . 13986) (nil fontified nil 13983 . 13984) (nil fontified nil 13982 . 13983) (nil fontified nil 13981 . 13982) (nil fontified nil 13977 . 13981) (nil fontified nil 13976 . 13977) (nil fontified nil 13975 . 13976) (nil fontified nil 13970 . 13975) (nil fontified nil 13969 . 13970) (nil fontified nil 13968 . 13969) (nil fontified nil 13967 . 13968) (nil fontified nil 13966 . 13967) (nil fontified nil 13965 . 13966) (nil fontified nil 13964 . 13965) (nil fontified nil 13963 . 13964) (nil fontified nil 13955 . 13963) (nil fontified nil 13954 . 13955) (nil fontified nil 13950 . 13954) (nil fontified nil 13943 . 13950) (nil fontified nil 13942 . 13943) (nil fontified nil 13941 . 13942) (nil fontified nil 13940 . 13941) (nil fontified nil 13939 . 13940) (nil fontified nil 13938 . 13939) (nil fontified nil 13937 . 13938) (nil fontified nil 13936 . 13937) (nil fontified nil 13928 . 13936) (nil fontified nil 13927 . 13928) (nil fontified nil 13926 . 13927) (nil fontified nil 13925 . 13926) (nil fontified nil 13924 . 13925) (nil fontified nil 13923 . 13924) (nil fontified nil 13922 . 13923) (nil fontified nil 13921 . 13922) (nil fontified nil 13920 . 13921) (nil fontified nil 13919 . 13920) (nil fontified nil 13911 . 13919) (nil fontified nil 13910 . 13911) (nil fontified nil 13904 . 13910) (nil fontified nil 13903 . 13904) (nil fontified nil 13902 . 13903) (nil fontified nil 13901 . 13902) (nil fontified nil 13900 . 13901) (nil fontified nil 13899 . 13900) (nil fontified nil 13898 . 13899) (nil fontified nil 13897 . 13898) (nil fontified nil 13896 . 13897) (nil fontified nil 13895 . 13896) (nil fontified nil 13894 . 13895) (nil fontified nil 13887 . 13894) (nil fontified nil 13886 . 13887) (nil fontified nil 13885 . 13886) (nil fontified nil 13880 . 13885) (nil fontified nil 13879 . 13880) (nil fontified nil 13875 . 13879) (nil fontified nil 13872 . 13875) (nil fontified nil 13871 . 13872) (nil fontified nil 13870 . 13871) (nil fontified nil 13869 . 13870) (nil fontified nil 13868 . 13869) (nil fontified nil 13867 . 13868) (nil fontified nil 13866 . 13867) (nil fontified nil 13865 . 13866) (nil fontified nil 13857 . 13865) (nil fontified nil 13856 . 13857) (nil fontified nil 13855 . 13856) (nil fontified nil 13854 . 13855) (nil fontified nil 13853 . 13854) (nil fontified nil 13852 . 13853) (nil fontified nil 13851 . 13852) (nil fontified nil 13850 . 13851) (nil fontified nil 13849 . 13850) (nil fontified nil 13848 . 13849) (nil fontified nil 13847 . 13848) (nil fontified nil 13846 . 13847) (nil fontified nil 13845 . 13846) (nil fontified nil 13844 . 13845) (nil fontified nil 13843 . 13844) (nil fontified nil 13842 . 13843) (nil fontified nil 13841 . 13842) (nil fontified nil 13840 . 13841) (nil fontified nil 13832 . 13840) (nil fontified nil 13831 . 13832) (nil fontified nil 13825 . 13831) (nil fontified nil 13824 . 13825) (nil fontified nil 13823 . 13824) (nil fontified nil 13822 . 13823) (nil fontified nil 13821 . 13822) (nil fontified nil 13820 . 13821) (nil fontified nil 13819 . 13820) (nil fontified nil 13818 . 13819) (nil fontified nil 13817 . 13818) (nil fontified nil 13816 . 13817) (nil fontified nil 13815 . 13816) (nil fontified nil 13809 . 13815) (nil fontified nil 13808 . 13809) (nil fontified nil 13807 . 13808) (nil fontified nil 13803 . 13807) (nil fontified nil 13802 . 13803) (nil fontified nil 13798 . 13802) (nil fontified nil 13796 . 13798) (nil fontified nil 13795 . 13796) (nil fontified nil 13794 . 13795) (nil fontified nil 13790 . 13794) (nil fontified nil 13789 . 13790) (nil fontified nil 13788 . 13789) (nil fontified nil 13787 . 13788) (nil fontified nil 13786 . 13787) (nil fontified nil 13785 . 13786) (nil fontified nil 13780 . 13785) (nil fontified nil 13779 . 13780) (nil fontified nil 13778 . 13779) (nil fontified nil 13777 . 13778) (nil fontified nil 13776 . 13777) (nil fontified nil 13775 . 13776) (nil fontified nil 13774 . 13775) (nil fontified nil 13773 . 13774) (nil fontified nil 13765 . 13773) (nil fontified nil 13764 . 13765) (nil fontified nil 13760 . 13764) (nil fontified nil 13753 . 13760) (nil fontified nil 13752 . 13753) (nil fontified nil 13751 . 13752) (nil fontified nil 13750 . 13751) (nil fontified nil 13749 . 13750) (nil fontified nil 13748 . 13749) (nil fontified nil 13747 . 13748) (nil fontified nil 13746 . 13747) (nil fontified nil 13738 . 13746) (nil fontified nil 13737 . 13738) (nil fontified nil 13736 . 13737) (nil fontified nil 13735 . 13736) (nil fontified nil 13734 . 13735) (nil fontified nil 13733 . 13734) (nil fontified nil 13732 . 13733) (nil fontified nil 13731 . 13732) (nil fontified nil 13730 . 13731) (nil fontified nil 13729 . 13730) (nil fontified nil 13721 . 13729) (nil fontified nil 13720 . 13721) (nil fontified nil 13714 . 13720) (nil fontified nil 13713 . 13714) (nil fontified nil 13712 . 13713) (nil fontified nil 13711 . 13712) (nil fontified nil 13710 . 13711) (nil fontified nil 13709 . 13710) (nil fontified nil 13708 . 13709) (nil fontified nil 13707 . 13708) (nil fontified nil 13706 . 13707) (nil fontified nil 13705 . 13706) (nil fontified nil 13704 . 13705) (nil fontified nil 13697 . 13704) (nil fontified nil 13696 . 13697) (nil fontified nil 13695 . 13696) (nil fontified nil 13690 . 13695) (nil fontified nil 13689 . 13690) (nil fontified nil 13685 . 13689) (nil fontified nil 13682 . 13685) (nil fontified nil 13681 . 13682) (nil fontified nil 13680 . 13681) (nil fontified nil 13679 . 13680) (nil fontified nil 13678 . 13679) (nil fontified nil 13677 . 13678) (nil fontified nil 13676 . 13677) (nil fontified nil 13675 . 13676) (nil fontified nil 13667 . 13675) (nil fontified nil 13666 . 13667) (nil fontified nil 13665 . 13666) (nil fontified nil 13664 . 13665) (nil fontified nil 13663 . 13664) (nil fontified nil 13662 . 13663) (nil fontified nil 13661 . 13662) (nil fontified nil 13660 . 13661) (nil fontified nil 13659 . 13660) (nil fontified nil 13658 . 13659) (nil fontified nil 13657 . 13658) (nil fontified nil 13656 . 13657) (nil fontified nil 13655 . 13656) (nil fontified nil 13654 . 13655) (nil fontified nil 13653 . 13654) (nil fontified nil 13652 . 13653) (nil fontified nil 13651 . 13652) (nil fontified nil 13650 . 13651) (nil fontified nil 13642 . 13650) (nil fontified nil 13641 . 13642) (nil fontified nil 13635 . 13641) (nil fontified nil 13634 . 13635) (nil fontified nil 13633 . 13634) (nil fontified nil 13632 . 13633) (nil fontified nil 13631 . 13632) (nil fontified nil 13630 . 13631) (nil fontified nil 13629 . 13630) (nil fontified nil 13628 . 13629) (nil fontified nil 13627 . 13628) (nil fontified nil 13626 . 13627) (nil fontified nil 13625 . 13626) (nil fontified nil 13622 . 13625) (nil fontified nil 13621 . 13622) (nil fontified nil 13620 . 13621) (nil fontified nil 13619 . 13620) (nil fontified nil 13618 . 13619) (nil fontified nil 13614 . 13618) (nil fontified nil 13608 . 13614) (nil fontified nil 13607 . 13608) (nil fontified nil 13606 . 13607) (nil fontified nil 13605 . 13606) (nil fontified nil 13604 . 13605) (nil fontified nil 13603 . 13604) (nil fontified nil 13602 . 13603) (nil fontified nil 13601 . 13602) (nil fontified nil 13600 . 13601) (nil fontified nil 13599 . 13600) (nil fontified nil 13598 . 13599) (nil fontified nil 13597 . 13598) (nil fontified nil 13596 . 13597) (nil fontified nil 13595 . 13596) (nil fontified nil 13594 . 13595) (nil fontified nil 13593 . 13594) (nil fontified nil 13585 . 13593) (nil fontified nil 13584 . 13585) (nil fontified nil 13583 . 13584) (nil fontified nil 13582 . 13583) (nil fontified nil 13581 . 13582) (nil fontified nil 13580 . 13581) (nil fontified nil 13579 . 13580) (nil fontified nil 13578 . 13579) (nil fontified nil 13570 . 13578) (nil fontified nil 13569 . 13570) (nil fontified nil 13568 . 13569) (nil fontified nil 13567 . 13568) (nil fontified nil 13566 . 13567) (nil fontified nil 13565 . 13566) (nil fontified nil 13564 . 13565) (nil fontified nil 13563 . 13564) (nil fontified nil 13562 . 13563) (nil fontified nil 13561 . 13562) (nil fontified nil 13560 . 13561) (nil fontified nil 13559 . 13560) (nil fontified nil 13558 . 13559) (nil fontified nil 13557 . 13558) (nil fontified nil 13556 . 13557) (nil fontified nil 13555 . 13556) (nil fontified nil 13554 . 13555) (nil fontified nil 13553 . 13554) (nil fontified nil 13547 . 13553) (nil fontified nil 13546 . 13547) (nil fontified nil 13545 . 13546) (nil fontified nil 13541 . 13545) (nil fontified nil 13540 . 13541) (nil fontified nil 13539 . 13540) (nil fontified nil 13538 . 13539) (nil fontified nil 13537 . 13538) (nil fontified nil 13536 . 13537) (nil fontified nil 13535 . 13536) (nil fontified nil 13534 . 13535) (nil fontified nil 13523 . 13534) (nil fontified nil 13522 . 13523) (nil fontified nil 13521 . 13522) (nil fontified nil 13520 . 13521) (nil fontified nil 13519 . 13520) (nil fontified nil 13515 . 13519) (nil fontified nil 13513 . 13515) (nil fontified nil 13512 . 13513) (nil fontified nil 13511 . 13512) (nil fontified nil 13507 . 13511) (nil fontified nil 13506 . 13507) (nil fontified nil 13505 . 13506) (nil fontified nil 13504 . 13505) (nil fontified nil 13503 . 13504) (nil fontified nil 13502 . 13503) (nil fontified nil 13497 . 13502) (nil fontified nil 13496 . 13497) (nil fontified nil 13495 . 13496) (nil fontified nil 13494 . 13495) (nil fontified nil 13493 . 13494) (nil fontified nil 13492 . 13493) (nil fontified nil 13491 . 13492) (nil fontified nil 13490 . 13491) (nil fontified nil 13482 . 13490) (nil fontified nil 13481 . 13482) (nil fontified nil 13477 . 13481) (nil fontified nil 13470 . 13477) (nil fontified nil 13469 . 13470) (nil fontified nil 13468 . 13469) (nil fontified nil 13467 . 13468) (nil fontified nil 13466 . 13467) (nil fontified nil 13465 . 13466) (nil fontified nil 13464 . 13465) (nil fontified nil 13463 . 13464) (nil fontified nil 13455 . 13463) (nil fontified nil 13454 . 13455) (nil fontified nil 13453 . 13454) (nil fontified nil 13452 . 13453) (nil fontified nil 13451 . 13452) (nil fontified nil 13450 . 13451) (nil fontified nil 13449 . 13450) (nil fontified nil 13448 . 13449) (nil fontified nil 13447 . 13448) (nil fontified nil 13439 . 13447) (nil fontified nil 13438 . 13439) (nil fontified nil 13437 . 13438) (nil fontified nil 13436 . 13437) (nil fontified nil 13435 . 13436) (nil fontified nil 13434 . 13435) (nil fontified nil 13433 . 13434) (nil fontified nil 13432 . 13433) (nil fontified nil 13431 . 13432) (nil fontified nil 13430 . 13431) (nil fontified nil 13429 . 13430) (nil fontified nil 13428 . 13429) (nil fontified nil 13427 . 13428) (nil fontified nil 13426 . 13427) (nil fontified nil 13425 . 13426) (nil fontified nil 13424 . 13425) (nil fontified nil 13423 . 13424) (nil fontified nil 13422 . 13423) (nil fontified nil 13421 . 13422) (nil fontified nil 13414 . 13421) (nil fontified nil 13413 . 13414) (nil fontified nil 13412 . 13413) (nil fontified nil 13407 . 13412) (nil fontified nil 13406 . 13407) (nil fontified nil 13402 . 13406) (nil fontified nil 13399 . 13402) (nil fontified nil 13398 . 13399) (nil fontified nil 13397 . 13398) (nil fontified nil 13396 . 13397) (nil fontified nil 13395 . 13396) (nil fontified nil 13394 . 13395) (nil fontified nil 13393 . 13394) (nil fontified nil 13392 . 13393) (nil fontified nil 13384 . 13392) (nil fontified nil 13383 . 13384) (nil fontified nil 13382 . 13383) (nil fontified nil 13381 . 13382) (nil fontified nil 13380 . 13381) (nil fontified nil 13379 . 13380) (nil fontified nil 13378 . 13379) (nil fontified nil 13377 . 13378) (nil fontified nil 13376 . 13377) (nil fontified nil 13375 . 13376) (nil fontified nil 13374 . 13375) (nil fontified nil 13373 . 13374) (nil fontified nil 13372 . 13373) (nil fontified nil 13371 . 13372) (nil fontified nil 13370 . 13371) (nil fontified nil 13369 . 13370) (nil fontified nil 13368 . 13369) (nil fontified nil 13367 . 13368) (nil fontified nil 13359 . 13367) (nil fontified nil 13358 . 13359) (nil fontified nil 13357 . 13358) (nil fontified nil 13356 . 13357) (nil fontified nil 13355 . 13356) (nil fontified nil 13354 . 13355) (nil fontified nil 13353 . 13354) (nil fontified nil 13352 . 13353) (nil fontified nil 13351 . 13352) (nil fontified nil 13350 . 13351) (nil fontified nil 13349 . 13350) (nil fontified nil 13348 . 13349) (nil fontified nil 13347 . 13348) (nil fontified nil 13346 . 13347) (nil fontified nil 13345 . 13346) (nil fontified nil 13344 . 13345) (nil fontified nil 13343 . 13344) (nil fontified nil 13342 . 13343) (nil fontified nil 13339 . 13342) (nil fontified nil 13338 . 13339) (nil fontified nil 13337 . 13338) (nil fontified nil 13336 . 13337) (nil fontified nil 13335 . 13336) (nil fontified nil 13331 . 13335) (nil fontified nil 13325 . 13331) (nil fontified nil 13324 . 13325) (nil fontified nil 13323 . 13324) (nil fontified nil 13322 . 13323) (nil fontified nil 13321 . 13322) (nil fontified nil 13320 . 13321) (nil fontified nil 13315 . 13320) (nil fontified nil 13314 . 13315) (nil fontified nil 13313 . 13314) (nil fontified nil 13312 . 13313) (nil fontified nil 13311 . 13312) (nil fontified nil 13310 . 13311) (nil fontified nil 13309 . 13310) (nil fontified nil 13308 . 13309) (nil fontified nil 13300 . 13308) (nil fontified nil 13299 . 13300) (nil fontified nil 13295 . 13299) (nil fontified nil 13288 . 13295) (nil fontified nil 13287 . 13288) (nil fontified nil 13286 . 13287) (nil fontified nil 13285 . 13286) (nil fontified nil 13284 . 13285) (nil fontified nil 13283 . 13284) (nil fontified nil 13282 . 13283) (nil fontified nil 13281 . 13282) (nil fontified nil 13280 . 13281) (nil fontified nil 13279 . 13280) (nil fontified nil 13278 . 13279) (nil fontified nil 13277 . 13278) (nil fontified nil 13276 . 13277) (nil fontified nil 13275 . 13276) (nil fontified nil 13274 . 13275) (nil fontified nil 13273 . 13274) (nil fontified nil 13272 . 13273) (nil fontified nil 13271 . 13272) (nil fontified nil 13270 . 13271) (nil fontified nil 13269 . 13270) (nil fontified nil 13268 . 13269) (nil fontified nil 13267 . 13268) (nil fontified nil 13266 . 13267) (nil fontified nil 13265 . 13266) (nil fontified nil 13264 . 13265) (nil fontified nil 13256 . 13264) (nil fontified nil 13255 . 13256) (nil fontified nil 13254 . 13255) (nil fontified nil 13253 . 13254) (nil fontified nil 13252 . 13253) (nil fontified nil 13251 . 13252) (nil fontified nil 13250 . 13251) (nil fontified nil 13249 . 13250) (nil fontified nil 13248 . 13249) (nil fontified nil 13247 . 13248) (nil fontified nil 13246 . 13247) (nil fontified nil 13245 . 13246) (nil fontified nil 13244 . 13245) (nil fontified nil 13243 . 13244) (nil fontified nil 13242 . 13243) (nil fontified nil 13241 . 13242) (nil fontified nil 13240 . 13241) (nil fontified nil 13239 . 13240) (nil fontified nil 13238 . 13239) (nil fontified nil 13237 . 13238) (nil fontified nil 13230 . 13237) (nil fontified nil 13229 . 13230) (nil fontified nil 13228 . 13229) (nil fontified nil 13223 . 13228) (nil fontified nil 13222 . 13223) (nil fontified nil 13218 . 13222) (nil fontified nil 13215 . 13218) (nil fontified nil 13214 . 13215) (nil fontified nil 13213 . 13214) (nil fontified nil 13208 . 13213) (nil fontified nil 13207 . 13208) (nil fontified nil 13206 . 13207) (nil fontified nil 13205 . 13206) (nil fontified nil 13204 . 13205) (nil fontified nil 13203 . 13204) (nil fontified nil 13202 . 13203) (nil fontified nil 13201 . 13202) (nil fontified nil 13193 . 13201) (nil fontified nil 13192 . 13193) (nil fontified nil 13188 . 13192) (nil fontified nil 13181 . 13188) (nil fontified nil 13180 . 13181) (nil fontified nil 13179 . 13180) (nil fontified nil 13178 . 13179) (nil fontified nil 13177 . 13178) (nil fontified nil 13176 . 13177) (nil fontified nil 13175 . 13176) (nil fontified nil 13174 . 13175) (nil fontified nil 13173 . 13174) (nil fontified nil 13172 . 13173) (nil fontified nil 13171 . 13172) (nil fontified nil 13170 . 13171) (nil fontified nil 13169 . 13170) (nil fontified nil 13168 . 13169) (nil fontified nil 13167 . 13168) (nil fontified nil 13166 . 13167) (nil fontified nil 13165 . 13166) (nil fontified nil 13164 . 13165) (nil fontified nil 13163 . 13164) (nil fontified nil 13162 . 13163) (nil fontified nil 13161 . 13162) (nil fontified nil 13160 . 13161) (nil fontified nil 13159 . 13160) (nil fontified nil 13158 . 13159) (nil fontified nil 13157 . 13158) (nil fontified nil 13149 . 13157) (nil fontified nil 13148 . 13149) (nil fontified nil 13147 . 13148) (nil fontified nil 13146 . 13147) (nil fontified nil 13145 . 13146) (nil fontified nil 13144 . 13145) (nil fontified nil 13143 . 13144) (nil fontified nil 13142 . 13143) (nil fontified nil 13141 . 13142) (nil fontified nil 13140 . 13141) (nil fontified nil 13139 . 13140) (nil fontified nil 13138 . 13139) (nil fontified nil 13137 . 13138) (nil fontified nil 13136 . 13137) (nil fontified nil 13135 . 13136) (nil fontified nil 13134 . 13135) (nil fontified nil 13133 . 13134) (nil fontified nil 13132 . 13133) (nil fontified nil 13131 . 13132) (nil fontified nil 13130 . 13131) (nil fontified nil 13123 . 13130) (nil fontified nil 13122 . 13123) (nil fontified nil 13121 . 13122) (nil fontified nil 13116 . 13121) (nil fontified nil 13115 . 13116) (nil fontified nil 13114 . 13115) (nil fontified nil 13113 . 13114) (nil fontified nil 13112 . 13113) (nil fontified nil 13111 . 13112) (nil fontified nil 13110 . 13111) (nil fontified nil 13109 . 13110) (nil fontified nil 13108 . 13109) (nil fontified nil 13107 . 13108) (nil fontified nil 13106 . 13107) (nil fontified nil 13105 . 13106) (nil fontified nil 13104 . 13105) (nil fontified nil 13103 . 13104) (nil fontified nil 13102 . 13103) (nil fontified nil 13101 . 13102) (nil fontified nil 13100 . 13101) (nil fontified nil 13099 . 13100) (nil fontified nil 13098 . 13099) (nil fontified nil 13097 . 13098) (nil fontified nil 13096 . 13097) (nil fontified nil 13092 . 13096) (nil fontified nil 13089 . 13092) (nil fontified nil 13088 . 13089) (nil fontified nil 13087 . 13088) (nil fontified nil 13082 . 13087) (nil fontified nil 13081 . 13082) (nil fontified nil 13080 . 13081) (nil fontified nil 13079 . 13080) (nil fontified nil 13078 . 13079) (nil fontified nil 13077 . 13078) (nil fontified nil 13076 . 13077) (nil fontified nil 13075 . 13076) (nil fontified nil 13067 . 13075) (nil fontified nil 13066 . 13067) (nil fontified nil 13062 . 13066) (nil fontified nil 13055 . 13062) (nil fontified nil 13054 . 13055) (nil fontified nil 13053 . 13054) (nil fontified nil 13052 . 13053) (nil fontified nil 13051 . 13052) (nil fontified nil 13050 . 13051) (nil fontified nil 13049 . 13050) (nil fontified nil 13048 . 13049) (nil fontified nil 13047 . 13048) (nil fontified nil 13046 . 13047) (nil fontified nil 13045 . 13046) (nil fontified nil 13044 . 13045) (nil fontified nil 13043 . 13044) (nil fontified nil 13042 . 13043) (nil fontified nil 13041 . 13042) (nil fontified nil 13040 . 13041) (nil fontified nil 13039 . 13040) (nil fontified nil 13038 . 13039) (nil fontified nil 13037 . 13038) (nil fontified nil 13036 . 13037) (nil fontified nil 13035 . 13036) (nil fontified nil 13034 . 13035) (nil fontified nil 13033 . 13034) (nil fontified nil 13032 . 13033) (nil fontified nil 13031 . 13032) (nil fontified nil 13023 . 13031) (nil fontified nil 13022 . 13023) (nil fontified nil 13021 . 13022) (nil fontified nil 13020 . 13021) (nil fontified nil 13019 . 13020) (nil fontified nil 13018 . 13019) (nil fontified nil 13017 . 13018) (nil fontified nil 13016 . 13017) (nil fontified nil 13015 . 13016) (nil fontified nil 13014 . 13015) (nil fontified nil 13013 . 13014) (nil fontified nil 13012 . 13013) (nil fontified nil 13011 . 13012) (nil fontified nil 13010 . 13011) (nil fontified nil 13009 . 13010) (nil fontified nil 13008 . 13009) (nil fontified nil 13007 . 13008) (nil fontified nil 13006 . 13007) (nil fontified nil 13005 . 13006) (nil fontified nil 13004 . 13005) (nil fontified nil 12997 . 13004) (nil fontified nil 12996 . 12997) (nil fontified nil 12995 . 12996) (nil fontified nil 12990 . 12995) (nil fontified nil 12989 . 12990) (nil fontified nil 12988 . 12989) (nil fontified nil 12987 . 12988) (nil fontified nil 12986 . 12987) (nil fontified nil 12985 . 12986) (nil fontified nil 12984 . 12985) (nil fontified nil 12983 . 12984) (nil fontified nil 12982 . 12983) (nil fontified nil 12981 . 12982) (nil fontified nil 12980 . 12981) (nil fontified nil 12979 . 12980) (nil fontified nil 12978 . 12979) (nil fontified nil 12977 . 12978) (nil fontified nil 12976 . 12977) (nil fontified nil 12975 . 12976) (nil fontified nil 12974 . 12975) (nil fontified nil 12973 . 12974) (nil fontified nil 12972 . 12973) (nil fontified nil 12971 . 12972) (nil fontified nil 12968 . 12971) (nil fontified nil 12967 . 12968) (nil fontified nil 12966 . 12967) (nil fontified nil 12965 . 12966) (nil fontified nil 12964 . 12965) (nil fontified nil 12963 . 12964) (nil fontified nil 12962 . 12963) (nil fontified nil 12961 . 12962) (nil fontified nil 12960 . 12961) (nil fontified nil 12948 . 12960) (nil fontified nil 12942 . 12948) (nil fontified nil 12934 . 12942) (nil fontified nil 12932 . 12934) (nil fontified nil 12926 . 12932) (nil fontified nil 12925 . 12926) (nil fontified nil 12924 . 12925) (nil fontified nil 12920 . 12924) (nil fontified nil 12919 . 12920) (nil fontified nil 12918 . 12919) (nil fontified nil 12917 . 12918) (nil fontified nil 12916 . 12917) (nil fontified nil 12915 . 12916) (nil fontified nil 12914 . 12915) (nil fontified nil 12913 . 12914) (nil fontified nil 12902 . 12913) (nil fontified nil 12900 . 12902) (nil fontified nil 12898 . 12900) (nil fontified nil 12896 . 12898) (nil fontified nil 12895 . 12896) (nil fontified nil 12894 . 12895) (nil fontified nil 12886 . 12894) (nil fontified nil 12885 . 12886) (nil fontified nil 12884 . 12885) (nil fontified nil 12883 . 12884) (nil fontified nil 12882 . 12883) (nil fontified nil 12880 . 12882) (nil fontified nil 12879 . 12880) (nil fontified nil 12878 . 12879) (nil fontified nil 12877 . 12878) (nil fontified nil 12876 . 12877) (nil fontified nil 12875 . 12876) (nil fontified nil 12874 . 12875) (nil fontified nil 12873 . 12874) (nil fontified nil 12872 . 12873) (nil fontified nil 12871 . 12872) (nil fontified nil 12870 . 12871) (nil fontified nil 12869 . 12870) (nil fontified nil 12868 . 12869) (nil fontified nil 12867 . 12868) (nil fontified nil 12866 . 12867) (nil fontified nil 12865 . 12866) (nil fontified nil 12864 . 12865) (nil fontified nil 12863 . 12864) (nil fontified nil 12862 . 12863) (nil fontified nil 12861 . 12862) (nil fontified nil 12860 . 12861) (nil fontified nil 12859 . 12860) (nil fontified nil 12858 . 12859) (nil fontified nil 12857 . 12858) (nil fontified nil 12856 . 12857) (nil fontified nil 12855 . 12856) (nil fontified nil 12854 . 12855) (nil fontified nil 12852 . 12854) (nil fontified nil 12851 . 12852) (nil fontified nil 12850 . 12851) (nil fontified nil 12849 . 12850) (nil fontified nil 12848 . 12849) (nil fontified nil 12847 . 12848) (nil fontified nil 12846 . 12847) (nil fontified nil 12845 . 12846) (nil fontified nil 12844 . 12845) (nil fontified nil 12843 . 12844) (nil fontified nil 12842 . 12843) (nil fontified nil 12841 . 12842) (nil fontified nil 12840 . 12841) (nil fontified nil 12839 . 12840) (nil fontified nil 12838 . 12839) (nil fontified nil 12837 . 12838) (nil fontified nil 12836 . 12837) (nil fontified nil 12835 . 12836) (nil fontified nil 12834 . 12835) (nil fontified nil 12833 . 12834) (nil fontified nil 12832 . 12833) (nil fontified nil 12831 . 12832) (nil fontified nil 12830 . 12831) (nil fontified nil 12829 . 12830) (nil fontified nil 12828 . 12829) (nil fontified nil 12827 . 12828) (nil fontified nil 12826 . 12827) (nil fontified nil 12825 . 12826) (nil fontified nil 12824 . 12825) (nil fontified nil 12822 . 12824) (nil fontified nil 12821 . 12822) (nil fontified nil 12820 . 12821) (nil fontified nil 12819 . 12820) (nil fontified nil 12818 . 12819) (nil fontified nil 12817 . 12818) (nil fontified nil 12816 . 12817) (nil fontified nil 12815 . 12816) (nil fontified nil 12814 . 12815) (nil fontified nil 12813 . 12814) (nil fontified nil 12812 . 12813) (nil fontified nil 12811 . 12812) (nil fontified nil 12810 . 12811) (nil fontified nil 12809 . 12810) (nil fontified nil 12808 . 12809) (nil fontified nil 12807 . 12808) (nil fontified nil 12806 . 12807) (nil fontified nil 12805 . 12806) (nil fontified nil 12804 . 12805) (nil fontified nil 12803 . 12804) (nil fontified nil 12802 . 12803) (nil fontified nil 12801 . 12802) (nil fontified nil 12800 . 12801) (nil fontified nil 12799 . 12800) (nil fontified nil 12798 . 12799) (nil fontified nil 12797 . 12798) (nil fontified nil 12796 . 12797) (nil fontified nil 12795 . 12796) (nil fontified nil 12794 . 12795) (nil fontified nil 12793 . 12794) (nil fontified nil 12792 . 12793) (nil fontified nil 12791 . 12792) (nil fontified nil 12790 . 12791) (nil fontified nil 12789 . 12790) (nil fontified nil 12778 . 12789) (nil fontified nil 12777 . 12778) (nil fontified nil 12776 . 12777) (nil fontified nil 12775 . 12776) (nil fontified nil 12774 . 12775) (nil fontified nil 12773 . 12774) (nil fontified nil 12772 . 12773) (nil fontified nil 12764 . 12772) (nil fontified nil 12763 . 12764) (nil fontified nil 12762 . 12763) (nil fontified nil 12761 . 12762) (nil fontified nil 12760 . 12761) (nil fontified nil 12759 . 12760) (nil fontified nil 12758 . 12759) (nil fontified nil 12757 . 12758) (nil fontified nil 12756 . 12757) (nil fontified nil 12755 . 12756) (nil fontified nil 12754 . 12755) (nil fontified nil 12753 . 12754) (nil fontified nil 12752 . 12753) (nil fontified nil 12751 . 12752) (nil fontified nil 12750 . 12751) (nil fontified nil 12749 . 12750) (nil fontified nil 12748 . 12749) (nil fontified nil 12747 . 12748) (nil fontified nil 12745 . 12747) (nil fontified nil 12744 . 12745) (nil fontified nil 12743 . 12744) (nil fontified nil 12742 . 12743) (nil fontified nil 12741 . 12742) (nil fontified nil 12740 . 12741) (nil fontified nil 12739 . 12740) (nil fontified nil 12738 . 12739) (nil fontified nil 12737 . 12738) (nil fontified nil 12736 . 12737) (nil fontified nil 12732 . 12736) (nil fontified nil 12730 . 12732) (nil fontified nil 12729 . 12730) (nil fontified nil 12728 . 12729) (nil fontified nil 12727 . 12728) (nil fontified nil 12726 . 12727) (nil fontified nil 12725 . 12726) (nil fontified nil 12724 . 12725) (nil fontified nil 12723 . 12724) (nil fontified nil 12722 . 12723) (nil fontified nil 12721 . 12722) (nil fontified nil 12720 . 12721) (nil fontified nil 12719 . 12720) (nil fontified nil 12718 . 12719) (nil fontified nil 12717 . 12718) (nil fontified nil 12716 . 12717) (nil fontified nil 12715 . 12716) (nil fontified nil 12714 . 12715) (nil fontified nil 12713 . 12714) (nil fontified nil 12712 . 12713) (nil fontified nil 12711 . 12712) (nil fontified nil 12710 . 12711) (nil fontified nil 12709 . 12710) (nil fontified nil 12708 . 12709) (nil fontified nil 12707 . 12708) (nil fontified nil 12706 . 12707) (nil fontified nil 12705 . 12706) (nil fontified nil 12704 . 12705) (nil fontified nil 12703 . 12704) (nil fontified nil 12702 . 12703) (nil fontified nil 12698 . 12702) (nil fontified nil 12696 . 12698) (nil fontified nil 12695 . 12696) (nil fontified nil 12694 . 12695) (nil fontified nil 12693 . 12694) (nil fontified nil 12692 . 12693) (nil fontified nil 12691 . 12692) (nil fontified nil 12690 . 12691) (nil fontified nil 12689 . 12690) (nil fontified nil 12688 . 12689) (nil fontified nil 12687 . 12688) (nil fontified nil 12686 . 12687) (nil fontified nil 12685 . 12686) (nil fontified nil 12684 . 12685) (nil fontified nil 12683 . 12684) (nil fontified nil 12682 . 12683) (nil fontified nil 12681 . 12682) (nil fontified nil 12680 . 12681) (nil fontified nil 12679 . 12680) (nil fontified nil 12678 . 12679) (nil fontified nil 12677 . 12678) (nil fontified nil 12676 . 12677) (nil fontified nil 12675 . 12676) (nil fontified nil 12674 . 12675) (nil fontified nil 12673 . 12674) (nil fontified nil 12672 . 12673) (nil fontified nil 12670 . 12672) (nil fontified nil 12668 . 12670) (nil fontified nil 12666 . 12668) (nil fontified nil 12665 . 12666) (nil fontified nil 12664 . 12665) (nil fontified nil 12663 . 12664) (nil fontified nil 12662 . 12663) (nil fontified nil 12661 . 12662) (nil fontified nil 12660 . 12661) (nil fontified nil 12659 . 12660) (nil fontified nil 12658 . 12659) (nil fontified nil 12657 . 12658) (nil fontified nil 12656 . 12657) (nil fontified nil 12654 . 12656) (nil fontified nil 12653 . 12654) (nil fontified nil 12652 . 12653) (nil fontified nil 12651 . 12652) (nil fontified nil 12650 . 12651) (nil fontified nil 12649 . 12650) (nil fontified nil 12648 . 12649) (nil fontified nil 12647 . 12648) (nil fontified nil 12646 . 12647) (nil fontified nil 12645 . 12646) (nil fontified nil 12644 . 12645) (nil fontified nil 12643 . 12644) (nil fontified nil 12632 . 12643) (nil fontified nil 12631 . 12632) (nil fontified nil 12630 . 12631) (nil fontified nil 12629 . 12630) (nil fontified nil 12628 . 12629) (nil fontified nil 12627 . 12628) (nil fontified nil 12626 . 12627) (nil fontified nil 12625 . 12626) (nil fontified nil 12624 . 12625) (nil fontified nil 12623 . 12624) (nil fontified nil 12622 . 12623) (nil fontified nil 12621 . 12622) (nil fontified nil 12620 . 12621) (nil fontified nil 12619 . 12620) (nil fontified nil 12618 . 12619) (nil fontified nil 12617 . 12618) (nil fontified nil 12616 . 12617) (nil fontified nil 12615 . 12616) (nil fontified nil 12614 . 12615) (nil fontified nil 12613 . 12614) (nil fontified nil 12612 . 12613) (nil fontified nil 12611 . 12612) (nil fontified nil 12610 . 12611) (nil fontified nil 12609 . 12610) (nil fontified nil 12608 . 12609) (nil fontified nil 12607 . 12608) (nil fontified nil 12606 . 12607) (nil fontified nil 12605 . 12606) (nil fontified nil 12604 . 12605) (nil fontified nil 12603 . 12604) (nil fontified nil 12602 . 12603) (nil fontified nil 12600 . 12602) (nil fontified nil 12599 . 12600) (nil fontified nil 12598 . 12599) (nil fontified nil 12594 . 12598) (nil fontified nil 12593 . 12594) (nil fontified nil 12592 . 12593) (nil fontified nil 12591 . 12592) (nil fontified nil 12590 . 12591) (nil fontified nil 12589 . 12590) (nil fontified nil 12588 . 12589) (nil fontified nil 12587 . 12588) (nil fontified nil 12586 . 12587) (nil fontified nil 12585 . 12586) (nil fontified nil 12584 . 12585) (nil fontified nil 12583 . 12584) (nil fontified nil 12582 . 12583) (nil fontified nil 12581 . 12582) (nil fontified nil 12580 . 12581) (nil fontified nil 12579 . 12580) (nil fontified nil 12578 . 12579) (nil fontified nil 12577 . 12578) (nil fontified nil 12576 . 12577) (nil fontified nil 12575 . 12576) (nil fontified nil 12574 . 12575) (nil fontified nil 12573 . 12574) (nil fontified nil 12572 . 12573) (nil fontified nil 12571 . 12572) (nil fontified nil 12570 . 12571) (nil fontified nil 12569 . 12570) (nil fontified nil 12568 . 12569) (nil fontified nil 12567 . 12568) (nil fontified nil 12566 . 12567) (nil fontified nil 12565 . 12566) (nil fontified nil 12564 . 12565) (nil fontified nil 12563 . 12564) (nil fontified nil 12557 . 12563) (nil fontified nil 12556 . 12557) (nil fontified nil 12555 . 12556) (nil fontified nil 12554 . 12555) (nil fontified nil 12553 . 12554) (nil fontified nil 12552 . 12553) (nil fontified nil 12551 . 12552) (nil fontified nil 12550 . 12551) (nil fontified nil 12549 . 12550) (nil fontified nil 12548 . 12549) (nil fontified nil 12547 . 12548) (nil fontified nil 12546 . 12547) (nil fontified nil 12545 . 12546) (nil fontified nil 12544 . 12545) (nil fontified nil 12543 . 12544) (nil fontified nil 12542 . 12543) (nil fontified nil 12541 . 12542) (nil fontified nil 12540 . 12541) (nil fontified nil 12539 . 12540) (nil fontified nil 12538 . 12539) (nil fontified nil 12537 . 12538) (nil fontified nil 12536 . 12537) (nil fontified nil 12535 . 12536) (nil fontified nil 12534 . 12535) (nil fontified nil 12533 . 12534) (nil fontified nil 12532 . 12533) (nil fontified nil 12531 . 12532) (nil fontified nil 12529 . 12531) (nil fontified nil 12528 . 12529) (nil fontified nil 12527 . 12528) (nil fontified nil 12526 . 12527) (nil fontified nil 12525 . 12526) (nil fontified nil 12524 . 12525) (nil fontified nil 12516 . 12524) (nil fontified nil 12514 . 12516) (nil fontified nil 12512 . 12514) (nil fontified nil 12511 . 12512) (nil fontified nil 12507 . 12511) (nil fontified nil 12501 . 12507) (nil fontified nil 12500 . 12501) (nil fontified nil 12499 . 12500) (nil fontified nil 12498 . 12499) (nil fontified nil 12497 . 12498) (nil fontified nil 12496 . 12497) (nil fontified nil 12495 . 12496) (nil fontified nil 12494 . 12495) (nil fontified nil 12493 . 12494) (nil fontified nil 12492 . 12493) (nil fontified nil 12491 . 12492) (nil fontified nil 12490 . 12491) (nil fontified nil 12489 . 12490) (nil fontified nil 12488 . 12489) (nil fontified nil 12487 . 12488) (nil fontified nil 12486 . 12487) (nil fontified nil 12485 . 12486) (nil fontified nil 12484 . 12485) (nil fontified nil 12483 . 12484) (nil fontified nil 12482 . 12483) (nil fontified nil 12481 . 12482) (nil fontified nil 12480 . 12481) (nil fontified nil 12479 . 12480) (nil fontified nil 12478 . 12479) (nil fontified nil 12477 . 12478) (nil fontified nil 12476 . 12477) (nil fontified nil 12475 . 12476) (nil fontified nil 12473 . 12475) (nil fontified nil 12472 . 12473) (nil fontified nil 12471 . 12472) (nil fontified nil 12470 . 12471) (nil fontified nil 12469 . 12470) (nil fontified nil 12468 . 12469) (nil fontified nil 12460 . 12468) (nil fontified nil 12458 . 12460) (nil fontified nil 12456 . 12458) (nil fontified nil 12450 . 12456) (nil fontified nil 12449 . 12450) (nil fontified nil 12448 . 12449) (nil fontified nil 12444 . 12448) (nil fontified nil 12443 . 12444) (nil fontified nil 12439 . 12443) (nil fontified nil 12437 . 12439) (nil fontified nil 12436 . 12437) (nil fontified nil 12435 . 12436) (nil fontified nil 12431 . 12435) (nil fontified nil 12430 . 12431) (nil fontified nil 12429 . 12430) (nil fontified nil 12428 . 12429) (nil fontified nil 12427 . 12428) (nil fontified nil 12426 . 12427) (nil fontified nil 12425 . 12426) (nil fontified nil 12424 . 12425) (nil fontified nil 12423 . 12424) (nil fontified nil 12422 . 12423) (nil fontified nil 12421 . 12422) (nil fontified nil 12420 . 12421) (nil fontified nil 12419 . 12420) (nil fontified nil 12418 . 12419) (nil fontified nil 12417 . 12418) (nil fontified nil 12416 . 12417) (nil fontified nil 12415 . 12416) (nil fontified nil 12414 . 12415) (nil fontified nil 12413 . 12414) (nil fontified nil 12412 . 12413) (nil fontified nil 12411 . 12412) (nil fontified nil 12410 . 12411) (nil fontified nil 12409 . 12410) (nil fontified nil 12408 . 12409) (nil fontified nil 12407 . 12408) (nil fontified nil 12406 . 12407) (nil fontified nil 12405 . 12406) (nil fontified nil 12404 . 12405) (nil fontified nil 12403 . 12404) (nil fontified nil 12402 . 12403) (nil fontified nil 12401 . 12402) (nil fontified nil 12400 . 12401) (nil fontified nil 12394 . 12400) (nil fontified nil 12393 . 12394) (nil fontified nil 12392 . 12393) (nil fontified nil 12391 . 12392) (nil fontified nil 12390 . 12391) (nil fontified nil 12389 . 12390) (nil fontified nil 12388 . 12389) (nil fontified nil 12387 . 12388) (nil fontified nil 12386 . 12387) (nil fontified nil 12385 . 12386) (nil fontified nil 12384 . 12385) (nil fontified nil 12383 . 12384) (nil fontified nil 12382 . 12383) (nil fontified nil 12381 . 12382) (nil fontified nil 12380 . 12381) (nil fontified nil 12379 . 12380) (nil fontified nil 12378 . 12379) (nil fontified nil 12377 . 12378) (nil fontified nil 12376 . 12377) (nil fontified nil 12375 . 12376) (nil fontified nil 12374 . 12375) (nil fontified nil 12373 . 12374) (nil fontified nil 12372 . 12373) (nil fontified nil 12371 . 12372) (nil fontified nil 12370 . 12371) (nil fontified nil 12369 . 12370) (nil fontified nil 12368 . 12369) (nil fontified nil 12366 . 12368) (nil fontified nil 12365 . 12366) (nil fontified nil 12364 . 12365) (nil fontified nil 12363 . 12364) (nil fontified nil 12362 . 12363) (nil fontified nil 12361 . 12362) (nil fontified nil 12353 . 12361) (nil fontified nil 12351 . 12353) (nil fontified nil 12349 . 12351) (nil fontified nil 12348 . 12349) (nil fontified nil 12344 . 12348) (nil fontified nil 12338 . 12344) (nil fontified nil 12337 . 12338) (nil fontified nil 12336 . 12337) (nil fontified nil 12335 . 12336) (nil fontified nil 12334 . 12335) (nil fontified nil 12333 . 12334) (nil fontified nil 12332 . 12333) (nil fontified nil 12331 . 12332) (nil fontified nil 12330 . 12331) (nil fontified nil 12329 . 12330) (nil fontified nil 12328 . 12329) (nil fontified nil 12327 . 12328) (nil fontified nil 12326 . 12327) (nil fontified nil 12325 . 12326) (nil fontified nil 12324 . 12325) (nil fontified nil 12323 . 12324) (nil fontified nil 12322 . 12323) (nil fontified nil 12321 . 12322) (nil fontified nil 12320 . 12321) (nil fontified nil 12319 . 12320) (nil fontified nil 12318 . 12319) (nil fontified nil 12317 . 12318) (nil fontified nil 12316 . 12317) (nil fontified nil 12315 . 12316) (nil fontified nil 12314 . 12315) (nil fontified nil 12313 . 12314) (nil fontified nil 12312 . 12313) (nil fontified nil 12310 . 12312) (nil fontified nil 12309 . 12310) (nil fontified nil 12308 . 12309) (nil fontified nil 12307 . 12308) (nil fontified nil 12306 . 12307) (nil fontified nil 12305 . 12306) (nil fontified nil 12297 . 12305) (nil fontified nil 12295 . 12297) (nil fontified nil 12293 . 12295) (nil fontified nil 12287 . 12293) (nil fontified nil 12286 . 12287) (nil fontified nil 12285 . 12286) (nil fontified nil 12281 . 12285) (nil fontified nil 12280 . 12281) (nil fontified nil 12279 . 12280) (nil fontified nil 12278 . 12279) (nil fontified nil 12277 . 12278) (nil fontified nil 12276 . 12277) (nil fontified nil 12275 . 12276) (nil fontified nil 12274 . 12275) (nil fontified nil 12273 . 12274) (nil fontified nil 12272 . 12273) (nil fontified nil 12271 . 12272) (nil fontified nil 12270 . 12271) (nil fontified nil 12269 . 12270) (nil fontified nil 12267 . 12269) (nil fontified nil 12265 . 12267) (nil fontified nil 12264 . 12265) (nil fontified nil 12260 . 12264) (nil fontified nil 12258 . 12260) (nil fontified nil 12257 . 12258) (nil fontified nil 12256 . 12257) (nil fontified nil 12252 . 12256) (nil fontified nil 12251 . 12252) (nil fontified nil 12250 . 12251) (nil fontified nil 12249 . 12250) (nil fontified nil 12248 . 12249) (nil fontified nil 12247 . 12248) (nil fontified nil 12246 . 12247) (nil fontified nil 12245 . 12246) (nil fontified nil 12244 . 12245) (nil fontified nil 12243 . 12244) (nil fontified nil 12242 . 12243) (nil fontified nil 12241 . 12242) (nil fontified nil 12240 . 12241) (nil fontified nil 12239 . 12240) (nil fontified nil 12238 . 12239) (nil fontified nil 12237 . 12238) (nil fontified nil 12236 . 12237) (nil fontified nil 12235 . 12236) (nil fontified nil 12234 . 12235) (nil fontified nil 12233 . 12234) (nil fontified nil 12232 . 12233) (nil fontified nil 12231 . 12232) (nil fontified nil 12230 . 12231) (nil fontified nil 12229 . 12230) (nil fontified nil 12228 . 12229) (nil fontified nil 12227 . 12228) (nil fontified nil 12226 . 12227) (nil fontified nil 12225 . 12226) (nil fontified nil 12224 . 12225) (nil fontified nil 12223 . 12224) (nil fontified nil 12222 . 12223) (nil fontified nil 12221 . 12222) (nil fontified nil 12215 . 12221) (nil fontified nil 12214 . 12215) (nil fontified nil 12213 . 12214) (nil fontified nil 12212 . 12213) (nil fontified nil 12211 . 12212) (nil fontified nil 12210 . 12211) (nil fontified nil 12209 . 12210) (nil fontified nil 12208 . 12209) (nil fontified nil 12207 . 12208) (nil fontified nil 12206 . 12207) (nil fontified nil 12205 . 12206) (nil fontified nil 12204 . 12205) (nil fontified nil 12203 . 12204) (nil fontified nil 12202 . 12203) (nil fontified nil 12201 . 12202) (nil fontified nil 12200 . 12201) (nil fontified nil 12199 . 12200) (nil fontified nil 12198 . 12199) (nil fontified nil 12197 . 12198) (nil fontified nil 12196 . 12197) (nil fontified nil 12195 . 12196) (nil fontified nil 12194 . 12195) (nil fontified nil 12193 . 12194) (nil fontified nil 12192 . 12193) (nil fontified nil 12191 . 12192) (nil fontified nil 12190 . 12191) (nil fontified nil 12189 . 12190) (nil fontified nil 12187 . 12189) (nil fontified nil 12186 . 12187) (nil fontified nil 12185 . 12186) (nil fontified nil 12184 . 12185) (nil fontified nil 12183 . 12184) (nil fontified nil 12182 . 12183) (nil fontified nil 12174 . 12182) (nil fontified nil 12172 . 12174) (nil fontified nil 12170 . 12172) (nil fontified nil 12169 . 12170) (nil fontified nil 12165 . 12169) (nil fontified nil 12159 . 12165) (nil fontified nil 12158 . 12159) (nil fontified nil 12157 . 12158) (nil fontified nil 12156 . 12157) (nil fontified nil 12155 . 12156) (nil fontified nil 12154 . 12155) (nil fontified nil 12153 . 12154) (nil fontified nil 12152 . 12153) (nil fontified nil 12151 . 12152) (nil fontified nil 12150 . 12151) (nil fontified nil 12149 . 12150) (nil fontified nil 12148 . 12149) (nil fontified nil 12147 . 12148) (nil fontified nil 12146 . 12147) (nil fontified nil 12145 . 12146) (nil fontified nil 12144 . 12145) (nil fontified nil 12143 . 12144) (nil fontified nil 12142 . 12143) (nil fontified nil 12141 . 12142) (nil fontified nil 12140 . 12141) (nil fontified nil 12139 . 12140) (nil fontified nil 12138 . 12139) (nil fontified nil 12137 . 12138) (nil fontified nil 12136 . 12137) (nil fontified nil 12135 . 12136) (nil fontified nil 12134 . 12135) (nil fontified nil 12133 . 12134) (nil fontified nil 12131 . 12133) (nil fontified nil 12130 . 12131) (nil fontified nil 12129 . 12130) (nil fontified nil 12128 . 12129) (nil fontified nil 12127 . 12128) (nil fontified nil 12126 . 12127) (nil fontified nil 12118 . 12126) (nil fontified nil 12116 . 12118) (nil fontified nil 12114 . 12116) (nil fontified nil 12108 . 12114) (nil fontified nil 12107 . 12108) (nil fontified nil 12106 . 12107) (nil fontified nil 12102 . 12106) (nil fontified nil 12101 . 12102) (nil fontified nil 12100 . 12101) (nil fontified nil 12099 . 12100) (nil fontified nil 12098 . 12099) (nil fontified nil 12097 . 12098) (nil fontified nil 12096 . 12097) (nil fontified nil 12095 . 12096) (nil fontified nil 12094 . 12095) (nil fontified nil 12093 . 12094) (nil fontified nil 12092 . 12093) (nil fontified nil 12091 . 12092) (nil fontified nil 12090 . 12091) (nil fontified nil 12088 . 12090) (nil fontified nil 12086 . 12088) (nil fontified nil 12084 . 12086) (nil fontified nil 12083 . 12084) (nil fontified nil 12082 . 12083) (nil fontified nil 12081 . 12082) (nil fontified nil 12080 . 12081) (nil fontified nil 12079 . 12080) (nil fontified nil 12078 . 12079) (nil fontified nil 12077 . 12078) (nil fontified nil 12076 . 12077) (nil fontified nil 12075 . 12076) (nil fontified nil 12074 . 12075) (nil fontified nil 12073 . 12074) (nil fontified nil 12072 . 12073) (nil fontified nil 12071 . 12072) (nil fontified nil 12070 . 12071) (nil fontified nil 12069 . 12070) (nil fontified nil 12068 . 12069) (nil fontified nil 12067 . 12068) (nil fontified nil 12061 . 12067) (nil fontified nil 12059 . 12061) (nil fontified nil 12058 . 12059) (nil fontified nil 12057 . 12058) (nil fontified nil 12056 . 12057) (nil fontified nil 12055 . 12056) (nil fontified nil 12054 . 12055) (nil fontified nil 12053 . 12054) (nil fontified nil 12052 . 12053) (nil fontified nil 12051 . 12052) (nil fontified nil 12050 . 12051) (nil fontified nil 12049 . 12050) (nil fontified nil 12048 . 12049) (nil fontified nil 12047 . 12048) (nil fontified nil 12046 . 12047) (nil fontified nil 12045 . 12046) (nil fontified nil 12044 . 12045) (nil fontified nil 12043 . 12044) (nil fontified nil 12042 . 12043) (nil fontified nil 12041 . 12042) (nil fontified nil 12040 . 12041) (nil fontified nil 12039 . 12040) (nil fontified nil 12038 . 12039) (nil fontified nil 12037 . 12038) (nil fontified nil 12036 . 12037) (nil fontified nil 12035 . 12036) (nil fontified nil 12034 . 12035) (nil fontified nil 12033 . 12034) (nil fontified nil 12032 . 12033) (nil fontified nil 12031 . 12032) (nil fontified nil 12030 . 12031) (nil fontified nil 12029 . 12030) (nil fontified nil 12028 . 12029) (nil fontified nil 12027 . 12028) (nil fontified nil 12026 . 12027) (nil fontified nil 12025 . 12026) (nil fontified nil 12024 . 12025) (nil fontified nil 12023 . 12024) (nil fontified nil 12022 . 12023) (nil fontified nil 12021 . 12022) (nil fontified nil 12020 . 12021) (nil fontified nil 12019 . 12020) (nil fontified nil 12018 . 12019) (nil fontified nil 12017 . 12018) (nil fontified nil 12016 . 12017) (nil fontified nil 12015 . 12016) (nil fontified nil 12014 . 12015) (nil fontified nil 12008 . 12014) (12008 . 14006)) nil (25192 10585 618479 320000) 0 nil])
([nil nil ((14006 . 14007)) nil (25192 10585 618363 695000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 537) (#("
" 0 1 (fontified t)) . 537) (t 25192 10585 631486 800000)) nil (25192 10596 89273 565000) 0 nil])
([nil nil ((#("int GET_STATE(double gradx , double trSS);" 0 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t) 3 4 (fontified t) 4 13 (face font-lock-function-name-face fontified t) 13 14 (c-type c-decl-arg-start fontified t) 14 20 (face font-lock-type-face fontified t) 20 21 (fontified t) 21 26 (face font-lock-variable-name-face fontified t) 26 27 (fontified t) 27 28 (c-type c-decl-arg-start fontified t) 28 29 (fontified t) 29 35 (face font-lock-type-face fontified t) 35 36 (fontified t) 36 40 (face font-lock-variable-name-face fontified t) 40 42 (fontified t)) . 720) (t 25192 10596 104589 400000)) nil (25192 10622 712148 382000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712147 737000) 0 nil])
([nil nil ((#("int GET_ACTION(oneDvec &q , double epsilon);" 0 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t) 3 4 (fontified t) 4 14 (face font-lock-function-name-face fontified t) 14 15 (c-type c-decl-arg-start fontified t) 15 22 (face font-lock-type-face fontified t) 22 24 (fontified t) 24 25 (face font-lock-variable-name-face fontified t) 25 26 (fontified t) 26 27 (c-type c-decl-arg-start fontified t) 27 28 (fontified t) 28 34 (face font-lock-type-face fontified t) 34 35 (fontified t) 35 42 (face font-lock-variable-name-face fontified t) 42 44 (fontified t)) . 720)) nil (25192 10622 712147 192000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712146 508000) 0 nil])
([nil nil ((#("oneDvec PREF_DIR(int action);" 0 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face c-type c-decl-id-start fontified t) 7 8 (fontified t) 8 16 (face font-lock-function-name-face fontified t) 16 17 (c-type c-decl-arg-start fontified t) 17 20 (face font-lock-type-face fontified t) 20 21 (fontified t) 21 27 (face font-lock-variable-name-face fontified t) 27 29 (fontified t)) . 720)) nil (25192 10622 712146 113000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712145 609000) 0 nil])
([nil nil ((#("double PREF_VS(int action);" 0 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 14 (face font-lock-function-name-face fontified t) 14 15 (c-type c-decl-arg-start fontified t) 15 18 (face font-lock-type-face fontified t) 18 19 (fontified t) 19 25 (face font-lock-variable-name-face fontified t) 25 27 (fontified t)) . 720)) nil (25192 10622 712144 935000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712144 455000) 0 nil])
([nil nil ((#("double interpolate(double x, double y, twoDvec &f );" 0 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 18 (face font-lock-function-name-face fontified t) 18 19 (c-type c-decl-arg-start fontified t) 19 25 (face font-lock-type-face fontified t) 25 26 (fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 28 (c-type c-decl-arg-start fontified t) 28 29 (fontified t) 29 35 (face font-lock-type-face fontified t) 35 36 (fontified t) 36 37 (face font-lock-variable-name-face fontified t) 37 38 (c-type c-decl-arg-start fontified t) 38 39 (fontified t) 39 46 (face font-lock-type-face fontified t) 46 48 (fontified t) 48 49 (face font-lock-variable-name-face fontified t) 49 52 (fontified t)) . 720)) nil (25192 10622 712143 733000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712143 344000) 0 nil])
([nil nil ((#("double get_sn(oneDvec &n, double a11 , double a12 , double a21 , double a22);" 0 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 13 (face font-lock-function-name-face fontified t) 13 14 (c-type c-decl-arg-start fontified t) 14 21 (face font-lock-type-face fontified t) 21 23 (fontified t) 23 24 (face font-lock-variable-name-face fontified t) 24 25 (c-type c-decl-arg-start fontified t) 25 26 (fontified t) 26 32 (face font-lock-type-face fontified t) 32 33 (fontified t) 33 36 (face font-lock-variable-name-face fontified t) 36 37 (fontified t) 37 38 (c-type c-decl-arg-start fontified t) 38 39 (fontified t) 39 45 (face font-lock-type-face fontified t) 45 46 (fontified t) 46 49 (face font-lock-variable-name-face fontified t) 49 50 (fontified t) 50 51 (c-type c-decl-arg-start fontified t) 51 52 (fontified t) 52 58 (face font-lock-type-face fontified t) 58 59 (fontified t) 59 62 (face font-lock-variable-name-face fontified t) 62 63 (fontified t) 63 64 (c-type c-decl-arg-start fontified t) 64 65 (fontified t) 65 71 (face font-lock-type-face fontified t) 71 72 (fontified t) 72 75 (face font-lock-variable-name-face fontified t) 75 77 (fontified t)) . 720)) nil (25192 10622 712142 652000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712142 5000) 0 nil])
([nil nil ((#("double get_sp(oneDvec &n , oneDvec &p, double a11 , double a12 , double a21 , double a22);" 0 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 13 (face font-lock-function-name-face fontified t) 13 14 (c-type c-decl-arg-start fontified t) 14 21 (face font-lock-type-face fontified t) 21 23 (fontified t) 23 24 (face font-lock-variable-name-face fontified t) 24 25 (fontified t) 25 26 (c-type c-decl-arg-start fontified t) 26 27 (fontified t) 27 34 (face font-lock-type-face fontified t) 34 36 (fontified t) 36 37 (face font-lock-variable-name-face fontified t) 37 38 (c-type c-decl-arg-start fontified t) 38 39 (fontified t) 39 45 (face font-lock-type-face fontified t) 45 46 (fontified t) 46 49 (face font-lock-variable-name-face fontified t) 49 50 (fontified t) 50 51 (c-type c-decl-arg-start fontified t) 51 52 (fontified t) 52 58 (face font-lock-type-face fontified t) 58 59 (fontified t) 59 62 (face font-lock-variable-name-face fontified t) 62 63 (fontified t) 63 64 (c-type c-decl-arg-start fontified t) 64 65 (fontified t) 65 71 (face font-lock-type-face fontified t) 71 72 (fontified t) 72 75 (face font-lock-variable-name-face fontified t) 75 76 (fontified t) 76 77 (c-type c-decl-arg-start fontified t) 77 78 (fontified t) 78 84 (face font-lock-type-face fontified t) 84 85 (fontified t) 85 88 (face font-lock-variable-name-face fontified t) 88 90 (fontified t)) . 720)) nil (25192 10622 712141 421000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712140 881000) 0 nil])
([nil nil ((#("double AB(double X1, double F1X, double F0X);" 0 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 9 (face font-lock-function-name-face fontified t) 9 10 (c-type c-decl-arg-start fontified t) 10 16 (face font-lock-type-face fontified t) 16 17 (fontified t) 17 19 (face font-lock-variable-name-face fontified t) 19 20 (c-type c-decl-arg-start fontified t) 20 21 (fontified t) 21 27 (face font-lock-type-face fontified t) 27 28 (fontified t) 28 31 (face font-lock-variable-name-face fontified t) 31 32 (c-type c-decl-arg-start fontified t) 32 33 (fontified t) 33 39 (face font-lock-type-face fontified t) 39 40 (fontified t) 40 43 (face font-lock-variable-name-face fontified t) 43 45 (fontified t)) . 720)) nil (25192 10622 712140 264000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712139 621000) 0 nil])
([nil nil ((#("string make_path(string field_name , string component);" 0 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 16 (face font-lock-function-name-face fontified t) 16 17 (c-type c-decl-arg-start fontified t) 17 23 (face font-lock-type-face fontified t) 23 24 (fontified t) 24 34 (face font-lock-variable-name-face fontified t) 34 35 (fontified t) 35 36 (c-type c-decl-arg-start fontified t) 36 37 (fontified t) 37 43 (face font-lock-type-face fontified t) 43 44 (fontified t) 44 53 (face font-lock-variable-name-face fontified t) 53 55 (fontified t)) . 720)) nil (25192 10622 712138 939000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712138 263000) 0 nil])
([nil nil ((#("string make_dataset_name(string constant_part , int variable_part);" 0 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 24 (face font-lock-function-name-face fontified t) 24 25 (c-type c-decl-arg-start fontified t) 25 31 (face font-lock-type-face fontified t) 31 32 (fontified t) 32 45 (face font-lock-variable-name-face fontified t) 45 46 (fontified t) 46 47 (c-type c-decl-arg-start fontified t) 47 48 (fontified t) 48 51 (face font-lock-type-face fontified t) 51 52 (fontified t) 52 65 (face font-lock-variable-name-face fontified t) 65 67 (fontified t)) . 720)) nil (25192 10622 712137 614000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712137 278000) 0 nil])
([nil nil ((#("void printQ(twoDvec &v);" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 11 (face font-lock-function-name-face fontified t) 11 12 (c-type c-decl-arg-start fontified t) 12 19 (face font-lock-type-face fontified t) 19 21 (fontified t) 21 22 (face font-lock-variable-name-face fontified t) 22 24 (fontified t)) . 720)) nil (25192 10622 712136 683000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712135 767000) 0 nil])
([nil nil ((#("void write_data_twoD(twoDvec &data , string dataset_name);" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 20 (face font-lock-function-name-face fontified t) 20 21 (c-type c-decl-arg-start fontified t) 21 28 (face font-lock-type-face fontified t) 28 30 (fontified t) 30 34 (face font-lock-variable-name-face fontified t) 34 35 (fontified t) 35 36 (c-type c-decl-arg-start fontified t) 36 37 (fontified t) 37 43 (face font-lock-type-face fontified t) 43 44 (fontified t) 44 56 (face font-lock-variable-name-face fontified t) 56 58 (fontified t)) . 720)) nil (25192 10622 712135 424000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712134 892000) 0 nil])
([nil nil ((#("void write_data_oneD(oneDvec &data , string dataset_name);" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 20 (face font-lock-function-name-face fontified t) 20 21 (c-type c-decl-arg-start fontified t) 21 28 (face font-lock-type-face fontified t) 28 30 (fontified t) 30 34 (face font-lock-variable-name-face fontified t) 34 35 (fontified t) 35 36 (c-type c-decl-arg-start fontified t) 36 37 (fontified t) 37 43 (face font-lock-type-face fontified t) 43 44 (fontified t) 44 56 (face font-lock-variable-name-face fontified t) 56 58 (fontified t)) . 720)) nil (25192 10622 712134 219000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712133 679000) 0 nil])
([nil nil ((#("void write_data_oneD_int(vector<int> &data , string dataset_name);" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 24 (face font-lock-function-name-face fontified t) 24 25 (c-type c-decl-arg-start fontified t) 25 31 (face font-lock-type-face fontified t) 31 32 (fontified t syntax-table (4 . 62)) 32 35 (face font-lock-type-face fontified t) 35 36 (fontified t syntax-table (5 . 60)) 36 38 (fontified t) 38 42 (face font-lock-variable-name-face fontified t) 42 43 (fontified t) 43 44 (c-type c-decl-arg-start fontified t) 44 45 (fontified t) 45 51 (face font-lock-type-face fontified t) 51 52 (fontified t) 52 64 (face font-lock-variable-name-face fontified t) 64 66 (fontified t)) . 720)) nil (25192 10622 712133 141000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712132 624000) 0 nil])
([nil nil ((#("void printing(oneDvec &vec);" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 7 (face font-lock-function-name-face fontified t) 7 13 (face font-lock-function-name-face fontified t) 13 14 (c-type c-decl-arg-start fontified t) 14 21 (face font-lock-type-face fontified t) 21 23 (fontified t) 23 26 (face font-lock-variable-name-face fontified t) 26 27 (fontified t) 27 28 (fontified t)) . 720)) nil (25192 10622 712132 63000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712131 304000) 0 nil])
([nil nil ((#("double get_mod(double x , double L);" 0 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 14 (face font-lock-function-name-face fontified t) 14 15 (c-type c-decl-arg-start fontified t) 15 21 (face font-lock-type-face fontified t) 21 22 (fontified t) 22 23 (face font-lock-variable-name-face fontified t) 23 24 (fontified t) 24 25 (c-type c-decl-arg-start fontified t) 25 26 (fontified t) 26 32 (face font-lock-type-face fontified t) 32 33 (fontified t) 33 34 (face font-lock-variable-name-face fontified t) 34 36 (fontified t)) . 720)) nil (25192 10622 712130 671000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720)) nil (25192 10622 712130 28000) 0 nil])
([nil nil ((#("/****************** Global values definition ******************/" 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 20 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 20 62 (face font-lock-comment-face fontified t c-in-sws t) 62 63 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 63 64 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 720)) nil (25192 10622 712129 202000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720) (undo-tree-id701 . -1)) nil (25192 10622 712126 449000) 0 nil])
([nil nil ((#("oneDvec_int eval_state(int agent , int opponent)" 0 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face fontified t) 8 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face c-type c-decl-id-start fontified t) 11 12 (fontified t) 12 13 (face font-lock-function-name-face fontified t) 13 14 (face font-lock-function-name-face fontified t) 14 15 (face font-lock-function-name-face fontified t) 15 16 (face font-lock-function-name-face fontified t) 16 17 (face font-lock-function-name-face fontified t) 17 18 (face font-lock-function-name-face fontified t) 18 19 (face font-lock-function-name-face fontified t) 19 20 (face font-lock-function-name-face fontified t) 20 21 (face font-lock-function-name-face fontified t) 21 22 (face font-lock-function-name-face fontified t) 22 23 (c-type c-decl-arg-start fontified t) 23 24 (face font-lock-type-face fontified t) 24 25 (face font-lock-type-face fontified t) 25 26 (face font-lock-type-face fontified t) 26 27 (fontified t) 27 28 (face font-lock-variable-name-face fontified t) 28 29 (face font-lock-variable-name-face fontified t) 29 30 (face font-lock-variable-name-face fontified t) 30 31 (face font-lock-variable-name-face fontified t) 31 32 (face font-lock-variable-name-face fontified t) 32 33 (fontified t) 33 34 (c-type c-decl-arg-start fontified t) 34 35 (fontified t) 35 36 (face font-lock-type-face fontified t) 36 37 (face font-lock-type-face fontified t) 37 38 (face font-lock-type-face fontified t) 38 39 (fontified t) 39 40 (face font-lock-variable-name-face fontified t) 40 41 (face font-lock-variable-name-face fontified t) 41 42 (face font-lock-variable-name-face fontified t) 42 43 (face font-lock-variable-name-face fontified t) 43 44 (face font-lock-variable-name-face fontified t) 44 45 (face font-lock-variable-name-face fontified t) 45 46 (face font-lock-variable-name-face fontified t) 46 47 (face font-lock-variable-name-face fontified t) 47 48 (fontified t)) . 11127) (t 25192 10622 728134 600000)) nil (25192 10672 725020 177000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11174 . 11175) (nil fontified nil 11174 . 11175) (nil fontified nil 11173 . 11174) (nil fontified nil 11172 . 11173) (nil fontified nil 11171 . 11172) (nil fontified nil 11170 . 11171) (nil fontified nil 11169 . 11170) (nil fontified nil 11168 . 11169) (nil fontified nil 11167 . 11168) (nil fontified nil 11166 . 11167) (nil fontified nil 11165 . 11166) (nil fontified nil 11164 . 11165) (nil fontified nil 11163 . 11164) (nil fontified nil 11162 . 11163) (nil fontified nil 11161 . 11162) (nil fontified nil 11160 . 11161) (nil fontified nil 11159 . 11160) (nil fontified nil 11158 . 11159) (nil fontified nil 11157 . 11158) (nil fontified nil 11156 . 11157) (nil fontified nil 11155 . 11156) (nil fontified nil 11154 . 11155) (nil fontified nil 11153 . 11154) (nil fontified nil 11152 . 11153) (nil fontified nil 11151 . 11152) (nil fontified nil 11150 . 11151) (nil fontified nil 11149 . 11150) (nil fontified nil 11148 . 11149) (nil fontified nil 11147 . 11148) (nil fontified nil 11146 . 11147) (nil fontified nil 11145 . 11146) (nil fontified nil 11144 . 11145) (nil fontified nil 11143 . 11144) (nil fontified nil 11142 . 11143) (nil fontified nil 11141 . 11142) (nil fontified nil 11140 . 11141) (nil fontified nil 11139 . 11140) (nil fontified nil 11138 . 11139) (nil fontified nil 11137 . 11138) (nil fontified nil 11136 . 11137) (nil fontified nil 11135 . 11136) (nil fontified nil 11134 . 11135) (nil fontified nil 11133 . 11134) (nil fontified nil 11127 . 11133) (11127 . 11175)) nil (25192 10672 725019 159000) 0 nil])
([nil nil ((nil rear-nonsticky nil 767 . 768) (nil fontified nil 767 . 768) (nil fontified nil 766 . 767) (nil fontified nil 765 . 766) (nil fontified nil 764 . 765) (nil fontified nil 763 . 764) (nil fontified nil 762 . 763) (nil fontified nil 761 . 762) (nil fontified nil 760 . 761) (nil fontified nil 759 . 760) (nil fontified nil 758 . 759) (nil fontified nil 757 . 758) (nil fontified nil 756 . 757) (nil fontified nil 755 . 756) (nil fontified nil 754 . 755) (nil fontified nil 753 . 754) (nil fontified nil 752 . 753) (nil fontified nil 751 . 752) (nil fontified nil 750 . 751) (nil fontified nil 749 . 750) (nil fontified nil 748 . 749) (nil fontified nil 747 . 748) (nil fontified nil 746 . 747) (nil fontified nil 745 . 746) (nil fontified nil 744 . 745) (nil fontified nil 743 . 744) (nil fontified nil 742 . 743) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 736 . 737) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 733 . 734) (nil fontified nil 732 . 733) (nil fontified nil 731 . 732) (nil fontified nil 730 . 731) (nil fontified nil 729 . 730) (nil fontified nil 728 . 729) (nil fontified nil 727 . 728) (nil fontified nil 726 . 727) (nil fontified nil 720 . 726) (720 . 768)) nil (25192 10672 725016 224000) 0 nil])
([nil nil ((768 . 769)) nil (25192 10672 725012 951000) 0 nil])
([nil nil ((769 . 770)) nil (25192 10672 725012 649000) 0 nil])
([nil nil ((#("double get_R(oneDvec_int &state)" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 8 (face font-lock-function-name-face fontified t) 8 9 (face font-lock-function-name-face fontified t) 9 10 (face font-lock-function-name-face fontified t) 10 11 (face font-lock-function-name-face fontified t) 11 12 (face font-lock-function-name-face fontified t) 12 13 (c-type c-decl-arg-start fontified t) 13 24 (face font-lock-type-face fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 28 (face font-lock-variable-name-face fontified t) 28 29 (face font-lock-variable-name-face fontified t) 29 30 (face font-lock-variable-name-face fontified t) 30 31 (face font-lock-variable-name-face fontified t) 31 32 (fontified t)) . 11788)) nil (25192 10672 725012 209000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11819 . 11820) (nil fontified nil 11819 . 11820) (nil fontified nil 11818 . 11819) (nil fontified nil 11817 . 11818) (nil fontified nil 11816 . 11817) (nil fontified nil 11815 . 11816) (nil fontified nil 11814 . 11815) (nil fontified nil 11813 . 11814) (nil fontified nil 11812 . 11813) (nil fontified nil 11801 . 11812) (nil fontified nil 11800 . 11801) (nil fontified nil 11799 . 11800) (nil fontified nil 11798 . 11799) (nil fontified nil 11797 . 11798) (nil fontified nil 11796 . 11797) (nil fontified nil 11795 . 11796) (nil fontified nil 11794 . 11795) (nil fontified nil 11793 . 11794) (nil fontified nil 11792 . 11793) (nil fontified nil 11791 . 11792) (nil fontified nil 11790 . 11791) (nil fontified nil 11789 . 11790) (nil fontified nil 11788 . 11789) (11788 . 11820)) nil (25192 10672 725011 534000) 0 nil])
([nil nil ((nil rear-nonsticky nil 801 . 802) (nil fontified nil 801 . 802) (nil fontified nil 800 . 801) (nil fontified nil 799 . 800) (nil fontified nil 798 . 799) (nil fontified nil 797 . 798) (nil fontified nil 796 . 797) (nil fontified nil 795 . 796) (nil fontified nil 794 . 795) (nil fontified nil 783 . 794) (nil fontified nil 782 . 783) (nil fontified nil 781 . 782) (nil fontified nil 780 . 781) (nil fontified nil 779 . 780) (nil fontified nil 778 . 779) (nil fontified nil 777 . 778) (nil fontified nil 776 . 777) (nil fontified nil 775 . 776) (nil fontified nil 774 . 775) (nil fontified nil 773 . 774) (nil fontified nil 772 . 773) (nil fontified nil 771 . 772) (nil fontified nil 770 . 771) (770 . 802)) nil (25192 10672 725009 513000) 0 nil])
([nil nil ((802 . 803)) nil (25192 10672 725006 948000) 0 nil])
([nil nil ((#("int opponent_move(oneDvec_int &state , double p , double q)" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t) 3 4 (fontified t) 4 12 (face font-lock-function-name-face fontified t) 12 13 (face font-lock-function-name-face fontified t) 13 14 (face font-lock-function-name-face fontified t) 14 15 (face font-lock-function-name-face fontified t) 15 16 (face font-lock-function-name-face fontified t) 16 17 (face font-lock-function-name-face fontified t) 17 18 (c-type c-decl-arg-start fontified t) 18 29 (face font-lock-type-face fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (face font-lock-variable-name-face fontified t) 32 33 (face font-lock-variable-name-face fontified t) 33 34 (face font-lock-variable-name-face fontified t) 34 35 (face font-lock-variable-name-face fontified t) 35 36 (face font-lock-variable-name-face fontified t) 36 37 (fontified t) 37 38 (c-type c-decl-arg-start fontified t) 38 39 (fontified t) 39 40 (face font-lock-type-face fontified t) 40 41 (face font-lock-type-face fontified t) 41 42 (face font-lock-type-face fontified t) 42 43 (face font-lock-type-face fontified t) 43 44 (face font-lock-type-face fontified t) 44 45 (face font-lock-type-face fontified t) 45 46 (fontified t) 46 47 (face font-lock-variable-name-face fontified t) 47 48 (fontified t) 48 49 (c-type c-decl-arg-start fontified t) 49 50 (fontified t) 50 51 (face font-lock-type-face fontified t) 51 52 (face font-lock-type-face fontified t) 52 53 (face font-lock-type-face fontified t) 53 54 (face font-lock-type-face fontified t) 54 55 (face font-lock-type-face fontified t) 55 56 (face font-lock-type-face fontified t) 56 57 (fontified t) 57 58 (face font-lock-variable-name-face fontified t) 58 59 (fontified t)) . 11962)) nil (25192 10672 725006 217000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12020 . 12021) (nil fontified nil 12020 . 12021) (nil fontified nil 12019 . 12020) (nil fontified nil 12018 . 12019) (nil fontified nil 12017 . 12018) (nil fontified nil 12016 . 12017) (nil fontified nil 12015 . 12016) (nil fontified nil 12014 . 12015) (nil fontified nil 12013 . 12014) (nil fontified nil 12012 . 12013) (nil fontified nil 12011 . 12012) (nil fontified nil 12010 . 12011) (nil fontified nil 12009 . 12010) (nil fontified nil 12008 . 12009) (nil fontified nil 12007 . 12008) (nil fontified nil 12006 . 12007) (nil fontified nil 12005 . 12006) (nil fontified nil 12004 . 12005) (nil fontified nil 12003 . 12004) (nil fontified nil 12002 . 12003) (nil fontified nil 12001 . 12002) (nil fontified nil 12000 . 12001) (nil fontified nil 11999 . 12000) (nil fontified nil 11998 . 11999) (nil fontified nil 11997 . 11998) (nil fontified nil 11996 . 11997) (nil fontified nil 11995 . 11996) (nil fontified nil 11994 . 11995) (nil fontified nil 11993 . 11994) (nil fontified nil 11992 . 11993) (nil fontified nil 11991 . 11992) (nil fontified nil 11980 . 11991) (nil fontified nil 11979 . 11980) (nil fontified nil 11978 . 11979) (nil fontified nil 11977 . 11978) (nil fontified nil 11976 . 11977) (nil fontified nil 11975 . 11976) (nil fontified nil 11974 . 11975) (nil fontified nil 11966 . 11974) (nil fontified nil 11965 . 11966) (nil fontified nil 11964 . 11965) (nil fontified nil 11963 . 11964) (nil fontified nil 11962 . 11963) (11962 . 12021)) nil (25192 10672 725005 120000) 0 nil])
([nil nil ((804 . 805)) nil (25192 10672 725002 60000) 0 nil])
([nil nil ((nil rear-nonsticky nil 862 . 863) (nil fontified nil 862 . 863) (nil fontified nil 861 . 862) (nil fontified nil 860 . 861) (nil fontified nil 859 . 860) (nil fontified nil 858 . 859) (nil fontified nil 857 . 858) (nil fontified nil 856 . 857) (nil fontified nil 855 . 856) (nil fontified nil 854 . 855) (nil fontified nil 853 . 854) (nil fontified nil 852 . 853) (nil fontified nil 851 . 852) (nil fontified nil 850 . 851) (nil fontified nil 849 . 850) (nil fontified nil 848 . 849) (nil fontified nil 847 . 848) (nil fontified nil 846 . 847) (nil fontified nil 845 . 846) (nil fontified nil 844 . 845) (nil fontified nil 843 . 844) (nil fontified nil 842 . 843) (nil fontified nil 841 . 842) (nil fontified nil 840 . 841) (nil fontified nil 839 . 840) (nil fontified nil 838 . 839) (nil fontified nil 837 . 838) (nil fontified nil 836 . 837) (nil fontified nil 835 . 836) (nil fontified nil 834 . 835) (nil fontified nil 833 . 834) (nil fontified nil 822 . 833) (nil fontified nil 821 . 822) (nil fontified nil 820 . 821) (nil fontified nil 819 . 820) (nil fontified nil 818 . 819) (nil fontified nil 817 . 818) (nil fontified nil 816 . 817) (nil fontified nil 808 . 816) (nil fontified nil 807 . 808) (nil fontified nil 806 . 807) (nil fontified nil 805 . 806) (nil fontified nil 804 . 805) (804 . 863)) nil (25192 10672 725000 852000) 0 nil])
([nil nil ((863 . 864)) nil (25192 10672 724995 25000) 0 nil])
([nil nil ((1787 . 1795) (t 25192 10672 739662 200000)) nil (25192 10861 371893 863000) 0 nil])
([nil nil ((1795 . 1797)) nil (25192 10861 371893 5000) 0 nil])
([nil nil ((1797 . 1799)) nil (25192 10861 371892 260000) 0 nil])
([nil nil ((1798 . 1802)) nil (25192 10861 371891 671000) 0 nil])
([nil nil ((1802 . 1804)) nil (25192 10861 371890 924000) 0 nil])
([nil nil ((1804 . 1805)) nil (25192 10861 371890 193000) 0 nil])
([nil nil ((1805 . 1810)) nil (25192 10861 371889 351000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1809) (undo-tree-id6 . -1) 1810) nil (25192 10861 371888 314000) 0 nil])
([nil nil ((1805 . 1811) (#("doub" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1805) (undo-tree-id5 . -4) 1809) nil (25192 10861 371886 291000) 0 nil])
([nil nil ((1811 . 1813)) nil (25192 10861 371885 20000) 0 nil])
([nil nil ((1812 . 1816)) nil (25192 10861 371884 590000) 0 nil])
([nil nil ((1812 . 1820) (#("RAND" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1812) (undo-tree-id4 . -4) 1816) nil (25192 10861 371883 974000) 0 nil])
([nil nil ((1821 . 1822)) nil (25192 10861 371882 571000) 0 nil])
([nil nil ((1822 . 1823)) nil (25192 10861 371882 35000) 0 nil])
([nil nil ((1823 . 1824)) nil (25192 10861 371881 482000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -1822) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t)) . -1823) (undo-tree-id3 . -1) 1824) nil (25192 10861 371880 579000) 0 nil])
([nil nil ((1822 . 1823)) nil (25192 10861 371878 313000) 0 nil])
([nil nil ((1823 . 1827)) nil (25192 10861 371877 647000) 0 nil])
([nil nil ((1824 . 1831) (#("eps" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1824) (undo-tree-id1 . -3) 1827) nil (25192 10861 371876 753000) 0 nil])
([nil nil ((1832 . 1834)) nil (25192 10861 371874 755000) 0 nil])
([nil nil ((1833 . 1842)) nil (25192 10861 371874 161000) 0 nil])
([nil nil ((#("int GET_ACTION(oneDvec &q , double epsilon){" 0 1 (fontified t c-is-sws t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face) 3 4 (fontified t) 4 14 (fontified t face font-lock-function-name-face) 14 15 (fontified t c-type c-decl-arg-start) 15 22 (fontified t face font-lock-type-face) 22 24 (fontified t) 24 25 (fontified t face font-lock-variable-name-face) 25 26 (fontified t) 26 27 (fontified t c-type c-decl-arg-start) 27 28 (fontified t) 28 34 (fontified t face font-lock-type-face) 34 35 (fontified t) 35 42 (fontified t face font-lock-variable-name-face) 42 44 (fontified t)) . 15508) (undo-tree-id0 . -14)) nil (25192 10861 371873 137000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15551 . 15552) (nil fontified nil 15550 . 15552) (nil fontified nil 15543 . 15550) (nil fontified nil 15542 . 15543) (nil fontified nil 15536 . 15542) (nil fontified nil 15535 . 15536) (nil fontified nil 15534 . 15535) (nil fontified nil 15533 . 15534) (nil fontified nil 15532 . 15533) (nil fontified nil 15530 . 15532) (nil fontified nil 15523 . 15530) (nil fontified nil 15522 . 15523) (nil fontified nil 15512 . 15522) (nil fontified nil 15511 . 15512) (nil fontified nil 15510 . 15511) (nil fontified nil 15509 . 15510) (nil fontified nil 15508 . 15509) (15508 . 15552)) nil (25192 10861 371850 546000) 0 nil])
([nil nil ((864 . 865) (t 25192 10861 391580 600000)) nil (25192 10869 455535 588000) 0 nil])
([nil nil ((nil rear-nonsticky nil 908 . 909) (nil fontified nil 907 . 909) (nil fontified nil 900 . 907) (nil fontified nil 899 . 900) (nil fontified nil 893 . 899) (nil fontified nil 892 . 893) (nil fontified nil 891 . 892) (nil fontified nil 890 . 891) (nil fontified nil 889 . 890) (nil fontified nil 887 . 889) (nil fontified nil 880 . 887) (nil fontified nil 879 . 880) (nil fontified nil 869 . 879) (nil fontified nil 868 . 869) (nil fontified nil 867 . 868) (nil fontified nil 866 . 867) (nil fontified nil 865 . 866) (865 . 909)) nil (25192 10869 455534 803000) 0 nil])
([nil nil ((909 . 910)) nil (25192 10869 455533 64000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t rear-nonsticky t)) . -908) (undo-tree-id8 . -1) (#(";" 0 1 (fontified t)) . -909) (undo-tree-id9 . -1) 910) nil (25192 10869 455532 442000) 0 nil])
([nil nil ((908 . 909)) nil (25192 10869 455530 651000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-warning-face)) . -908) (undo-tree-id7 . -1) 909) nil (25192 10869 455529 402000) 0 nil])
([nil nil ((908 . 909)) nil (25192 10869 455518 944000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -16212) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . 1) (#("u" 0 1 (fontified t)) . -16213) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("m" 0 1 (fontified t)) . -16214) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("_" 0 1 (fontified t)) . -16215) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("a" 0 1 (fontified t)) . -16216) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("c" 0 1 (fontified nil)) . -16217) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("t" 0 1 (fontified t)) . -16218) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("i" 0 1 (fontified t)) . -16219) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("o" 0 1 (fontified t)) . -16220) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("n" 0 1 (fontified t)) . -16221) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 16222 (t 25192 10869 468990 900000)) nil (25192 10922 74943 889000) 0 nil])
([nil nil ((16212 . 16213)) nil (25192 10922 74924 960000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 16212)) nil (25192 10922 74923 871000) 0 nil])
([nil nil ((16212 . 16223)) nil (25192 10922 74920 535000) 0 nil])
([nil nil ((15923 . 15931) (t 25192 10922 90036 300000)) nil (25192 10967 788579 610000) 0 nil])
([nil nil ((15931 . 15935)) nil (25192 10967 788579 75000) 0 nil])
([nil nil ((15931 . 15936) (#("dumm" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -15931) (undo-tree-id35 . -4) 15935) nil (25192 10967 788578 493000) 0 nil])
([nil nil ((15936 . 15943)) nil (25192 10967 788577 431000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15941) (undo-tree-id33 . -1) (#("." 0 1 (fontified t)) . -15942) (undo-tree-id34 . -1) 15943) nil (25192 10967 788576 772000) 0 nil])
([nil nil ((15941 . 15946)) nil (25192 10967 788575 147000) 0 nil])
([nil nil ((15942 . 15951) (#("push" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -15942) (undo-tree-id32 . -4) 15946) nil (25192 10967 788574 423000) 0 nil])
([nil nil ((15951 . 15953)) nil (25192 10967 788572 919000) 0 nil])
([nil nil ((15952 . 15955)) nil (25192 10967 788572 303000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -15954) (undo-tree-id31 . -1) 15955) nil (25192 10967 788571 144000) 0 nil])
([nil nil ((15954 . 15955)) nil (25192 10967 788560 514000) 0 nil])
([nil nil ((15956 . 15957) (t 25192 10967 803259 800000)) nil (25192 10969 808543 166000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -1867) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#(" " 0 1 (fontified t)) . -1868) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("e" 0 1 (fontified t)) . -1869) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("p" 0 1 (fontified t)) . -1870) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("s" 0 1 (fontified t)) . -1871) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("i" 0 1 (fontified t)) . -1872) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("l" 0 1 (fontified t)) . -1873) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#("o" 0 1 (fontified nil)) . -1874) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("n" 0 1 (fontified t)) . -1875) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#(")" 0 1 (fontified t)) . -1876) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("{" 0 1 (fontified t)) . -1877) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("a" 0 1 (fontified t)) . -1878) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("c" 0 1 (fontified t)) . -1879) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("t" 0 1 (fontified t)) . -1880) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("i" 0 1 (fontified t)) . -1881) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("o" 0 1 (fontified t)) . -1882) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("n" 0 1 (fontified t)) . -1883) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#(" " 0 1 (fontified nil)) . -1884) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("=" 0 1 (fontified t)) . -1885) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#(" " 0 1 (fontified t)) . -1886) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("}" 0 1 (fontified t)) . -1887) (undo-tree-id131 . -1) (undo-tree-id132 . 1) (undo-tree-id133 . -1) 1888 (t 25192 10969 821546 200000)) nil (25192 11058 981499 343000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1846) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("(" 0 1 (fontified t)) . -1847) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(")" 0 1 (fontified t)) . -1848) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("/" 0 1 (fontified t)) . -1849) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("d" 0 1 (fontified t)) . -1850) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -1851) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("u" 0 1 (fontified t)) . -1852) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("b" 0 1 (fontified nil)) . -1853) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("l" 0 1 (fontified t)) . -1854) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -1855) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("(" 0 1 (fontified t)) . -1856) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("R" 0 1 (fontified t)) . -1857) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("A" 0 1 (fontified t)) . -1858) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("N" 0 1 (fontified t)) . -1859) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("D" 0 1 (fontified t)) . -1860) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("_" 0 1 (fontified t)) . -1861) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("M" 0 1 (fontified t)) . -1862) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("A" 0 1 (fontified t)) . -1863) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("X" 0 1 (fontified t)) . -1864) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#(")" 0 1 (fontified t)) . -1865) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#(" " 0 1 (fontified t)) . -1866) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 1867) nil (25192 11058 981434 727000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1840) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -1841) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("(" 0 1 (fontified t)) . -1842) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("r" 0 1 (fontified t)) . -1843) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("a" 0 1 (fontified t)) . -1844) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("n" 0 1 (fontified t)) . -1845) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 1846) nil (25192 11058 981406 805000) 0 nil])
([nil nil ((1840 . 1854)) nil (25192 11058 981398 368000) 0 nil])
([nil nil ((1848 . 1858) (#("get_ac" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -1848) (undo-tree-id36 . -6) 1854) nil (25192 11058 981397 502000) 0 nil])
([nil nil ((1858 . 1860)) nil (25192 11058 981388 653000) 0 nil])
([nil nil ((1859 . 1862)) nil (25192 11058 981388 297000) 0 nil])
([nil nil ((1861 . 1866)) nil (25192 11058 981387 883000) 0 nil])
([nil nil ((1867 . 1868)) nil (25192 11058 981387 526000) 0 nil])
([nil nil ((1866 . 1868)) nil (25192 11058 981387 158000) 0 nil])
([nil nil ((1867 . 1868)) nil (25192 11058 981386 708000) 0 nil])
([nil nil ((1869 . 1870)) nil (25192 11058 981386 122000) 0 nil])
([nil nil ((1870 . 1877)) nil (25192 11058 981385 395000) 0 nil])
([nil nil ((1876 . 1877)) nil (25192 11058 981381 618000) 0 nil])
([nil nil ((1869 . 1871) (t 25192 11058 999892 300000)) nil (25192 11071 97970 145000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 1871)) nil (25192 11071 97969 361000) 0 nil])
([nil nil ((1881 . 1888)) nil (25192 11071 97968 624000) 0 nil])
([nil nil ((1889 . 1890)) nil (25192 11071 97965 41000) 0 nil])
([nil nil ((1890 . 1898) (t 25192 11071 113908 400000)) nil (25192 11072 629595 741000) 0 nil])
([nil nil ((1898 . 1917) (t 25192 11072 645054 800000)) nil (25192 11107 161769 206000) 0 nil])
([nil nil ((1910 . 1920) (#("eval_st" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -1910) (undo-tree-id137 . -7) 1917) nil (25192 11107 161768 491000) 0 nil])
([nil nil ((1920 . 1922)) nil (25192 11107 161767 239000) 0 nil])
([nil nil ((1921 . 1923)) nil (25192 11107 161766 813000) 0 nil])
([nil nil ((1921 . 1926) (#("ag" 0 1 (fontified t) 1 2 (fontified t)) . -1921) (undo-tree-id136 . -2) 1923) nil (25192 11107 161766 221000) 0 nil])
([nil nil ((1926 . 1927)) nil (25192 11107 161765 235000) 0 nil])
([nil nil ((1927 . 1930)) nil (25192 11107 161764 927000) 0 nil])
([nil nil ((1927 . 1935) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1927) (undo-tree-id135 . -3) 1930) nil (25192 11107 161764 274000) 0 nil])
([nil nil ((1936 . 1937)) nil (25192 11107 161763 77000) 0 nil])
([nil nil ((1937 . 1945)) nil (25192 11107 161762 421000) 0 nil])
([nil nil ((1337 . 1338)) nil (25192 11107 161761 843000) 0 nil])
([nil nil ((1338 . 1339)) nil (25192 11107 161761 575000) 0 nil])
([nil nil ((1339 . 1340)) nil (25192 11107 161761 276000) 0 nil])
([nil nil ((1340 . 1349)) nil (25192 11107 161760 777000) 0 nil])
([nil nil ((1349 . 1350)) nil (25192 11107 161760 229000) 0 nil])
([nil nil ((1350 . 1352)) nil (25192 11107 161759 872000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1351) (undo-tree-id134 . -1) 1352) nil (25192 11107 161758 762000) 0 nil])
([nil nil ((1351 . 1352)) nil (25192 11107 161750 975000) 0 nil])
([nil nil ((1349 . 1350)) nil (25192 11107 161747 848000) 0 nil])
([nil nil ((1961 . 1969) (t 25192 11107 175374 500000)) nil (25192 11131 319897 700000) 0 nil])
([nil nil ((1965 . 1970) (#("get_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1965) (undo-tree-id138 . -4) 1969) nil (25192 11131 319896 469000) 0 nil])
([nil nil ((1970 . 1972)) nil (25192 11131 319887 81000) 0 nil])
([nil nil ((1971 . 1980)) nil (25192 11131 319886 447000) 0 nil])
([nil nil ((1981 . 1982)) nil (25192 11131 319885 769000) 0 nil])
([nil nil ((1982 . 1990)) nil (25192 11131 319885 100000) 0 nil])
([nil nil ((1257 . 1258)) nil (25192 11131 319884 463000) 0 nil])
([nil nil ((1258 . 1260)) nil (25192 11131 319880 273000) 0 nil])
([nil nil ((1993 . 1996) (t 25192 11131 337963 500000)) nil (25192 11184 873442 969000) 0 nil])
([nil nil ((1995 . 2001)) nil (25192 11184 873442 62000) 0 nil])
([nil nil ((2001 . 2003)) nil (25192 11184 873441 314000) 0 nil])
([nil nil ((2004 . 2008)) nil (25192 11184 873440 596000) 0 nil])
([nil nil ((2005 . 2012)) nil (25192 11184 873439 611000) 0 nil])
([nil nil ((2012 . 2013)) nil (25192 11184 873438 713000) 0 nil])
([nil nil ((2015 . 2021)) nil (25192 11184 873435 341000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2015) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("c" 0 1 (fontified t)) . -2016) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("t" 0 1 (fontified t)) . -2017) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("i" 0 1 (fontified t)) . -2018) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("o" 0 1 (fontified t)) . -2019) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("n" 0 1 (fontified t)) . -2020) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 2021 (t 25192 11184 891642 900000)) nil (25192 11190 452189 827000) 0 nil])
([nil nil ((2015 . 2020)) nil (25192 11190 452173 561000) 0 nil])
([nil nil ((2021 . 2027) (t 25192 11190 467039 600000)) nil (25192 11307 935816 382000) 0 nil])
([nil nil ((2026 . 2033)) nil (25192 11307 935815 498000) 0 nil])
([nil nil ((2033 . 2044)) nil (25192 11307 935814 983000) 0 nil])
([nil nil ((2045 . 2060)) nil (25192 11307 935814 503000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2059) (undo-tree-id154 . -1) 2060) nil (25192 11307 935814 9000) 0 nil])
([nil nil ((2059 . 2061)) nil (25192 11307 935812 930000) 0 nil])
([nil nil ((2061 . 2062)) nil (25192 11307 935812 214000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -2061) (undo-tree-id153 . -1) 2062) nil (25192 11307 935811 387000) 0 nil])
([nil nil ((2061 . 2062)) nil (25192 11307 935810 26000) 0 nil])
([nil nil ((2062 . 2063)) nil (25192 11307 935809 533000) 0 nil])
([nil nil ((2063 . 2065)) nil (25192 11307 935808 923000) 0 nil])
([nil nil ((2064 . 2070)) nil (25192 11307 935808 379000) 0 nil])
([nil nil ((2070 . 2079)) nil (25192 11307 935807 944000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -2078) (undo-tree-id152 . -1) 2079) nil (25192 11307 935807 48000) 0 nil])
([nil nil ((2078 . 2088)) nil (25192 11307 935805 468000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -2087) (undo-tree-id151 . -1) 2088) nil (25192 11307 935804 609000) 0 nil])
([nil nil ((2087 . 2095)) nil (25192 11307 935796 115000) 0 nil])
([nil nil ((2078 . 2079)) nil (25192 11307 935795 471000) 0 nil])
([nil nil ((2097 . 2098)) nil (25192 11307 935791 734000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 1221) (#(" " 0 1 (fontified t)) . 1221) (#("0" 0 1 (fontified t)) . 1221) (#("." 0 1 (fontified nil)) . 1221) (#("1" 0 1 (fontified t)) . 1221) (#(" " 0 1 (fontified t)) . 1221) (#("=" 0 1 (fontified t)) . 1221) (#(" " 0 1 (fontified t)) . 1221) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . 1221) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . 1221) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . 1221) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . 1221) (#(" " 0 1 (fontified t)) . 1221) (t 25192 11307 953040 100000)) nil (25192 11420 714087 333000) 0 nil])
([nil nil ((2093 . 2095) (t 25192 11420 732659 0)) nil (25192 11439 988664 337000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2093) (undo-tree-id160 . -1) (#("t" 0 1 (fontified t)) . -2094) (undo-tree-id161 . -1) 2095) nil (25192 11439 988663 642000) 0 nil])
([nil nil ((2093 . 2098)) nil (25192 11439 988662 290000) 0 nil])
([nil nil ((2098 . 2108)) nil (25192 11439 988662 29000) 0 nil])
([nil nil ((1344 . 1347)) nil (25192 11439 988661 652000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1344) (undo-tree-id157 . -1) (#(" " 0 1 (fontified t)) . -1345) (undo-tree-id158 . -1) (#(" " 0 1 (fontified t)) . -1346) (undo-tree-id159 . -1) 1347) nil (25192 11439 988661 146000) 0 nil])
([nil nil ((1302 . 1303)) nil (25192 11439 988658 816000) 0 nil])
([nil nil ((1303 . 1304)) nil (25192 11439 988658 353000) 0 nil])
([nil nil ((1304 . 1310)) nil (25192 11439 988657 812000) 0 nil])
([nil nil ((1305 . 1316) (#("game_" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face)) . -1305) (undo-tree-id155 . -5) (undo-tree-id156 . 5) 1310) nil (25192 11439 988655 148000) 0 nil])
([nil nil ((2122 . 2123) (t 25192 11440 2561 700000)) nil (25192 11461 333053 289000) 0 nil])
([nil nil ((2123 . 2131)) nil (25192 11461 333052 706000) 0 nil])
([nil nil ((2131 . 2134)) nil (25192 11461 333052 323000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -2133) (undo-tree-id169 . -1) 2134) nil (25192 11461 333051 877000) 0 nil])
([nil nil ((2133 . 2136)) nil (25192 11461 333050 904000) 0 nil])
([nil nil ((2136 . 2137) (#(" x" 0 2 (fontified nil)) . -2136) (2136 . 2138) (#("while" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil face font-lock-keyword-face)) . 2136) (undo-tree-id168 . -5) (2131 . 2136) 2136) nil (25192 11461 333050 186000) 0 nil])
([nil nil ((2137 . 2142)) nil (25192 11461 333049 218000) 0 nil])
([nil nil ((2137 . 2148) (#("game_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -2137) (undo-tree-id167 . -5) 2142) nil (25192 11461 333048 760000) 0 nil])
([nil nil ((2148 . 2149)) nil (25192 11461 333047 897000) 0 nil])
([nil nil ((2149 . 2150)) nil (25192 11461 333047 215000) 0 nil])
([nil nil ((2150 . 2154)) nil (25192 11461 333046 831000) 0 nil])
([nil nil ((2154 . 2155)) nil (25192 11461 333046 253000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2136) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 2137) nil (25192 11461 333045 291000) 0 nil])
([nil nil ((2136 . 2137) (#(" x" 0 2 (fontified nil)) . -2136) (2136 . 2138) (#("while" 0 5 (fontified nil)) . 2136) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (2131 . 2136) 2136) nil (25192 11461 333043 641000) 0 nil])
([nil nil ((2155 . 2158)) nil (25192 11461 333023 743000) 0 nil])
([nil nil ((2158 . 2160)) nil (25192 11461 333023 205000) 0 nil])
([nil nil ((2161 . 2163) (#("		" 0 2 (fontified nil)) . 2160) (undo-tree-id162 . -2) (2159 . 2163)) nil (25192 11461 333020 631000) 0 nil])
([nil nil ((2159 . 2164) (t 25192 11461 346768 100000)) nil (25192 11566 20967 257000) 0 nil])
([nil nil ((2164 . 2167)) nil (25192 11566 20966 894000) 0 nil])
([nil nil ((2164 . 2172) (#("opp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2164) (undo-tree-id185 . -3) 2167) nil (25192 11566 20966 531000) 0 nil])
([nil nil ((2172 . 2176)) nil (25192 11566 20965 650000) 0 nil])
([nil nil ((2176 . 2177)) nil (25192 11566 20965 371000) 0 nil])
([nil nil ((2175 . 2183) (#("op" 0 1 (fontified t) 1 2 (fontified t)) . -2175) (undo-tree-id184 . -2) 2177) nil (25192 11566 20964 859000) 0 nil])
([nil nil ((2183 . 2184)) nil (25192 11566 20964 38000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2183) (undo-tree-id181 . -1) (undo-tree-id182 . 1) (undo-tree-id183 . -1) 2184) nil (25192 11566 20963 360000) 0 nil])
([nil nil ((2183 . 2186)) nil (25192 11566 20961 506000) 0 nil])
([nil nil ((2175 . 2188) (#("opponent_mo" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . -2175) (undo-tree-id180 . -11) 2186) nil (25192 11566 20960 756000) 0 nil])
([nil nil ((2188 . 2189)) nil (25192 11566 20959 907000) 0 nil])
([nil nil ((2189 . 2195)) nil (25192 11566 20959 446000) 0 nil])
([nil nil ((2195 . 2196)) nil (25192 11566 20959 128000) 0 nil])
([nil nil ((2196 . 2201)) nil (25192 11566 20958 875000) 0 nil])
([nil nil ((2201 . 2202)) nil (25192 11566 20958 545000) 0 nil])
([nil nil ((2202 . 2203)) nil (25192 11566 20958 288000) 0 nil])
([nil nil ((2203 . 2205)) nil (25192 11566 20958 15000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -2204) (undo-tree-id179 . -1) 2205) nil (25192 11566 20957 630000) 0 nil])
([nil nil ((2204 . 2208)) nil (25192 11566 20956 888000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -2207) (undo-tree-id178 . -1) 2208) nil (25192 11566 20956 392000) 0 nil])
([nil nil ((2207 . 2208)) nil (25192 11566 20955 402000) 0 nil])
([nil nil ((2208 . 2209)) nil (25192 11566 20955 99000) 0 nil])
([nil nil ((2209 . 2210)) nil (25192 11566 20954 784000) 0 nil])
([nil nil ((2210 . 2215)) nil (25192 11566 20954 436000) 0 nil])
([nil nil ((2215 . 2216)) nil (25192 11566 20954 123000) 0 nil])
([nil nil ((2216 . 2218)) nil (25192 11566 20953 854000) 0 nil])
([nil nil ((2215 . 2220) (#("age" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2215) (undo-tree-id177 . -3) 2218) nil (25192 11566 20953 278000) 0 nil])
([nil nil ((2220 . 2228)) nil (25192 11566 20952 118000) 0 nil])
([nil nil ((2223 . 2233) (#("GET_A" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -2223) (undo-tree-id176 . -5) 2228) nil (25192 11566 20951 690000) 0 nil])
([nil nil ((2233 . 2234)) nil (25192 11566 20950 946000) 0 nil])
([nil nil ((2234 . 2240)) nil (25192 11566 20950 689000) 0 nil])
([nil nil ((2236 . 2241) (#("stat" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2236) (undo-tree-id175 . -4) 2240) nil (25192 11566 20950 235000) 0 nil])
([nil nil ((2241 . 2250)) nil (25192 11566 20949 336000) 0 nil])
([nil nil ((2250 . 2255)) nil (25192 11566 20949 64000) 0 nil])
([nil nil ((2255 . 2256)) nil (25192 11566 20948 736000) 0 nil])
([nil nil ((2256 . 2260)) nil (25192 11566 20948 461000) 0 nil])
([nil nil ((2257 . 2264) (#("eps" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2257) (undo-tree-id174 . -3) 2260) nil (25192 11566 20948 102000) 0 nil])
([nil nil ((2264 . 2265)) nil (25192 11566 20947 225000) 0 nil])
([nil nil ((2265 . 2266)) nil (25192 11566 20946 802000) 0 nil])
([nil nil ((2266 . 2271)) nil (25192 11566 20946 482000) 0 nil])
([nil nil ((2271 . 2278)) nil (25192 11566 20946 115000) 0 nil])
([nil nil ((2271 . 2280) (#("new_sta" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -2271) (undo-tree-id173 . -7) 2278) nil (25192 11566 20945 730000) 0 nil])
([nil nil ((2280 . 2287)) nil (25192 11566 20944 858000) 0 nil])
([nil nil ((2283 . 2291) (#("eval" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2283) (undo-tree-id172 . -4) 2287) nil (25192 11566 20944 371000) 0 nil])
([nil nil ((2291 . 2292)) nil (25192 11566 20943 145000) 0 nil])
([nil nil ((2292 . 2298)) nil (25192 11566 20942 878000) 0 nil])
([nil nil ((2298 . 2299)) nil (25192 11566 20942 570000) 0 nil])
([nil nil ((2299 . 2305)) nil (25192 11566 20942 308000) 0 nil])
([nil nil ((2305 . 2306)) nil (25192 11566 20941 978000) 0 nil])
([nil nil ((2306 . 2307)) nil (25192 11566 20941 534000) 0 nil])
([nil nil ((2307 . 2312)) nil (25192 11566 20941 257000) 0 nil])
([nil nil ((2312 . 2319)) nil (25192 11566 20940 827000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 2287) (#("t" 0 1 (fontified t)) . 2287) (#("a" 0 1 (fontified t)) . 2287) (#("u" 0 1 (fontified t)) . 2287)) nil (25192 11566 20940 351000) 0 nil])
([nil nil ((2287 . 2291)) nil (25192 11566 20939 671000) 0 nil])
([nil nil ((2283 . 2293) (#("eval_sta" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -2283) (undo-tree-id171 . -8) 2291) nil (25192 11566 20939 148000) 0 nil])
([nil nil ((2321 . 2323)) nil (25192 11566 20937 858000) 0 nil])
([nil nil ((2323 . 2324)) nil (25192 11566 20937 429000) 0 nil])
([nil nil ((2324 . 2333)) nil (25192 11566 20937 107000) 0 nil])
([nil nil ((2333 . 2334)) nil (25192 11566 20936 816000) 0 nil])
([nil nil ((2334 . 2335)) nil (25192 11566 20936 230000) 0 nil])
([nil nil ((2335 . 2340)) nil (25192 11566 20935 852000) 0 nil])
([nil nil ((#("Q[state[0]][state[1]][agent] = Q[state[0]][state[1]][agent] + alpha * (R - Q[state[0]][state[1]][agent]);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t)) . 1994) (undo-tree-id170 . -105)) nil (25192 11566 20935 32000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2098 . 2099) (nil fontified nil 2098 . 2099) (nil fontified nil 2097 . 2098) (nil fontified nil 2096 . 2097) (nil fontified nil 2095 . 2096) (nil fontified nil 2094 . 2095) (nil fontified nil 2093 . 2094) (nil fontified nil 2092 . 2093) (nil fontified nil 2091 . 2092) (nil fontified nil 2090 . 2091) (nil fontified nil 2089 . 2090) (nil fontified nil 2088 . 2089) (nil fontified nil 2087 . 2088) (nil fontified nil 2086 . 2087) (nil fontified nil 2085 . 2086) (nil fontified nil 2084 . 2085) (nil fontified nil 2083 . 2084) (nil fontified nil 2082 . 2083) (nil fontified nil 2081 . 2082) (nil fontified nil 2080 . 2081) (nil fontified nil 2079 . 2080) (nil fontified nil 2078 . 2079) (nil fontified nil 2077 . 2078) (nil fontified nil 2076 . 2077) (nil fontified nil 2075 . 2076) (nil fontified nil 2074 . 2075) (nil fontified nil 2073 . 2074) (nil fontified nil 2072 . 2073) (nil fontified nil 2071 . 2072) (nil fontified nil 2070 . 2071) (nil fontified nil 2069 . 2070) (nil fontified nil 2068 . 2069) (nil fontified nil 2067 . 2068) (nil fontified nil 2066 . 2067) (nil fontified nil 2065 . 2066) (nil fontified nil 2064 . 2065) (nil fontified nil 2063 . 2064) (nil fontified nil 2062 . 2063) (nil fontified nil 2061 . 2062) (nil fontified nil 2060 . 2061) (nil fontified nil 2059 . 2060) (nil fontified nil 2058 . 2059) (nil fontified nil 2057 . 2058) (nil fontified nil 2056 . 2057) (nil fontified nil 2055 . 2056) (nil fontified nil 2054 . 2055) (nil fontified nil 2053 . 2054) (nil fontified nil 2052 . 2053) (nil fontified nil 2051 . 2052) (nil fontified nil 2050 . 2051) (nil fontified nil 2049 . 2050) (nil fontified nil 2048 . 2049) (nil fontified nil 2047 . 2048) (nil fontified nil 2046 . 2047) (nil fontified nil 2045 . 2046) (nil fontified nil 2044 . 2045) (nil fontified nil 2043 . 2044) (nil fontified nil 2042 . 2043) (nil fontified nil 2041 . 2042) (nil fontified nil 2040 . 2041) (nil fontified nil 2039 . 2040) (nil fontified nil 2038 . 2039) (nil fontified nil 2037 . 2038) (nil fontified nil 2036 . 2037) (nil fontified nil 2035 . 2036) (nil fontified nil 2034 . 2035) (nil fontified nil 2033 . 2034) (nil fontified nil 2032 . 2033) (nil fontified nil 2031 . 2032) (nil fontified nil 2030 . 2031) (nil fontified nil 2029 . 2030) (nil fontified nil 2028 . 2029) (nil fontified nil 2027 . 2028) (nil fontified nil 2026 . 2027) (nil fontified nil 2025 . 2026) (nil fontified nil 2024 . 2025) (nil fontified nil 2023 . 2024) (nil fontified nil 2022 . 2023) (nil fontified nil 2021 . 2022) (nil fontified nil 2020 . 2021) (nil fontified nil 2019 . 2020) (nil fontified nil 2018 . 2019) (nil fontified nil 2017 . 2018) (nil fontified nil 2016 . 2017) (nil fontified nil 2015 . 2016) (nil fontified nil 2014 . 2015) (nil fontified nil 2013 . 2014) (nil fontified nil 2012 . 2013) (nil fontified nil 2011 . 2012) (nil fontified nil 2010 . 2011) (nil fontified nil 2009 . 2010) (nil fontified nil 2008 . 2009) (nil fontified nil 2007 . 2008) (nil fontified nil 2006 . 2007) (nil fontified nil 2005 . 2006) (nil fontified nil 2004 . 2005) (nil fontified nil 2003 . 2004) (nil fontified nil 2002 . 2003) (nil fontified nil 2001 . 2002) (nil fontified nil 2000 . 2001) (nil fontified nil 1999 . 2000) (nil fontified nil 1998 . 1999) (nil fontified nil 1997 . 1998) (nil fontified nil 1996 . 1997) (nil fontified nil 1995 . 1996) (nil fontified nil 1994 . 1995) (1994 . 2099)) nil (25192 11566 20925 708000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2444 . 2445) (nil fontified nil 2444 . 2445) (nil fontified nil 2443 . 2444) (nil fontified nil 2442 . 2443) (nil fontified nil 2441 . 2442) (nil fontified nil 2440 . 2441) (nil fontified nil 2439 . 2440) (nil fontified nil 2438 . 2439) (nil fontified nil 2437 . 2438) (nil fontified nil 2436 . 2437) (nil fontified nil 2435 . 2436) (nil fontified nil 2434 . 2435) (nil fontified nil 2433 . 2434) (nil fontified nil 2432 . 2433) (nil fontified nil 2431 . 2432) (nil fontified nil 2430 . 2431) (nil fontified nil 2429 . 2430) (nil fontified nil 2428 . 2429) (nil fontified nil 2427 . 2428) (nil fontified nil 2426 . 2427) (nil fontified nil 2425 . 2426) (nil fontified nil 2424 . 2425) (nil fontified nil 2423 . 2424) (nil fontified nil 2422 . 2423) (nil fontified nil 2421 . 2422) (nil fontified nil 2420 . 2421) (nil fontified nil 2419 . 2420) (nil fontified nil 2418 . 2419) (nil fontified nil 2417 . 2418) (nil fontified nil 2416 . 2417) (nil fontified nil 2415 . 2416) (nil fontified nil 2414 . 2415) (nil fontified nil 2413 . 2414) (nil fontified nil 2412 . 2413) (nil fontified nil 2411 . 2412) (nil fontified nil 2410 . 2411) (nil fontified nil 2409 . 2410) (nil fontified nil 2408 . 2409) (nil fontified nil 2407 . 2408) (nil fontified nil 2406 . 2407) (nil fontified nil 2405 . 2406) (nil fontified nil 2404 . 2405) (nil fontified nil 2403 . 2404) (nil fontified nil 2402 . 2403) (nil fontified nil 2401 . 2402) (nil fontified nil 2400 . 2401) (nil fontified nil 2399 . 2400) (nil fontified nil 2398 . 2399) (nil fontified nil 2397 . 2398) (nil fontified nil 2396 . 2397) (nil fontified nil 2395 . 2396) (nil fontified nil 2394 . 2395) (nil fontified nil 2393 . 2394) (nil fontified nil 2392 . 2393) (nil fontified nil 2391 . 2392) (nil fontified nil 2390 . 2391) (nil fontified nil 2389 . 2390) (nil fontified nil 2388 . 2389) (nil fontified nil 2387 . 2388) (nil fontified nil 2386 . 2387) (nil fontified nil 2385 . 2386) (nil fontified nil 2384 . 2385) (nil fontified nil 2383 . 2384) (nil fontified nil 2382 . 2383) (nil fontified nil 2381 . 2382) (nil fontified nil 2380 . 2381) (nil fontified nil 2379 . 2380) (nil fontified nil 2378 . 2379) (nil fontified nil 2377 . 2378) (nil fontified nil 2376 . 2377) (nil fontified nil 2375 . 2376) (nil fontified nil 2374 . 2375) (nil fontified nil 2373 . 2374) (nil fontified nil 2372 . 2373) (nil fontified nil 2371 . 2372) (nil fontified nil 2370 . 2371) (nil fontified nil 2369 . 2370) (nil fontified nil 2368 . 2369) (nil fontified nil 2367 . 2368) (nil fontified nil 2366 . 2367) (nil fontified nil 2365 . 2366) (nil fontified nil 2364 . 2365) (nil fontified nil 2363 . 2364) (nil fontified nil 2362 . 2363) (nil fontified nil 2361 . 2362) (nil fontified nil 2360 . 2361) (nil fontified nil 2359 . 2360) (nil fontified nil 2358 . 2359) (nil fontified nil 2357 . 2358) (nil fontified nil 2356 . 2357) (nil fontified nil 2355 . 2356) (nil fontified nil 2354 . 2355) (nil fontified nil 2353 . 2354) (nil fontified nil 2352 . 2353) (nil fontified nil 2351 . 2352) (nil fontified nil 2350 . 2351) (nil fontified nil 2349 . 2350) (nil fontified nil 2348 . 2349) (nil fontified nil 2347 . 2348) (nil fontified nil 2346 . 2347) (nil fontified nil 2345 . 2346) (nil fontified nil 2344 . 2345) (nil fontified nil 2343 . 2344) (nil fontified nil 2342 . 2343) (nil fontified nil 2341 . 2342) (nil fontified nil 2340 . 2341) (2340 . 2445)) nil (25192 11566 20914 53000) 0 nil])
([nil nil ((2445 . 2450) (t 25192 11566 35927 0)) nil (25192 11583 614535 921000) 0 nil])
([nil nil ((2450 . 2455)) nil (25192 11583 614534 999000) 0 nil])
([nil nil ((2450 . 2461) (#("game_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -2450) (undo-tree-id187 . -5) (undo-tree-id188 . 5) 2455) nil (25192 11583 614534 160000) 0 nil])
([nil nil ((2461 . 2462)) nil (25192 11583 614532 40000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2461) (undo-tree-id186 . -1) 2462) nil (25192 11583 614531 108000) 0 nil])
([nil nil ((2461 . 2463)) nil (25192 11583 614522 663000) 0 nil])
([nil nil ((2463 . 2464)) nil (25192 11583 614519 237000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2302) (undo-tree-id191 . -1) (#("t" 0 1 (fontified t)) . -2303) (undo-tree-id192 . -1) (#("a" 0 1 (fontified t)) . -2304) (undo-tree-id193 . -1) (#("t" 0 1 (fontified t)) . -2305) (undo-tree-id194 . -1) (#("e" 0 1 (fontified t)) . -2306) (undo-tree-id195 . -1) 2307 (t 25192 11583 630111 800000)) nil (25192 11597 643584 164000) 0 nil])
([nil nil ((2302 . 2304)) nil (25192 11597 643579 232000) 0 nil])
([nil nil ((2302 . 2310) (#("op" 0 1 (fontified t) 1 2 (fontified t)) . -2302) (undo-tree-id189 . -2) (undo-tree-id190 . 2) 2304) nil (25192 11597 643576 216000) 0 nil])
([nil nil ((2467 . 2472) (t 25192 11597 662950 100000)) nil (25192 11609 230697 72000) 0 nil])
([nil nil ((2472 . 2489)) nil (25192 11609 230696 197000) 0 nil])
([nil nil ((2489 . 2490)) nil (25192 11609 230693 31000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2490) (undo-tree-id207 . -1) 2491 (t 25192 11609 247674 500000)) nil (25192 11622 357848 425000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2479) (undo-tree-id201 . -1) (#("s" 0 1 (fontified t)) . -2480) (undo-tree-id202 . -1) (#("t" 0 1 (fontified t)) . -2481) (undo-tree-id203 . -1) (#("a" 0 1 (fontified t)) . -2482) (undo-tree-id204 . -1) (#("t" 0 1 (fontified t)) . -2483) (undo-tree-id205 . -1) (#("e" 0 1 (fontified t)) . -2484) (undo-tree-id206 . -1) 2485) nil (25192 11622 357846 985000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2479)) nil (25192 11622 357843 763000) 0 nil])
([nil nil ((2479 . 2480)) nil (25192 11622 357843 447000) 0 nil])
([nil nil ((2483 . 2488)) nil (25192 11622 357843 87000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2483) (undo-tree-id196 . -1) (#("t" 0 1 (fontified t)) . -2484) (undo-tree-id197 . -1) (#("a" 0 1 (fontified t)) . -2485) (undo-tree-id198 . -1) (#("t" 0 1 (fontified t)) . -2486) (undo-tree-id199 . -1) (#("e" 0 1 (fontified t)) . -2487) (undo-tree-id200 . -1) 2488) nil (25192 11622 357841 453000) 0 nil])
([nil nil ((2483 . 2489)) nil (25192 11622 357828 323000) 0 nil])
([nil nil ((2509 . 2513) (t 25192 11622 372976 700000)) nil (25192 11635 372309 781000) 0 nil])
([nil nil ((2511 . 2514) (#("	  " 0 3 (fontified nil)) . 2510) (undo-tree-id222 . -3) (2513 . 2514) (t 25192 11635 390525 500000)) nil (25192 11682 229940 220000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2512) (undo-tree-id220 . -1) (#(" " 0 1 (fontified t)) . -2513) (undo-tree-id221 . -1) 2514) nil (25192 11682 229938 746000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2509) (undo-tree-id209 . -1) (#("
" 0 1 (fontified t)) . -2510) (undo-tree-id210 . -1) (#(" " 0 1 (fontified t)) . -2511) (undo-tree-id211 . -1) (#(" " 0 1 (fontified t)) . -2512) (undo-tree-id212 . -1) (#(" " 0 1 (fontified t)) . -2513) (undo-tree-id213 . -1) (#(" " 0 1 (fontified t)) . -2514) (undo-tree-id214 . -1) (#(" " 0 1 (fontified t)) . -2515) (undo-tree-id215 . -1) (#(" " 0 1 (fontified t)) . -2516) (undo-tree-id216 . -1) (#(" " 0 1 (fontified t)) . -2517) (undo-tree-id217 . -1) (#(" " 0 1 (fontified nil)) . -2518) (undo-tree-id218 . -1) (#("	" 0 1 (fontified nil)) . 2519) (undo-tree-id219 . -1) (2511 . 2519) 2512) nil (25192 11682 229936 64000) 0 nil])
([nil nil ((#("// Training loop" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 16 (c-in-sws t fontified t face font-lock-comment-face)) . 1361) (undo-tree-id208 . -16)) nil (25192 11682 229929 262000) 0 nil])
([nil nil ((1488 . 1492)) nil (25192 11682 229921 221000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1507 . 1508) (nil fontified nil 1495 . 1508) (nil fontified nil 1493 . 1495) (nil fontified nil 1492 . 1493) (1492 . 1508)) nil (25192 11682 229917 981000) 0 nil])
([nil nil ((2513 . 2517) (t 25192 11682 244795 400000)) nil (25192 11699 500919 950000) 0 nil])
([nil nil ((2517 . 2518)) nil (25192 11699 500919 538000) 0 nil])
([nil nil ((2518 . 2519)) nil (25192 11699 500919 231000) 0 nil])
([nil nil ((2519 . 2524)) nil (25192 11699 500918 907000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face font-lock-comment-face)) . -2519) (undo-tree-id224 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -2520) (undo-tree-id225 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -2521) (undo-tree-id226 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -2522) (undo-tree-id227 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -2523) (undo-tree-id228 . -1) 2524) nil (25192 11699 500918 228000) 0 nil])
([nil nil ((2515 . 2518) (#("	  " 0 3 (fontified nil c-in-sws t c-is-sws t)) . 2514) (undo-tree-id223 . -3) (2517 . 2518)) nil (25192 11699 500914 852000) 0 nil])
([nil nil ((2520 . 2530)) nil (25192 11699 500907 210000) 0 nil])
([nil nil ((2530 . 2534)) nil (25192 11699 500906 764000) 0 nil])
([nil nil ((2534 . 2538)) nil (25192 11699 500903 540000) 0 nil])
([nil nil ((2538 . 2541) (t 25192 11699 515419 300000)) nil (25192 11712 944024 877000) 0 nil])
([nil nil ((2538 . 2545) (#("one" 0 1 (fontified t c-is-sws t) 1 2 (fontified t) 2 3 (fontified t)) . -2538) (undo-tree-id229 . -3) 2541) nil (25192 11712 944023 847000) 0 nil])
([nil nil ((2545 . 2553)) nil (25192 11712 944014 542000) 0 nil])
([nil nil ((2553 . 2554)) nil (25192 11712 944010 613000) 0 nil])
([nil nil ((2552 . 2558) (t 25192 11712 961999 300000)) nil (25192 11719 803938 431000) 0 nil])
([nil nil ((2558 . 2560)) nil (25192 11719 803934 344000) 0 nil])
([nil nil ((#("q = linspace(0,1.0/3.0,n_q)" 0 1 (fontified t face font-lock-variable-name-face) 1 27 (fontified t)) . 1169) (undo-tree-id234 . -27) (undo-tree-id235 . -27) (undo-tree-id236 . 1) (undo-tree-id237 . -27) (undo-tree-id238 . 15) (undo-tree-id239 . -13) 1196 (t 25192 11719 823506 200000)) nil (25192 11748 309968 642000) 0 nil])
([nil nil ((1157 . 1158)) nil (25192 11748 309950 375000) 0 nil])
([nil nil ((1158 . 1159)) nil (25192 11748 309950 109000) 0 nil])
([nil nil ((1159 . 1160)) nil (25192 11748 309949 763000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1186 . 1187) (nil fontified nil 1161 . 1187) (nil fontified nil 1160 . 1161) (1160 . 1187)) nil (25192 11748 309949 368000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1199) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) 1200) nil (25192 11748 309948 518000) 0 nil])
([nil nil ((1199 . 1201)) nil (25192 11748 309938 819000) 0 nil])
([nil nil ((1201 . 1206)) nil (25192 11748 309938 381000) 0 nil])
([nil nil ((1206 . 1207)) nil (25192 11748 309935 483000) 0 nil])
([nil nil ((2572 . 2576) (t 25192 11748 325265 500000)) nil (25192 11807 607038 993000) 0 nil])
([nil nil ((2576 . 2579)) nil (25192 11807 607038 529000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2581 2595 nil nil nil t #s(yas--field 2 2597 2602 nil nil nil nil #s(yas--field 3 2604 2607 nil nil nil nil #s(yas--exit 2623 nil)))) #s(yas--field 2 2597 2602 nil nil nil nil #s(yas--field 3 2604 2607 nil nil nil nil #s(yas--exit 2623 nil))) #s(yas--field 3 2604 2607 nil nil nil nil #s(yas--exit 2623 nil))) #s(yas--exit 2623 nil) 0 nil #s(yas--field 1 2581 2595 nil nil nil t #s(yas--field 2 2597 2602 nil nil nil nil #s(yas--field 3 2604 2607 nil nil nil nil #s(yas--exit 2623 nil)))) nil nil)) (2619 . 2624) (2611 . 2618) (#("    " 0 4 (fontified nil)) . -2611) (undo-tree-id251 . -4) (2604 . 2609) (2576 . 2612) (#("for" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face)) . 2576) (undo-tree-id252 . -3) (undo-tree-id253 . -3)) nil (25192 11807 607037 804000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-variable-name-face)) . 2585)) nil (25192 11807 607035 664000) 0 nil])
([nil nil ((2585 . 2589)) nil (25192 11807 607035 381000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -2588) (undo-tree-id250 . -1) 2589) nil (25192 11807 607034 968000) 0 nil])
([nil nil ((2588 . 2591)) nil (25192 11807 607034 155000) 0 nil])
([nil nil ((apply yas--snippet-revive 2576 2630 #s(yas--snippet nil (#s(yas--field 1 2581 2595 nil nil nil t #s(yas--field 2 2597 2602 nil nil nil nil #s(yas--field 3 2604 2607 nil nil nil nil #s(yas--exit 2623 nil)))) #s(yas--field 2 2597 2602 nil nil nil nil #s(yas--field 3 2604 2607 nil nil nil nil #s(yas--exit 2623 nil))) #s(yas--field 3 2604 2607 nil nil nil nil #s(yas--exit 2623 nil))) #s(yas--exit 2623 nil) 0 nil #s(yas--field 1 2581 2595 nil nil nil t #s(yas--field 2 2597 2602 nil nil nil nil #s(yas--field 3 2604 2607 nil nil nil nil #s(yas--exit 2623 nil)))) nil nil))) nil (25192 11807 607033 893000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2597)) nil (25192 11807 607033 524000) 0 nil])
([nil nil ((2597 . 2603)) nil (25192 11807 607033 194000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . 2606)) nil (25192 11807 607032 765000) 0 nil])
([nil nil ((2606 . 2608)) nil (25192 11807 607032 424000) 0 nil])
([nil nil ((2608 . 2615)) nil (25192 11807 607031 824000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -2606) (undo-tree-id241 . -1) (#("_" 0 1 (fontified t)) . -2607) (undo-tree-id242 . -1) (#("r" 0 1 (fontified t)) . -2608) (undo-tree-id243 . -1) (#("e" 0 1 (fontified t)) . -2609) (undo-tree-id244 . -1) (#("p" 0 1 (fontified t)) . -2610) (undo-tree-id245 . -1) (#("e" 0 1 (fontified t)) . -2611) (undo-tree-id246 . -1) (#("a" 0 1 (fontified t)) . -2612) (undo-tree-id247 . -1) (#("t" 0 1 (fontified t)) . -2613) (undo-tree-id248 . -1) (#("s" 0 1 (fontified t)) . -2614) (undo-tree-id249 . -1) 2615) nil (25192 11807 607030 628000) 0 nil])
([nil nil ((2606 . 2613)) nil (25192 11807 607025 909000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 2617)) nil (25192 11807 607025 413000) 0 nil])
([nil nil ((2617 . 2622)) nil (25192 11807 607025 42000) 0 nil])
([nil nil ((2622 . 2623)) nil (25192 11807 607024 587000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1566) (undo-tree-id240 . -1) 1567) nil (25192 11807 607023 736000) 0 nil])
([nil nil ((1566 . 1567)) nil (25192 11807 607016 169000) 0 nil])
([nil nil ((1567 . 1573)) nil (25192 11807 607013 577000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1294) (#("," 0 1 (fontified t c-type c-decl-id-start)) . 1294) (t 25192 11807 622857 500000)) nil (25192 11840 789726 784000) 0 nil])
([nil nil ((1294 . 1298) (#(" " 0 1 (fontified nil)) . 1293) (undo-tree-id255 . -1) (1294 . 1295)) nil (25192 11840 789726 194000) 0 nil])
([nil nil ((1298 . 1301)) nil (25192 11840 789725 1000) 0 nil])
([nil nil ((1293 . 1294)) nil (25192 11840 789724 648000) 0 nil])
([nil nil ((1294 . 1300)) nil (25192 11840 789724 153000) 0 nil])
([nil nil ((1300 . 1308)) nil (25192 11840 789723 544000) 0 nil])
([nil nil ((1308 . 1309)) nil (25192 11840 789723 201000) 0 nil])
([nil nil ((1317 . 1318)) nil (25192 11840 789722 682000) 0 nil])
([nil nil ((1310 . 1312) (#("    " 0 4 (fontified t)) . 1310) (undo-tree-id254 . -4) 1318) nil (25192 11840 789720 96000) 0 nil])
([nil nil ((#("if(rand()/double(RAND_MAX) < (1.0-2.0*q[j])){opponent = 0;}
	      else
		{
		  if(rand()/double(RAND_MAX) < 0.5){opponent = 1;}
		  else{opponent = 2;}		  
		}
	      agent = rand()%3;
	      state = eval_state(agent , opponent);
	      opponent = opponent_move(state, p[i] , q[j]);
	      agent = GET_ACTION(Q[state[0]][state[1]],epsilon);
	      new_state = eval_state(agent,opponent);
	      R = get_R(new_state);
	      Q[state[0]][state[1]][agent] = Q[state[0]][state[1]][agent] + alpha * (R - Q[state[0]][state[1]][agent]);
	      game_number = 1;
	      while(game_number < 500)
		{
		  opponent = opponent_move(state , p[i] , q[j]);
		  agent = GET_ACTION(Q[state[0]][state[1]], epsilon);
		  new_state = eval_state(agent , opponent);
		  R = get_R(new_state);
		  Q[state[0]][state[1]][agent] = Q[state[0]][state[1]][agent] + alpha * (R - Q[state[0]][state[1]][agent]);
		  game_number++;
		  state = new_state;
		}" 0 2 (fontified t face font-lock-keyword-face) 2 10 (fontified t) 10 16 (fontified t face font-lock-type-face) 16 60 (fontified t) 60 67 (fontified t) 67 71 (fontified t face font-lock-keyword-face) 71 80 (fontified t) 80 82 (fontified t face font-lock-keyword-face) 82 90 (fontified t) 90 96 (fontified t face font-lock-type-face) 96 133 (fontified t) 133 137 (fontified t face font-lock-keyword-face) 137 231 (fontified t) 231 283 (fontified t) 283 284 (fontified t) 284 291 (fontified t) 291 292 (fontified t) 292 293 (fontified t) 293 294 (fontified t) 294 295 (fontified t) 295 296 (fontified t) 296 297 (fontified t) 297 298 (fontified t) 298 299 (fontified t) 299 309 (fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (fontified t) 312 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 320 (fontified t) 320 321 (fontified t) 321 322 (fontified t) 322 323 (fontified t) 323 324 (fontified t) 324 325 (fontified t) 325 326 (fontified t) 326 327 (fontified t) 327 328 (fontified t) 328 329 (fontified t) 329 330 (fontified t) 330 331 (fontified t) 331 332 (fontified t) 332 333 (fontified t) 333 334 (fontified t) 334 335 (fontified t) 335 336 (fontified t) 336 337 (fontified t) 337 338 (fontified t) 338 339 (fontified t) 339 340 (fontified t) 340 341 (fontified t) 341 342 (fontified t) 342 349 (fontified t) 349 350 (fontified t) 350 351 (fontified t) 351 352 (fontified t) 352 353 (fontified t) 353 354 (fontified t) 354 355 (fontified t) 355 356 (fontified t) 356 357 (fontified t) 357 358 (fontified t) 358 359 (fontified t) 359 360 (fontified t) 360 361 (fontified t) 361 371 (fontified t) 371 372 (fontified t) 372 377 (fontified t) 377 378 (fontified t) 378 386 (fontified t) 386 387 (fontified t) 387 388 (fontified t) 388 389 (fontified t) 389 396 (fontified t) 396 397 (fontified t) 397 398 (fontified t) 398 399 (fontified t) 399 400 (fontified t) 400 405 (fontified t) 405 406 (fontified t) 406 407 (fontified t) 407 408 (fontified t) 408 409 (fontified t) 409 410 (fontified t) 410 411 (fontified t) 411 412 (fontified t) 412 413 (fontified t) 413 414 (fontified t) 414 415 (fontified t) 415 416 (fontified t) 416 417 (fontified t) 417 418 (fontified t) 418 425 (fontified t) 425 426 (fontified t) 426 427 (fontified t) 427 428 (fontified t) 428 429 (fontified t) 429 430 (fontified t) 430 431 (fontified t) 431 432 (fontified t) 432 433 (fontified t) 433 434 (fontified t) 434 435 (fontified t) 435 436 (fontified t) 436 437 (fontified t) 437 438 (fontified t) 438 439 (fontified t) 439 440 (fontified t) 440 441 (fontified t) 441 442 (fontified t) 442 443 (fontified t) 443 444 (fontified t) 444 445 (fontified t) 445 446 (fontified t) 446 447 (fontified t) 447 448 (fontified t) 448 449 (fontified t) 449 450 (fontified t) 450 451 (fontified t) 451 452 (fontified t) 452 453 (fontified t) 453 454 (fontified t) 454 455 (fontified t) 455 456 (fontified t) 456 457 (fontified t) 457 458 (fontified t) 458 459 (fontified t) 459 460 (fontified t) 460 461 (fontified t) 461 462 (fontified t) 462 463 (fontified t) 463 464 (fontified t) 464 465 (fontified t) 465 466 (fontified t) 466 467 (fontified t) 467 468 (fontified t) 468 469 (fontified t) 469 470 (fontified t) 470 471 (fontified t) 471 472 (fontified t) 472 473 (fontified t) 473 474 (fontified t) 474 475 (fontified t) 475 476 (fontified t) 476 477 (fontified t) 477 478 (fontified t) 478 479 (fontified t) 479 480 (fontified t) 480 481 (fontified t) 481 482 (fontified t) 482 483 (fontified t) 483 484 (fontified t) 484 485 (fontified t) 485 486 (fontified t) 486 487 (fontified t) 487 488 (fontified t) 488 489 (fontified t) 489 490 (fontified t) 490 491 (fontified t) 491 492 (fontified t) 492 493 (fontified t) 493 494 (fontified t) 494 495 (fontified t) 495 496 (fontified t) 496 497 (fontified t) 497 498 (fontified t) 498 499 (fontified t) 499 500 (fontified t) 500 501 (fontified t) 501 502 (fontified t) 502 503 (fontified t) 503 504 (fontified t) 504 505 (fontified t) 505 506 (fontified t) 506 507 (fontified t) 507 508 (fontified t) 508 509 (fontified t) 509 510 (fontified t) 510 511 (fontified t) 511 512 (fontified t) 512 513 (fontified t) 513 514 (fontified t) 514 515 (fontified t) 515 516 (fontified t) 516 517 (fontified t) 517 518 (fontified t) 518 519 (fontified t) 519 520 (fontified t) 520 521 (fontified t) 521 522 (fontified t) 522 523 (fontified t) 523 524 (fontified t) 524 525 (fontified t) 525 526 (fontified t) 526 527 (fontified t) 527 528 (fontified t) 528 529 (fontified t) 529 530 (rear-nonsticky t fontified t) 530 531 (fontified t) 531 538 (fontified t) 538 539 (fontified t) 539 540 (fontified t) 540 541 (fontified t) 541 542 (fontified t) 542 543 (fontified t) 543 544 (fontified t) 544 545 (fontified t) 545 546 (fontified t) 546 547 (fontified t) 547 548 (fontified t) 548 549 (fontified t) 549 550 (fontified t) 550 551 (fontified t) 551 552 (fontified t) 552 553 (fontified t) 553 554 (fontified t) 554 555 (fontified t) 555 562 (fontified t) 562 567 (fontified t face font-lock-keyword-face) 567 568 (fontified t) 568 579 (fontified t) 579 580 (fontified t) 580 581 (fontified t) 581 582 (fontified t) 582 583 (fontified t) 583 584 (fontified t) 584 585 (fontified t) 585 586 (fontified t) 586 587 (fontified t) 587 589 (fontified t) 589 590 (fontified t) 590 591 (fontified t) 591 595 (fontified t) 595 603 (fontified t) 603 604 (fontified t) 604 605 (fontified t) 605 606 (fontified t) 606 619 (fontified t) 619 620 (fontified t) 620 621 (fontified t) 621 622 (fontified t) 622 623 (fontified t) 623 624 (fontified t) 624 625 (fontified t) 625 626 (fontified t) 626 627 (fontified t) 627 628 (fontified t) 628 629 (fontified t) 629 630 (fontified t) 630 631 (fontified t) 631 632 (fontified t) 632 633 (fontified t) 633 634 (fontified t) 634 635 (fontified t) 635 636 (fontified t) 636 637 (fontified t) 637 638 (fontified t) 638 639 (fontified t) 639 640 (fontified t) 640 641 (fontified t) 641 642 (fontified t) 642 646 (fontified t) 646 651 (fontified t) 651 652 (fontified t) 652 653 (fontified t) 653 654 (fontified t) 654 664 (fontified t) 664 665 (fontified t) 665 666 (fontified t) 666 667 (fontified t) 667 672 (fontified t) 672 673 (fontified t) 673 674 (fontified t) 674 675 (fontified t) 675 676 (fontified t) 676 677 (fontified t) 677 678 (fontified t) 678 679 (fontified t) 679 680 (fontified t) 680 681 (fontified t) 681 682 (fontified t) 682 683 (fontified t) 683 684 (fontified t) 684 685 (fontified t) 685 686 (fontified t) 686 687 (fontified t) 687 688 (fontified t) 688 695 (fontified t) 695 696 (fontified t) 696 697 (fontified t) 697 698 (fontified t) 698 702 (fontified t) 702 711 (fontified t) 711 712 (fontified t) 712 713 (fontified t) 713 714 (fontified t) 714 724 (fontified t) 724 725 (fontified t) 725 726 (fontified t) 726 727 (fontified t) 727 728 (fontified t) 728 729 (fontified t) 729 730 (fontified t) 730 731 (fontified t) 731 732 (fontified t) 732 733 (fontified t) 733 741 (fontified t) 741 742 (fontified t) 742 743 (fontified t) 743 744 (fontified t) 744 748 (fontified t) 748 749 (fontified t) 749 750 (fontified t) 750 751 (fontified t) 751 752 (fontified t) 752 753 (fontified t) 753 754 (fontified t) 754 755 (fontified t) 755 756 (fontified t) 756 757 (fontified t) 757 758 (fontified t) 758 759 (fontified t) 759 760 (fontified t) 760 761 (fontified t) 761 762 (fontified t) 762 763 (fontified t) 763 764 (fontified t) 764 765 (fontified t) 765 766 (fontified t) 766 767 (fontified t) 767 768 (fontified t) 768 769 (fontified t) 769 770 (fontified t) 770 774 (fontified t) 774 775 (fontified t) 775 776 (fontified t) 776 777 (fontified t) 777 778 (fontified t) 778 779 (fontified t) 779 780 (fontified t) 780 781 (fontified t) 781 782 (fontified t) 782 783 (fontified t) 783 784 (fontified t) 784 785 (fontified t) 785 786 (fontified t) 786 787 (fontified t) 787 788 (fontified t) 788 789 (fontified t) 789 790 (fontified t) 790 791 (fontified t) 791 792 (fontified t) 792 793 (fontified t) 793 794 (fontified t) 794 795 (fontified t) 795 796 (fontified t) 796 797 (fontified t) 797 798 (fontified t) 798 799 (fontified t) 799 800 (fontified t) 800 801 (fontified t) 801 802 (fontified t) 802 803 (fontified t) 803 804 (fontified t) 804 805 (fontified t) 805 806 (fontified t) 806 807 (fontified t) 807 808 (fontified t) 808 809 (fontified t) 809 810 (fontified t) 810 811 (fontified t) 811 812 (fontified t) 812 813 (fontified t) 813 814 (fontified t) 814 815 (fontified t) 815 816 (fontified t) 816 817 (fontified t) 817 818 (fontified t) 818 819 (fontified t) 819 820 (fontified t) 820 821 (fontified t) 821 822 (fontified t) 822 823 (fontified t) 823 824 (fontified t) 824 825 (fontified t) 825 826 (fontified t) 826 827 (fontified t) 827 828 (fontified t) 828 829 (fontified t) 829 830 (fontified t) 830 831 (fontified t) 831 832 (fontified t) 832 833 (fontified t) 833 834 (fontified t) 834 835 (fontified t) 835 836 (fontified t) 836 837 (fontified t) 837 838 (fontified t) 838 839 (fontified t) 839 840 (fontified t) 840 841 (fontified t) 841 842 (fontified t) 842 843 (fontified t) 843 844 (fontified t) 844 845 (fontified t) 845 846 (fontified t) 846 847 (fontified t) 847 848 (fontified t) 848 849 (fontified t) 849 850 (fontified t) 850 851 (fontified t) 851 852 (fontified t) 852 853 (fontified t) 853 854 (fontified t) 854 855 (fontified t) 855 856 (fontified t) 856 857 (fontified t) 857 858 (fontified t) 858 859 (fontified t) 859 860 (fontified t) 860 861 (fontified t) 861 862 (fontified t) 862 863 (fontified t) 863 864 (fontified t) 864 865 (fontified t) 865 866 (fontified t) 866 867 (fontified t) 867 868 (fontified t) 868 869 (fontified t) 869 870 (fontified t) 870 871 (fontified t) 871 872 (fontified t) 872 873 (fontified t) 873 874 (fontified t) 874 875 (fontified t) 875 876 (fontified t) 876 877 (fontified t) 877 878 (fontified t) 878 879 (rear-nonsticky t fontified t) 879 880 (fontified t) 880 884 (fontified t) 884 895 (fontified t) 895 896 (fontified t) 896 897 (fontified t) 897 898 (fontified t) 898 899 (fontified t) 899 903 (fontified t) 903 904 (fontified t) 904 905 (fontified t) 905 906 (fontified t) 906 907 (fontified t) 907 908 (fontified t) 908 909 (fontified t) 909 910 (fontified t) 910 911 (fontified t) 911 912 (fontified t) 912 913 (fontified t) 913 914 (fontified t) 914 915 (fontified t) 915 916 (fontified t) 916 917 (fontified t) 917 918 (fontified t) 918 919 (fontified t) 919 920 (fontified t) 920 921 (fontified t) 921 922 (fontified t) 922 924 (fontified t) 924 925 (fontified t)) . 1609) (undo-tree-id256 . -291) (undo-tree-id257 . -425) (undo-tree-id258 . -774) (undo-tree-id259 . -925) (undo-tree-id260 . -925) (undo-tree-id261 . 1) (undo-tree-id262 . -925) (undo-tree-id263 . 336) (undo-tree-id264 . -590) 2534 (t 25192 11840 804520 0)) nil (25192 11922 560690 540000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2533 . 2534) (nil fontified nil 2533 . 2534) (nil fontified nil 2531 . 2533) (nil fontified nil 2530 . 2531) (nil fontified nil 2529 . 2530) (nil fontified nil 2528 . 2529) (nil fontified nil 2527 . 2528) (nil fontified nil 2526 . 2527) (nil fontified nil 2525 . 2526) (nil fontified nil 2524 . 2525) (nil fontified nil 2523 . 2524) (nil fontified nil 2522 . 2523) (nil fontified nil 2521 . 2522) (nil fontified nil 2520 . 2521) (nil fontified nil 2519 . 2520) (nil fontified nil 2518 . 2519) (nil fontified nil 2517 . 2518) (nil fontified nil 2516 . 2517) (nil fontified nil 2515 . 2516) (nil fontified nil 2514 . 2515) (nil fontified nil 2513 . 2514) (nil fontified nil 2512 . 2513) (nil fontified nil 2508 . 2512) (nil fontified nil 2507 . 2508) (nil fontified nil 2506 . 2507) (nil fontified nil 2505 . 2506) (nil fontified nil 2504 . 2505) (nil fontified nil 2493 . 2504) (nil fontified nil 2489 . 2493) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2462 . 2463) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2458 . 2459) (nil fontified nil 2457 . 2458) (nil fontified nil 2456 . 2457) (nil fontified nil 2455 . 2456) (nil fontified nil 2454 . 2455) (nil fontified nil 2453 . 2454) (nil fontified nil 2452 . 2453) (nil fontified nil 2451 . 2452) (nil fontified nil 2450 . 2451) (nil fontified nil 2449 . 2450) (nil fontified nil 2448 . 2449) (nil fontified nil 2447 . 2448) (nil fontified nil 2446 . 2447) (nil fontified nil 2445 . 2446) (nil fontified nil 2444 . 2445) (nil fontified nil 2443 . 2444) (nil fontified nil 2442 . 2443) (nil fontified nil 2441 . 2442) (nil fontified nil 2440 . 2441) (nil fontified nil 2439 . 2440) (nil fontified nil 2438 . 2439) (nil fontified nil 2437 . 2438) (nil fontified nil 2436 . 2437) (nil fontified nil 2435 . 2436) (nil fontified nil 2434 . 2435) (nil fontified nil 2433 . 2434) (nil fontified nil 2432 . 2433) (nil fontified nil 2431 . 2432) (nil fontified nil 2430 . 2431) (nil fontified nil 2429 . 2430) (nil fontified nil 2428 . 2429) (nil fontified nil 2427 . 2428) (nil fontified nil 2426 . 2427) (nil fontified nil 2425 . 2426) (nil fontified nil 2424 . 2425) (nil fontified nil 2423 . 2424) (nil fontified nil 2422 . 2423) (nil fontified nil 2421 . 2422) (nil fontified nil 2420 . 2421) (nil fontified nil 2419 . 2420) (nil fontified nil 2418 . 2419) (nil fontified nil 2417 . 2418) (nil fontified nil 2416 . 2417) (nil fontified nil 2415 . 2416) (nil fontified nil 2414 . 2415) (nil fontified nil 2413 . 2414) (nil fontified nil 2412 . 2413) (nil fontified nil 2411 . 2412) (nil fontified nil 2410 . 2411) (nil fontified nil 2409 . 2410) (nil fontified nil 2408 . 2409) (nil fontified nil 2407 . 2408) (nil fontified nil 2406 . 2407) (nil fontified nil 2405 . 2406) (nil fontified nil 2404 . 2405) (nil fontified nil 2403 . 2404) (nil fontified nil 2402 . 2403) (nil fontified nil 2401 . 2402) (nil fontified nil 2400 . 2401) (nil fontified nil 2399 . 2400) (nil fontified nil 2398 . 2399) (nil fontified nil 2397 . 2398) (nil fontified nil 2396 . 2397) (nil fontified nil 2395 . 2396) (nil fontified nil 2394 . 2395) (nil fontified nil 2393 . 2394) (nil fontified nil 2392 . 2393) (nil fontified nil 2391 . 2392) (nil fontified nil 2390 . 2391) (nil fontified nil 2389 . 2390) (nil fontified nil 2388 . 2389) (nil fontified nil 2387 . 2388) (nil fontified nil 2386 . 2387) (nil fontified nil 2385 . 2386) (nil fontified nil 2384 . 2385) (nil fontified nil 2383 . 2384) (nil fontified nil 2379 . 2383) (nil fontified nil 2378 . 2379) (nil fontified nil 2377 . 2378) (nil fontified nil 2376 . 2377) (nil fontified nil 2375 . 2376) (nil fontified nil 2374 . 2375) (nil fontified nil 2373 . 2374) (nil fontified nil 2372 . 2373) (nil fontified nil 2371 . 2372) (nil fontified nil 2370 . 2371) (nil fontified nil 2369 . 2370) (nil fontified nil 2368 . 2369) (nil fontified nil 2367 . 2368) (nil fontified nil 2366 . 2367) (nil fontified nil 2365 . 2366) (nil fontified nil 2364 . 2365) (nil fontified nil 2363 . 2364) (nil fontified nil 2362 . 2363) (nil fontified nil 2361 . 2362) (nil fontified nil 2360 . 2361) (nil fontified nil 2359 . 2360) (nil fontified nil 2358 . 2359) (nil fontified nil 2357 . 2358) (nil fontified nil 2353 . 2357) (nil fontified nil 2352 . 2353) (nil fontified nil 2351 . 2352) (nil fontified nil 2350 . 2351) (nil fontified nil 2342 . 2350) (nil fontified nil 2341 . 2342) (nil fontified nil 2340 . 2341) (nil fontified nil 2339 . 2340) (nil fontified nil 2338 . 2339) (nil fontified nil 2337 . 2338) (nil fontified nil 2336 . 2337) (nil fontified nil 2335 . 2336) (nil fontified nil 2334 . 2335) (nil fontified nil 2333 . 2334) (nil fontified nil 2323 . 2333) (nil fontified nil 2322 . 2323) (nil fontified nil 2321 . 2322) (nil fontified nil 2320 . 2321) (nil fontified nil 2311 . 2320) (nil fontified nil 2307 . 2311) (nil fontified nil 2306 . 2307) (nil fontified nil 2305 . 2306) (nil fontified nil 2304 . 2305) (nil fontified nil 2297 . 2304) (nil fontified nil 2296 . 2297) (nil fontified nil 2295 . 2296) (nil fontified nil 2294 . 2295) (nil fontified nil 2293 . 2294) (nil fontified nil 2292 . 2293) (nil fontified nil 2291 . 2292) (nil fontified nil 2290 . 2291) (nil fontified nil 2289 . 2290) (nil fontified nil 2288 . 2289) (nil fontified nil 2287 . 2288) (nil fontified nil 2286 . 2287) (nil fontified nil 2285 . 2286) (nil fontified nil 2284 . 2285) (nil fontified nil 2283 . 2284) (nil fontified nil 2282 . 2283) (nil fontified nil 2281 . 2282) (nil fontified nil 2276 . 2281) (nil fontified nil 2275 . 2276) (nil fontified nil 2274 . 2275) (nil fontified nil 2273 . 2274) (nil fontified nil 2263 . 2273) (nil fontified nil 2262 . 2263) (nil fontified nil 2261 . 2262) (nil fontified nil 2260 . 2261) (nil fontified nil 2255 . 2260) (nil fontified nil 2251 . 2255) (nil fontified nil 2250 . 2251) (nil fontified nil 2249 . 2250) (nil fontified nil 2248 . 2249) (nil fontified nil 2247 . 2248) (nil fontified nil 2246 . 2247) (nil fontified nil 2245 . 2246) (nil fontified nil 2244 . 2245) (nil fontified nil 2243 . 2244) (nil fontified nil 2242 . 2243) (nil fontified nil 2241 . 2242) (nil fontified nil 2240 . 2241) (nil fontified nil 2239 . 2240) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2229 . 2230) (nil fontified nil 2228 . 2229) (nil fontified nil 2215 . 2228) (nil fontified nil 2214 . 2215) (nil fontified nil 2213 . 2214) (nil fontified nil 2212 . 2213) (nil fontified nil 2204 . 2212) (nil fontified nil 2200 . 2204) (nil fontified nil 2199 . 2200) (nil fontified nil 2198 . 2199) (nil fontified nil 2196 . 2198) (nil fontified nil 2195 . 2196) (nil fontified nil 2194 . 2195) (nil fontified nil 2193 . 2194) (nil fontified nil 2192 . 2193) (nil fontified nil 2191 . 2192) (nil fontified nil 2190 . 2191) (nil fontified nil 2189 . 2190) (nil fontified nil 2188 . 2189) (nil fontified nil 2177 . 2188) (nil fontified nil 2176 . 2177) (nil fontified nil 2171 . 2176) (nil fontified nil 2164 . 2171) (nil fontified nil 2163 . 2164) (nil fontified nil 2162 . 2163) (nil fontified nil 2161 . 2162) (nil fontified nil 2160 . 2161) (nil fontified nil 2159 . 2160) (nil fontified nil 2158 . 2159) (nil fontified nil 2157 . 2158) (nil fontified nil 2156 . 2157) (nil fontified nil 2155 . 2156) (nil fontified nil 2154 . 2155) (nil fontified nil 2153 . 2154) (nil fontified nil 2152 . 2153) (nil fontified nil 2151 . 2152) (nil fontified nil 2150 . 2151) (nil fontified nil 2149 . 2150) (nil fontified nil 2148 . 2149) (nil fontified nil 2147 . 2148) (nil fontified nil 2140 . 2147) (nil fontified nil 2139 . 2140) (nil fontified nil 2138 . 2139) (nil fontified nil 2137 . 2138) (nil fontified nil 2136 . 2137) (nil fontified nil 2135 . 2136) (nil fontified nil 2134 . 2135) (nil fontified nil 2133 . 2134) (nil fontified nil 2132 . 2133) (nil fontified nil 2131 . 2132) (nil fontified nil 2130 . 2131) (nil fontified nil 2129 . 2130) (nil fontified nil 2128 . 2129) (nil fontified nil 2127 . 2128) (nil fontified nil 2126 . 2127) (nil fontified nil 2125 . 2126) (nil fontified nil 2124 . 2125) (nil fontified nil 2123 . 2124) (nil fontified nil 2122 . 2123) (nil fontified nil 2121 . 2122) (nil fontified nil 2120 . 2121) (nil fontified nil 2119 . 2120) (nil fontified nil 2118 . 2119) (nil fontified nil 2117 . 2118) (nil fontified nil 2116 . 2117) (nil fontified nil 2115 . 2116) (nil fontified nil 2114 . 2115) (nil fontified nil 2113 . 2114) (nil fontified nil 2112 . 2113) (nil fontified nil 2111 . 2112) (nil fontified nil 2110 . 2111) (nil fontified nil 2109 . 2110) (nil fontified nil 2108 . 2109) (nil fontified nil 2107 . 2108) (nil fontified nil 2106 . 2107) (nil fontified nil 2105 . 2106) (nil fontified nil 2104 . 2105) (nil fontified nil 2103 . 2104) (nil fontified nil 2102 . 2103) (nil fontified nil 2101 . 2102) (nil fontified nil 2100 . 2101) (nil fontified nil 2099 . 2100) (nil fontified nil 2098 . 2099) (nil fontified nil 2097 . 2098) (nil fontified nil 2096 . 2097) (nil fontified nil 2095 . 2096) (nil fontified nil 2094 . 2095) (nil fontified nil 2093 . 2094) (nil fontified nil 2092 . 2093) (nil fontified nil 2091 . 2092) (nil fontified nil 2090 . 2091) (nil fontified nil 2089 . 2090) (nil fontified nil 2088 . 2089) (nil fontified nil 2087 . 2088) (nil fontified nil 2086 . 2087) (nil fontified nil 2085 . 2086) (nil fontified nil 2084 . 2085) (nil fontified nil 2083 . 2084) (nil fontified nil 2082 . 2083) (nil fontified nil 2081 . 2082) (nil fontified nil 2080 . 2081) (nil fontified nil 2079 . 2080) (nil fontified nil 2078 . 2079) (nil fontified nil 2077 . 2078) (nil fontified nil 2076 . 2077) (nil fontified nil 2075 . 2076) (nil fontified nil 2074 . 2075) (nil fontified nil 2073 . 2074) (nil fontified nil 2072 . 2073) (nil fontified nil 2071 . 2072) (nil fontified nil 2070 . 2071) (nil fontified nil 2069 . 2070) (nil fontified nil 2068 . 2069) (nil fontified nil 2067 . 2068) (nil fontified nil 2066 . 2067) (nil fontified nil 2065 . 2066) (nil fontified nil 2064 . 2065) (nil fontified nil 2063 . 2064) (nil fontified nil 2062 . 2063) (nil fontified nil 2061 . 2062) (nil fontified nil 2060 . 2061) (nil fontified nil 2059 . 2060) (nil fontified nil 2058 . 2059) (nil fontified nil 2057 . 2058) (nil fontified nil 2056 . 2057) (nil fontified nil 2055 . 2056) (nil fontified nil 2054 . 2055) (nil fontified nil 2053 . 2054) (nil fontified nil 2052 . 2053) (nil fontified nil 2051 . 2052) (nil fontified nil 2050 . 2051) (nil fontified nil 2049 . 2050) (nil fontified nil 2048 . 2049) (nil fontified nil 2047 . 2048) (nil fontified nil 2046 . 2047) (nil fontified nil 2045 . 2046) (nil fontified nil 2044 . 2045) (nil fontified nil 2043 . 2044) (nil fontified nil 2042 . 2043) (nil fontified nil 2041 . 2042) (nil fontified nil 2040 . 2041) (nil fontified nil 2039 . 2040) (nil fontified nil 2038 . 2039) (nil fontified nil 2037 . 2038) (nil fontified nil 2036 . 2037) (nil fontified nil 2035 . 2036) (nil fontified nil 2034 . 2035) (nil fontified nil 2027 . 2034) (nil fontified nil 2026 . 2027) (nil fontified nil 2025 . 2026) (nil fontified nil 2024 . 2025) (nil fontified nil 2023 . 2024) (nil fontified nil 2022 . 2023) (nil fontified nil 2021 . 2022) (nil fontified nil 2020 . 2021) (nil fontified nil 2019 . 2020) (nil fontified nil 2018 . 2019) (nil fontified nil 2017 . 2018) (nil fontified nil 2016 . 2017) (nil fontified nil 2015 . 2016) (nil fontified nil 2014 . 2015) (nil fontified nil 2009 . 2014) (nil fontified nil 2008 . 2009) (nil fontified nil 2007 . 2008) (nil fontified nil 2006 . 2007) (nil fontified nil 2005 . 2006) (nil fontified nil 1998 . 2005) (nil fontified nil 1997 . 1998) (nil fontified nil 1996 . 1997) (nil fontified nil 1995 . 1996) (nil fontified nil 1987 . 1995) (nil fontified nil 1986 . 1987) (nil fontified nil 1981 . 1986) (nil fontified nil 1980 . 1981) (nil fontified nil 1970 . 1980) (nil fontified nil 1969 . 1970) (nil fontified nil 1968 . 1969) (nil fontified nil 1967 . 1968) (nil fontified nil 1966 . 1967) (nil fontified nil 1965 . 1966) (nil fontified nil 1964 . 1965) (nil fontified nil 1963 . 1964) (nil fontified nil 1962 . 1963) (nil fontified nil 1961 . 1962) (nil fontified nil 1960 . 1961) (nil fontified nil 1959 . 1960) (nil fontified nil 1958 . 1959) (nil fontified nil 1951 . 1958) (nil fontified nil 1950 . 1951) (nil fontified nil 1949 . 1950) (nil fontified nil 1948 . 1949) (nil fontified nil 1947 . 1948) (nil fontified nil 1946 . 1947) (nil fontified nil 1945 . 1946) (nil fontified nil 1944 . 1945) (nil fontified nil 1943 . 1944) (nil fontified nil 1942 . 1943) (nil fontified nil 1941 . 1942) (nil fontified nil 1940 . 1941) (nil fontified nil 1939 . 1940) (nil fontified nil 1938 . 1939) (nil fontified nil 1937 . 1938) (nil fontified nil 1936 . 1937) (nil fontified nil 1935 . 1936) (nil fontified nil 1934 . 1935) (nil fontified nil 1933 . 1934) (nil fontified nil 1932 . 1933) (nil fontified nil 1931 . 1932) (nil fontified nil 1930 . 1931) (nil fontified nil 1929 . 1930) (nil fontified nil 1928 . 1929) (nil fontified nil 1927 . 1928) (nil fontified nil 1926 . 1927) (nil fontified nil 1925 . 1926) (nil fontified nil 1924 . 1925) (nil fontified nil 1923 . 1924) (nil fontified nil 1922 . 1923) (nil fontified nil 1921 . 1922) (nil fontified nil 1920 . 1921) (nil fontified nil 1919 . 1920) (nil fontified nil 1918 . 1919) (nil fontified nil 1908 . 1918) (nil fontified nil 1907 . 1908) (nil fontified nil 1906 . 1907) (nil fontified nil 1905 . 1906) (nil fontified nil 1904 . 1905) (nil fontified nil 1903 . 1904) (nil fontified nil 1902 . 1903) (nil fontified nil 1901 . 1902) (nil fontified nil 1900 . 1901) (nil fontified nil 1893 . 1900) (nil fontified nil 1892 . 1893) (nil fontified nil 1840 . 1892) (nil fontified nil 1746 . 1840) (nil fontified nil 1742 . 1746) (nil fontified nil 1705 . 1742) (nil fontified nil 1699 . 1705) (nil fontified nil 1691 . 1699) (nil fontified nil 1689 . 1691) (nil fontified nil 1680 . 1689) (nil fontified nil 1676 . 1680) (nil fontified nil 1669 . 1676) (nil fontified nil 1625 . 1669) (nil fontified nil 1619 . 1625) (nil fontified nil 1611 . 1619) (nil fontified nil 1609 . 1611) (1609 . 2534)) nil (25192 11922 560665 977000) 0 nil])
([nil nil ((2598 . 2602)) nil (25192 11922 560634 136000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3526 . 3527) (nil fontified nil 3526 . 3527) (nil fontified nil 3524 . 3526) (nil fontified nil 3523 . 3524) (nil fontified nil 3522 . 3523) (nil fontified nil 3521 . 3522) (nil fontified nil 3520 . 3521) (nil fontified nil 3519 . 3520) (nil fontified nil 3518 . 3519) (nil fontified nil 3517 . 3518) (nil fontified nil 3516 . 3517) (nil fontified nil 3515 . 3516) (nil fontified nil 3514 . 3515) (nil fontified nil 3513 . 3514) (nil fontified nil 3512 . 3513) (nil fontified nil 3511 . 3512) (nil fontified nil 3510 . 3511) (nil fontified nil 3509 . 3510) (nil fontified nil 3508 . 3509) (nil fontified nil 3507 . 3508) (nil fontified nil 3506 . 3507) (nil fontified nil 3505 . 3506) (nil fontified nil 3501 . 3505) (nil fontified nil 3500 . 3501) (nil fontified nil 3499 . 3500) (nil fontified nil 3498 . 3499) (nil fontified nil 3497 . 3498) (nil fontified nil 3486 . 3497) (nil fontified nil 3482 . 3486) (nil fontified nil 3481 . 3482) (nil fontified nil 3480 . 3481) (nil fontified nil 3479 . 3480) (nil fontified nil 3478 . 3479) (nil fontified nil 3477 . 3478) (nil fontified nil 3476 . 3477) (nil fontified nil 3475 . 3476) (nil fontified nil 3474 . 3475) (nil fontified nil 3473 . 3474) (nil fontified nil 3472 . 3473) (nil fontified nil 3471 . 3472) (nil fontified nil 3470 . 3471) (nil fontified nil 3469 . 3470) (nil fontified nil 3468 . 3469) (nil fontified nil 3467 . 3468) (nil fontified nil 3466 . 3467) (nil fontified nil 3465 . 3466) (nil fontified nil 3464 . 3465) (nil fontified nil 3463 . 3464) (nil fontified nil 3462 . 3463) (nil fontified nil 3461 . 3462) (nil fontified nil 3460 . 3461) (nil fontified nil 3459 . 3460) (nil fontified nil 3458 . 3459) (nil fontified nil 3457 . 3458) (nil fontified nil 3456 . 3457) (nil fontified nil 3455 . 3456) (nil fontified nil 3454 . 3455) (nil fontified nil 3453 . 3454) (nil fontified nil 3452 . 3453) (nil fontified nil 3451 . 3452) (nil fontified nil 3450 . 3451) (nil fontified nil 3449 . 3450) (nil fontified nil 3448 . 3449) (nil fontified nil 3447 . 3448) (nil fontified nil 3446 . 3447) (nil fontified nil 3445 . 3446) (nil fontified nil 3444 . 3445) (nil fontified nil 3443 . 3444) (nil fontified nil 3442 . 3443) (nil fontified nil 3441 . 3442) (nil fontified nil 3440 . 3441) (nil fontified nil 3439 . 3440) (nil fontified nil 3438 . 3439) (nil fontified nil 3437 . 3438) (nil fontified nil 3436 . 3437) (nil fontified nil 3435 . 3436) (nil fontified nil 3434 . 3435) (nil fontified nil 3433 . 3434) (nil fontified nil 3432 . 3433) (nil fontified nil 3431 . 3432) (nil fontified nil 3430 . 3431) (nil fontified nil 3429 . 3430) (nil fontified nil 3428 . 3429) (nil fontified nil 3427 . 3428) (nil fontified nil 3426 . 3427) (nil fontified nil 3425 . 3426) (nil fontified nil 3424 . 3425) (nil fontified nil 3423 . 3424) (nil fontified nil 3422 . 3423) (nil fontified nil 3421 . 3422) (nil fontified nil 3420 . 3421) (nil fontified nil 3419 . 3420) (nil fontified nil 3418 . 3419) (nil fontified nil 3417 . 3418) (nil fontified nil 3416 . 3417) (nil fontified nil 3415 . 3416) (nil fontified nil 3414 . 3415) (nil fontified nil 3413 . 3414) (nil fontified nil 3412 . 3413) (nil fontified nil 3411 . 3412) (nil fontified nil 3410 . 3411) (nil fontified nil 3409 . 3410) (nil fontified nil 3408 . 3409) (nil fontified nil 3407 . 3408) (nil fontified nil 3406 . 3407) (nil fontified nil 3405 . 3406) (nil fontified nil 3404 . 3405) (nil fontified nil 3403 . 3404) (nil fontified nil 3402 . 3403) (nil fontified nil 3401 . 3402) (nil fontified nil 3400 . 3401) (nil fontified nil 3399 . 3400) (nil fontified nil 3398 . 3399) (nil fontified nil 3397 . 3398) (nil fontified nil 3396 . 3397) (nil fontified nil 3395 . 3396) (nil fontified nil 3394 . 3395) (nil fontified nil 3393 . 3394) (nil fontified nil 3392 . 3393) (nil fontified nil 3391 . 3392) (nil fontified nil 3390 . 3391) (nil fontified nil 3389 . 3390) (nil fontified nil 3388 . 3389) (nil fontified nil 3387 . 3388) (nil fontified nil 3386 . 3387) (nil fontified nil 3385 . 3386) (nil fontified nil 3384 . 3385) (nil fontified nil 3383 . 3384) (nil fontified nil 3382 . 3383) (nil fontified nil 3381 . 3382) (nil fontified nil 3380 . 3381) (nil fontified nil 3379 . 3380) (nil fontified nil 3378 . 3379) (nil fontified nil 3377 . 3378) (nil fontified nil 3376 . 3377) (nil fontified nil 3372 . 3376) (nil fontified nil 3371 . 3372) (nil fontified nil 3370 . 3371) (nil fontified nil 3369 . 3370) (nil fontified nil 3368 . 3369) (nil fontified nil 3367 . 3368) (nil fontified nil 3366 . 3367) (nil fontified nil 3365 . 3366) (nil fontified nil 3364 . 3365) (nil fontified nil 3363 . 3364) (nil fontified nil 3362 . 3363) (nil fontified nil 3361 . 3362) (nil fontified nil 3360 . 3361) (nil fontified nil 3359 . 3360) (nil fontified nil 3358 . 3359) (nil fontified nil 3357 . 3358) (nil fontified nil 3356 . 3357) (nil fontified nil 3355 . 3356) (nil fontified nil 3354 . 3355) (nil fontified nil 3353 . 3354) (nil fontified nil 3352 . 3353) (nil fontified nil 3351 . 3352) (nil fontified nil 3350 . 3351) (nil fontified nil 3346 . 3350) (nil fontified nil 3345 . 3346) (nil fontified nil 3344 . 3345) (nil fontified nil 3343 . 3344) (nil fontified nil 3335 . 3343) (nil fontified nil 3334 . 3335) (nil fontified nil 3333 . 3334) (nil fontified nil 3332 . 3333) (nil fontified nil 3331 . 3332) (nil fontified nil 3330 . 3331) (nil fontified nil 3329 . 3330) (nil fontified nil 3328 . 3329) (nil fontified nil 3327 . 3328) (nil fontified nil 3326 . 3327) (nil fontified nil 3316 . 3326) (nil fontified nil 3315 . 3316) (nil fontified nil 3314 . 3315) (nil fontified nil 3313 . 3314) (nil fontified nil 3304 . 3313) (nil fontified nil 3300 . 3304) (nil fontified nil 3299 . 3300) (nil fontified nil 3298 . 3299) (nil fontified nil 3297 . 3298) (nil fontified nil 3290 . 3297) (nil fontified nil 3289 . 3290) (nil fontified nil 3288 . 3289) (nil fontified nil 3287 . 3288) (nil fontified nil 3286 . 3287) (nil fontified nil 3285 . 3286) (nil fontified nil 3284 . 3285) (nil fontified nil 3283 . 3284) (nil fontified nil 3282 . 3283) (nil fontified nil 3281 . 3282) (nil fontified nil 3280 . 3281) (nil fontified nil 3279 . 3280) (nil fontified nil 3278 . 3279) (nil fontified nil 3277 . 3278) (nil fontified nil 3276 . 3277) (nil fontified nil 3275 . 3276) (nil fontified nil 3274 . 3275) (nil fontified nil 3269 . 3274) (nil fontified nil 3268 . 3269) (nil fontified nil 3267 . 3268) (nil fontified nil 3266 . 3267) (nil fontified nil 3256 . 3266) (nil fontified nil 3255 . 3256) (nil fontified nil 3254 . 3255) (nil fontified nil 3253 . 3254) (nil fontified nil 3248 . 3253) (nil fontified nil 3244 . 3248) (nil fontified nil 3243 . 3244) (nil fontified nil 3242 . 3243) (nil fontified nil 3241 . 3242) (nil fontified nil 3240 . 3241) (nil fontified nil 3239 . 3240) (nil fontified nil 3238 . 3239) (nil fontified nil 3237 . 3238) (nil fontified nil 3236 . 3237) (nil fontified nil 3235 . 3236) (nil fontified nil 3234 . 3235) (nil fontified nil 3233 . 3234) (nil fontified nil 3232 . 3233) (nil fontified nil 3231 . 3232) (nil fontified nil 3230 . 3231) (nil fontified nil 3229 . 3230) (nil fontified nil 3228 . 3229) (nil fontified nil 3227 . 3228) (nil fontified nil 3226 . 3227) (nil fontified nil 3225 . 3226) (nil fontified nil 3224 . 3225) (nil fontified nil 3223 . 3224) (nil fontified nil 3222 . 3223) (nil fontified nil 3221 . 3222) (nil fontified nil 3208 . 3221) (nil fontified nil 3207 . 3208) (nil fontified nil 3206 . 3207) (nil fontified nil 3205 . 3206) (nil fontified nil 3197 . 3205) (nil fontified nil 3193 . 3197) (nil fontified nil 3192 . 3193) (nil fontified nil 3191 . 3192) (nil fontified nil 3189 . 3191) (nil fontified nil 3188 . 3189) (nil fontified nil 3187 . 3188) (nil fontified nil 3186 . 3187) (nil fontified nil 3185 . 3186) (nil fontified nil 3184 . 3185) (nil fontified nil 3183 . 3184) (nil fontified nil 3182 . 3183) (nil fontified nil 3181 . 3182) (nil fontified nil 3170 . 3181) (nil fontified nil 3169 . 3170) (nil fontified nil 3164 . 3169) (nil fontified nil 3157 . 3164) (nil fontified nil 3156 . 3157) (nil fontified nil 3155 . 3156) (nil fontified nil 3154 . 3155) (nil fontified nil 3153 . 3154) (nil fontified nil 3152 . 3153) (nil fontified nil 3151 . 3152) (nil fontified nil 3150 . 3151) (nil fontified nil 3149 . 3150) (nil fontified nil 3148 . 3149) (nil fontified nil 3147 . 3148) (nil fontified nil 3146 . 3147) (nil fontified nil 3145 . 3146) (nil fontified nil 3144 . 3145) (nil fontified nil 3143 . 3144) (nil fontified nil 3142 . 3143) (nil fontified nil 3141 . 3142) (nil fontified nil 3140 . 3141) (nil fontified nil 3133 . 3140) (nil fontified nil 3132 . 3133) (nil fontified nil 3131 . 3132) (nil fontified nil 3130 . 3131) (nil fontified nil 3129 . 3130) (nil fontified nil 3128 . 3129) (nil fontified nil 3127 . 3128) (nil fontified nil 3126 . 3127) (nil fontified nil 3125 . 3126) (nil fontified nil 3124 . 3125) (nil fontified nil 3123 . 3124) (nil fontified nil 3122 . 3123) (nil fontified nil 3121 . 3122) (nil fontified nil 3120 . 3121) (nil fontified nil 3119 . 3120) (nil fontified nil 3118 . 3119) (nil fontified nil 3117 . 3118) (nil fontified nil 3116 . 3117) (nil fontified nil 3115 . 3116) (nil fontified nil 3114 . 3115) (nil fontified nil 3113 . 3114) (nil fontified nil 3112 . 3113) (nil fontified nil 3111 . 3112) (nil fontified nil 3110 . 3111) (nil fontified nil 3109 . 3110) (nil fontified nil 3108 . 3109) (nil fontified nil 3107 . 3108) (nil fontified nil 3106 . 3107) (nil fontified nil 3105 . 3106) (nil fontified nil 3104 . 3105) (nil fontified nil 3103 . 3104) (nil fontified nil 3102 . 3103) (nil fontified nil 3101 . 3102) (nil fontified nil 3100 . 3101) (nil fontified nil 3099 . 3100) (nil fontified nil 3098 . 3099) (nil fontified nil 3097 . 3098) (nil fontified nil 3096 . 3097) (nil fontified nil 3095 . 3096) (nil fontified nil 3094 . 3095) (nil fontified nil 3093 . 3094) (nil fontified nil 3092 . 3093) (nil fontified nil 3091 . 3092) (nil fontified nil 3090 . 3091) (nil fontified nil 3089 . 3090) (nil fontified nil 3088 . 3089) (nil fontified nil 3087 . 3088) (nil fontified nil 3086 . 3087) (nil fontified nil 3085 . 3086) (nil fontified nil 3084 . 3085) (nil fontified nil 3083 . 3084) (nil fontified nil 3082 . 3083) (nil fontified nil 3081 . 3082) (nil fontified nil 3080 . 3081) (nil fontified nil 3079 . 3080) (nil fontified nil 3078 . 3079) (nil fontified nil 3077 . 3078) (nil fontified nil 3076 . 3077) (nil fontified nil 3075 . 3076) (nil fontified nil 3074 . 3075) (nil fontified nil 3073 . 3074) (nil fontified nil 3072 . 3073) (nil fontified nil 3071 . 3072) (nil fontified nil 3070 . 3071) (nil fontified nil 3069 . 3070) (nil fontified nil 3068 . 3069) (nil fontified nil 3067 . 3068) (nil fontified nil 3066 . 3067) (nil fontified nil 3065 . 3066) (nil fontified nil 3064 . 3065) (nil fontified nil 3063 . 3064) (nil fontified nil 3062 . 3063) (nil fontified nil 3061 . 3062) (nil fontified nil 3060 . 3061) (nil fontified nil 3059 . 3060) (nil fontified nil 3058 . 3059) (nil fontified nil 3057 . 3058) (nil fontified nil 3056 . 3057) (nil fontified nil 3055 . 3056) (nil fontified nil 3054 . 3055) (nil fontified nil 3053 . 3054) (nil fontified nil 3052 . 3053) (nil fontified nil 3051 . 3052) (nil fontified nil 3050 . 3051) (nil fontified nil 3049 . 3050) (nil fontified nil 3048 . 3049) (nil fontified nil 3047 . 3048) (nil fontified nil 3046 . 3047) (nil fontified nil 3045 . 3046) (nil fontified nil 3044 . 3045) (nil fontified nil 3043 . 3044) (nil fontified nil 3042 . 3043) (nil fontified nil 3041 . 3042) (nil fontified nil 3040 . 3041) (nil fontified nil 3039 . 3040) (nil fontified nil 3038 . 3039) (nil fontified nil 3037 . 3038) (nil fontified nil 3036 . 3037) (nil fontified nil 3035 . 3036) (nil fontified nil 3034 . 3035) (nil fontified nil 3033 . 3034) (nil fontified nil 3032 . 3033) (nil fontified nil 3031 . 3032) (nil fontified nil 3030 . 3031) (nil fontified nil 3029 . 3030) (nil fontified nil 3028 . 3029) (nil fontified nil 3027 . 3028) (nil fontified nil 3020 . 3027) (nil fontified nil 3019 . 3020) (nil fontified nil 3018 . 3019) (nil fontified nil 3017 . 3018) (nil fontified nil 3016 . 3017) (nil fontified nil 3015 . 3016) (nil fontified nil 3014 . 3015) (nil fontified nil 3013 . 3014) (nil fontified nil 3012 . 3013) (nil fontified nil 3011 . 3012) (nil fontified nil 3010 . 3011) (nil fontified nil 3009 . 3010) (nil fontified nil 3008 . 3009) (nil fontified nil 3007 . 3008) (nil fontified nil 3002 . 3007) (nil fontified nil 3001 . 3002) (nil fontified nil 3000 . 3001) (nil fontified nil 2999 . 3000) (nil fontified nil 2998 . 2999) (nil fontified nil 2991 . 2998) (nil fontified nil 2990 . 2991) (nil fontified nil 2989 . 2990) (nil fontified nil 2988 . 2989) (nil fontified nil 2980 . 2988) (nil fontified nil 2979 . 2980) (nil fontified nil 2974 . 2979) (nil fontified nil 2973 . 2974) (nil fontified nil 2963 . 2973) (nil fontified nil 2962 . 2963) (nil fontified nil 2961 . 2962) (nil fontified nil 2960 . 2961) (nil fontified nil 2959 . 2960) (nil fontified nil 2958 . 2959) (nil fontified nil 2957 . 2958) (nil fontified nil 2956 . 2957) (nil fontified nil 2955 . 2956) (nil fontified nil 2954 . 2955) (nil fontified nil 2953 . 2954) (nil fontified nil 2952 . 2953) (nil fontified nil 2951 . 2952) (nil fontified nil 2944 . 2951) (nil fontified nil 2943 . 2944) (nil fontified nil 2942 . 2943) (nil fontified nil 2941 . 2942) (nil fontified nil 2940 . 2941) (nil fontified nil 2939 . 2940) (nil fontified nil 2938 . 2939) (nil fontified nil 2937 . 2938) (nil fontified nil 2936 . 2937) (nil fontified nil 2935 . 2936) (nil fontified nil 2934 . 2935) (nil fontified nil 2933 . 2934) (nil fontified nil 2932 . 2933) (nil fontified nil 2931 . 2932) (nil fontified nil 2930 . 2931) (nil fontified nil 2929 . 2930) (nil fontified nil 2928 . 2929) (nil fontified nil 2927 . 2928) (nil fontified nil 2926 . 2927) (nil fontified nil 2925 . 2926) (nil fontified nil 2924 . 2925) (nil fontified nil 2923 . 2924) (nil fontified nil 2922 . 2923) (nil fontified nil 2921 . 2922) (nil fontified nil 2920 . 2921) (nil fontified nil 2919 . 2920) (nil fontified nil 2918 . 2919) (nil fontified nil 2917 . 2918) (nil fontified nil 2916 . 2917) (nil fontified nil 2915 . 2916) (nil fontified nil 2914 . 2915) (nil fontified nil 2913 . 2914) (nil fontified nil 2912 . 2913) (nil fontified nil 2911 . 2912) (nil fontified nil 2901 . 2911) (nil fontified nil 2900 . 2901) (nil fontified nil 2899 . 2900) (nil fontified nil 2898 . 2899) (nil fontified nil 2897 . 2898) (nil fontified nil 2896 . 2897) (nil fontified nil 2895 . 2896) (nil fontified nil 2894 . 2895) (nil fontified nil 2893 . 2894) (nil fontified nil 2886 . 2893) (nil fontified nil 2885 . 2886) (nil fontified nil 2833 . 2885) (nil fontified nil 2739 . 2833) (nil fontified nil 2735 . 2739) (nil fontified nil 2698 . 2735) (nil fontified nil 2692 . 2698) (nil fontified nil 2684 . 2692) (nil fontified nil 2682 . 2684) (nil fontified nil 2673 . 2682) (nil fontified nil 2669 . 2673) (nil fontified nil 2662 . 2669) (nil fontified nil 2618 . 2662) (nil fontified nil 2612 . 2618) (nil fontified nil 2604 . 2612) (nil fontified nil 2602 . 2604) (2602 . 3527)) nil (25192 11922 560621 64000) 0 nil])
([nil nil ((#("o" 0 1 (c-is-sws t fontified t)) . -2574) (undo-tree-id265 . -1) (#("n" 0 1 (fontified t)) . -2575) (undo-tree-id266 . -1) (#("e" 0 1 (fontified t)) . -2576) (undo-tree-id267 . -1) (#("D" 0 1 (fontified t)) . -2577) (undo-tree-id268 . -1) (#("v" 0 1 (fontified t)) . -2578) (undo-tree-id269 . -1) (#("e" 0 1 (fontified t)) . -2579) (undo-tree-id270 . -1) (#("c" 0 1 (fontified t)) . -2580) (undo-tree-id271 . -1) (#(" " 0 1 (fontified t)) . -2581) (undo-tree-id272 . -1) 2582 (t 25192 11922 583161 400000)) nil (25192 11942 964014 945000) 0 nil])
([nil nil ((2654 . 2657) (#("	      " 0 7 (fontified t)) . -2654) (undo-tree-id281 . -7) 2661 (t 25192 11942 984033 800000)) nil (25192 11967 138761 618000) 0 nil])
([nil nil ((2662 . 2667) (#("		" 0 2 (fontified t)) . 2662) (undo-tree-id280 . -1) 2663) nil (25192 11967 138759 936000) 0 nil])
([nil nil ((2669 . 2676) (#("		  " 0 4 (fontified t)) . 2669) (undo-tree-id279 . -1) 2670) nil (25192 11967 138758 383000) 0 nil])
([nil nil ((2725 . 2732) (#("		  " 0 4 (fontified t)) . 2725) (undo-tree-id278 . -1) 2726) nil (25192 11967 138756 616000) 0 nil])
([nil nil ((2756 . 2761) (#("		" 0 2 (fontified t)) . 2756) (undo-tree-id277 . -1) 2757) nil (25192 11967 138754 643000) 0 nil])
([nil nil ((2763 . 2766) (#("	      " 0 7 (fontified t)) . 2763) (undo-tree-id276 . -5) 2768) nil (25192 11967 138753 44000) 0 nil])
([nil nil ((2787 . 2788)) nil (25192 11967 138751 254000) 0 nil])
([nil nil ((3512 . 3517) (#("		" 0 2 (fontified t)) . 3512) (3486 . 3493) (#("		  " 0 4 (fontified t)) . 3486) (3464 . 3471) (#("		  " 0 4 (fontified t)) . 3464) (3351 . 3358) (#("		  " 0 4 (fontified t)) . 3351) (3322 . 3329) (#("		  " 0 4 (fontified t)) . 3322) (3273 . 3280) (#("		  " 0 4 (fontified t)) . 3273) (3214 . 3221) (#("		  " 0 4 (fontified t)) . 3214) (3160 . 3167) (#("		  " 0 4 (fontified t)) . 3160) (3153 . 3158) (#("		" 0 2 (fontified t)) . 3153) (3125 . 3128) (#("	      " 0 7 (fontified t)) . 3125) (3105 . 3108) (#("	      " 0 7 (fontified t)) . 3105) (2996 . 2999) (#("	      " 0 7 (fontified t)) . 2996) (2971 . 2974) (#("	      " 0 7 (fontified t)) . 2971) (2928 . 2931) (#("	      " 0 7 (fontified t)) . 2928) (2874 . 2877) (#("	      " 0 7 (fontified t)) . 2874) (2825 . 2828) (#("	      " 0 7 (fontified t)) . 2825) (2784 . 2787) (#("	       " 0 3 (fontified t) 3 4 (fontified t) 4 8 (fontified t)) . 2784) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) 3602) nil (25192 11967 138747 102000) 0 nil])
([nil nil ((#("for (int repeat = 0; repeat < REPEATS; ++repeat)" 0 3 (fontified t face font-lock-keyword-face) 3 5 (fontified t) 5 7 (fontified t face font-lock-type-face) 7 8 (fontified t c-type c-decl-id-start face font-lock-type-face) 8 9 (fontified t) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t face font-lock-variable-name-face) 15 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t)) . 3522) (t 25192 11967 160344 400000)) nil (25192 12010 660262 883000) 0 nil])
([nil nil ((3124 . 3128)) nil (25192 12010 660261 773000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3175 . 3176) (nil fontified nil 3175 . 3176) (nil fontified nil 3174 . 3175) (nil fontified nil 3173 . 3174) (nil fontified nil 3172 . 3173) (nil fontified nil 3171 . 3172) (nil fontified nil 3170 . 3171) (nil fontified nil 3169 . 3170) (nil fontified nil 3165 . 3169) (nil fontified nil 3164 . 3165) (nil fontified nil 3163 . 3164) (nil fontified nil 3162 . 3163) (nil fontified nil 3161 . 3162) (nil fontified nil 3160 . 3161) (nil fontified nil 3159 . 3160) (nil fontified nil 3158 . 3159) (nil fontified nil 3155 . 3158) (nil fontified nil 3154 . 3155) (nil fontified nil 3153 . 3154) (nil fontified nil 3152 . 3153) (nil fontified nil 3151 . 3152) (nil fontified nil 3150 . 3151) (nil fontified nil 3149 . 3150) (nil fontified nil 3143 . 3149) (nil fontified nil 3142 . 3143) (nil fontified nil 3141 . 3142) (nil fontified nil 3140 . 3141) (nil fontified nil 3139 . 3140) (nil fontified nil 3138 . 3139) (nil fontified nil 3137 . 3138) (nil fontified nil 3136 . 3137) (nil fontified nil 3135 . 3136) (nil fontified nil 3133 . 3135) (nil fontified nil 3131 . 3133) (nil fontified nil 3128 . 3131) (3128 . 3176)) nil (25192 12010 660260 440000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3131) (undo-tree-id283 . -1) 3132) nil (25192 12010 660256 130000) 0 nil])
([nil nil ((3164 . 3166)) nil (25192 12010 660254 423000) 0 nil])
([nil nil ((#("	  while(game_number < 500)" 0 3 (fontified t) 3 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t)) . 3178)) nil (25192 12010 660253 574000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3177) (undo-tree-id282 . -1) 3178) nil (25192 12010 660250 763000) 0 nil])
([nil nil ((1308 . 1310) (t 25192 12010 681626 800000)) nil (25192 12030 468018 84000) 0 nil])
([nil nil ((#("	      Q[state[0]][state[1]][agent] = Q[state[0]][state[1]][agent] + alpha * (R - Q[state[0]][state[1]][agent]);" 0 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (rear-nonsticky t fontified t)) . 3378) (t 25192 12030 487488 100000)) nil (25192 12145 645375 928000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3377) (undo-tree-id301 . -1) 3378) nil (25192 12145 645375 219000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3307) (undo-tree-id297 . -1) (#("e" 0 1 (fontified t)) . -3308) (undo-tree-id298 . -1) (#("w" 0 1 (fontified t)) . -3309) (undo-tree-id299 . -1) (#("_" 0 1 (fontified t)) . -3310) (undo-tree-id300 . -1) 3311) nil (25192 12145 645373 850000) 0 nil])
([nil nil ((#("game_number++;" 0 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 3381)) nil (25192 12145 645370 945000) 0 nil])
([nil nil ((#("	  game_number = 1;" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 3107)) nil (25192 12145 645370 387000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3106) (undo-tree-id296 . -1) 3107) nil (25192 12145 645369 727000) 0 nil])
([nil nil ((#("	  Q[state[0]][state[1]][agent] = Q[state[0]][state[1]][agent] + alpha * (R - Q[state[0]][state[1]][agent]);" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (rear-nonsticky t fontified t)) . 2998)) nil (25192 12145 645368 445000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2997) (undo-tree-id295 . -1) 2998) nil (25192 12145 645367 892000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -2933) (undo-tree-id291 . -1) (#("e" 0 1 (fontified t)) . -2934) (undo-tree-id292 . -1) (#("w" 0 1 (fontified t)) . -2935) (undo-tree-id293 . -1) (#("_" 0 1 (fontified t)) . -2936) (undo-tree-id294 . -1) 2937) nil (25192 12145 645366 385000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 2982)) nil (25192 12145 645363 158000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 2982) (#("w" 0 1 (fontified t)) . 2982) (#("e" 0 1 (fontified t)) . 2982)) nil (25192 12145 645362 547000) 0 nil])
([nil nil ((2989 . 2993)) nil (25192 12145 645361 971000) 0 nil])
([nil nil ((2993 . 2995)) nil (25192 12145 645361 534000) 0 nil])
([nil nil ((2995 . 2997)) nil (25192 12145 645361 80000) 0 nil])
([nil nil ((2996 . 3004)) nil (25192 12145 645360 638000) 0 nil])
([nil nil ((3005 . 3007)) nil (25192 12145 645360 257000) 0 nil])
([nil nil ((3006 . 3009)) nil (25192 12145 645359 815000) 0 nil])
([nil nil ((3009 . 3010)) nil (25192 12145 645359 414000) 0 nil])
([nil nil ((3011 . 3015)) nil (25192 12145 645359 56000) 0 nil])
([nil nil ((3015 . 3019)) nil (25192 12145 645358 525000) 0 nil])
([nil nil ((3019 . 3020) (#(" x" 0 2 (fontified nil)) . -3019) (3019 . 3021) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 3019) (undo-tree-id290 . -4) (3015 . 3019) 3019) nil (25192 12145 645357 805000) 0 nil])
([nil nil ((3020 . 3022)) nil (25192 12145 645356 290000) 0 nil])
([nil nil ((3022 . 3024)) nil (25192 12145 645355 900000) 0 nil])
([nil nil ((3023 . 3030)) nil (25192 12145 645355 367000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -3028) (undo-tree-id288 . -1) (#("1" 0 1 (fontified t)) . -3029) (undo-tree-id289 . -1) 3030) nil (25192 12145 645354 627000) 0 nil])
([nil nil ((3028 . 3032)) nil (25192 12145 645352 807000) 0 nil])
([nil nil ((3033 . 3035)) nil (25192 12145 645352 399000) 0 nil])
([nil nil ((3034 . 3037)) nil (25192 12145 645351 941000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -3035) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (#("_" 0 1 (fontified t)) . -3036) (undo-tree-id287 . -1) 3037) nil (25192 12145 645350 865000) 0 nil])
([nil nil ((3035 . 3037)) nil (25192 12145 645339 321000) 0 nil])
([nil nil ((3037 . 3038)) nil (25192 12145 645335 591000) 0 nil])
([nil nil ((3081 . 3082) (t 25192 12145 666433 500000)) nil (25192 12265 363990 207000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3081) (undo-tree-id303 . -1) 3082) nil (25192 12265 363989 448000) 0 nil])
([nil nil ((3081 . 3082)) nil (25192 12265 363987 887000) 0 nil])
([nil nil ((3072 . 3073)) nil (25192 12265 363987 445000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -3072) (undo-tree-id302 . -1) 3073) nil (25192 12265 363986 297000) 0 nil])
([nil nil ((3072 . 3073)) nil (25192 12265 363974 140000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 2920) (#("o" 0 1 (fontified t)) . 2920) (#("l" 0 1 (fontified t)) . 2920) (#("i" 0 1 (fontified t)) . 2920) (#("s" 0 1 (fontified t)) . 2920) (#("p" 0 1 (fontified t)) . 2920) (#("e" 0 1 (fontified t)) . 2920) (t 25192 12265 384667 0)) nil (25192 12427 676874 931000) 0 nil])
([nil nil ((2920 . 2921)) nil (25192 12427 676873 890000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 3199) (#("n" 0 1 (fontified t)) . 3199) (#("o" 0 1 (fontified t)) . 3199) (#("l" 0 1 (fontified t)) . 3199) (#("i" 0 1 (fontified t)) . 3199) (#("s" 0 1 (fontified t)) . 3199) (#("p" 0 1 (fontified t)) . 3199) (#("e" 0 1 (fontified t)) . 3199)) nil (25192 12427 676872 994000) 0 nil])
([nil nil ((3199 . 3200)) nil (25192 12427 676871 889000) 0 nil])
([nil nil ((3200 . 3201)) nil (25192 12427 676871 435000) 0 nil])
([nil nil ((#("	  if(R == 1.0){A++;}
	  else if(R == -1.0){B++;}" 0 3 (fontified t) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 25 (fontified t) 25 29 (fontified t face font-lock-keyword-face) 29 30 (fontified t) 30 31 (fontified t face font-lock-keyword-face) 31 32 (fontified t face font-lock-keyword-face) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t)) . 2984) (undo-tree-id320 . -49) (undo-tree-id321 . -49)) nil (25192 12427 676870 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3032 . 3033) (nil fontified nil 3032 . 3033) (nil fontified nil 3031 . 3032) (nil fontified nil 3030 . 3031) (nil fontified nil 3029 . 3030) (nil fontified nil 3028 . 3029) (nil fontified nil 3027 . 3028) (nil fontified nil 3026 . 3027) (nil fontified nil 3025 . 3026) (nil fontified nil 3024 . 3025) (nil fontified nil 3023 . 3024) (nil fontified nil 3022 . 3023) (nil fontified nil 3021 . 3022) (nil fontified nil 3020 . 3021) (nil fontified nil 3019 . 3020) (nil fontified nil 3018 . 3019) (nil fontified nil 3017 . 3018) (nil fontified nil 3016 . 3017) (nil fontified nil 3015 . 3016) (nil fontified nil 3014 . 3015) (nil fontified nil 3013 . 3014) (nil fontified nil 3009 . 3013) (nil fontified nil 3006 . 3009) (nil fontified nil 3005 . 3006) (nil fontified nil 3004 . 3005) (nil fontified nil 3003 . 3004) (nil fontified nil 3002 . 3003) (nil fontified nil 3001 . 3002) (nil fontified nil 3000 . 3001) (nil fontified nil 2999 . 3000) (nil fontified nil 2998 . 2999) (nil fontified nil 2997 . 2998) (nil fontified nil 2996 . 2997) (nil fontified nil 2995 . 2996) (nil fontified nil 2994 . 2995) (nil fontified nil 2993 . 2994) (nil fontified nil 2992 . 2993) (nil fontified nil 2991 . 2992) (nil fontified nil 2990 . 2991) (nil fontified nil 2989 . 2990) (nil fontified nil 2988 . 2989) (nil fontified nil 2987 . 2988) (nil fontified nil 2984 . 2987) (2984 . 3033)) nil (25192 12427 676868 172000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3332 . 3333) (nil fontified nil 3332 . 3333) (nil fontified nil 3331 . 3332) (nil fontified nil 3330 . 3331) (nil fontified nil 3329 . 3330) (nil fontified nil 3328 . 3329) (nil fontified nil 3327 . 3328) (nil fontified nil 3326 . 3327) (nil fontified nil 3325 . 3326) (nil fontified nil 3324 . 3325) (nil fontified nil 3323 . 3324) (nil fontified nil 3322 . 3323) (nil fontified nil 3321 . 3322) (nil fontified nil 3320 . 3321) (nil fontified nil 3319 . 3320) (nil fontified nil 3318 . 3319) (nil fontified nil 3317 . 3318) (nil fontified nil 3316 . 3317) (nil fontified nil 3315 . 3316) (nil fontified nil 3314 . 3315) (nil fontified nil 3313 . 3314) (nil fontified nil 3309 . 3313) (nil fontified nil 3306 . 3309) (nil fontified nil 3305 . 3306) (nil fontified nil 3304 . 3305) (nil fontified nil 3303 . 3304) (nil fontified nil 3302 . 3303) (nil fontified nil 3301 . 3302) (nil fontified nil 3300 . 3301) (nil fontified nil 3299 . 3300) (nil fontified nil 3298 . 3299) (nil fontified nil 3297 . 3298) (nil fontified nil 3296 . 3297) (nil fontified nil 3295 . 3296) (nil fontified nil 3294 . 3295) (nil fontified nil 3293 . 3294) (nil fontified nil 3292 . 3293) (nil fontified nil 3291 . 3292) (nil fontified nil 3290 . 3291) (nil fontified nil 3289 . 3290) (nil fontified nil 3288 . 3289) (nil fontified nil 3287 . 3288) (nil fontified nil 3284 . 3287) (3284 . 3333)) nil (25192 12427 676863 800000) 0 nil])
([nil nil ((3277 . 3284) (#("	      	  " 0 7 (fontified t) 7 10 (fontified t)) . 3277) (undo-tree-id319 . -7) 3303) nil (25192 12427 676860 188000) 0 nil])
([nil nil ((3303 . 3310) (#("	  " 0 3 (fontified t)) . 3303) 3326) nil (25192 12427 676858 772000) 0 nil])
([nil nil ((3334 . 3342)) nil (25192 12427 676858 90000) 0 nil])
([nil nil ((3342 . 3352)) nil (25192 12427 676857 633000) 0 nil])
([nil nil ((3352 . 3353)) nil (25192 12427 676857 240000) 0 nil])
([nil nil ((3033 . 3037)) nil (25192 12427 676856 852000) 0 nil])
([nil nil ((3037 . 3042)) nil (25192 12427 676856 407000) 0 nil])
([nil nil ((3042 . 3047)) nil (25192 12427 676855 964000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3046) (undo-tree-id318 . -1) 3047) nil (25192 12427 676855 308000) 0 nil])
([nil nil ((3046 . 3047)) nil (25192 12427 676854 77000) 0 nil])
([nil nil ((3047 . 3048)) nil (25192 12427 676853 653000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2579) (undo-tree-id305 . -1) (#("s" 0 1 (fontified t)) . -2580) (undo-tree-id306 . -1) (#("t" 0 1 (fontified t)) . -2581) (undo-tree-id307 . -1) (#("." 0 1 (fontified t)) . -2582) (undo-tree-id308 . -1) (#("c" 0 1 (fontified t)) . -2583) (undo-tree-id309 . -1) (#("l" 0 1 (fontified t)) . -2584) (undo-tree-id310 . -1) (#("e" 0 1 (fontified t)) . -2585) (undo-tree-id311 . -1) (#("a" 0 1 (fontified t)) . -2586) (undo-tree-id312 . -1) (#("r" 0 1 (fontified t)) . -2587) (undo-tree-id313 . -1) (#("(" 0 1 (fontified t)) . -2588) (undo-tree-id314 . -1) (#(")" 0 1 (fontified t)) . -2589) (undo-tree-id315 . -1) (undo-tree-id316 . 1) (undo-tree-id317 . -1) 2590) nil (25192 12427 676852 148000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -2578) (undo-tree-id304 . -1) 2579) nil (25192 12427 676841 725000) 0 nil])
([nil nil ((2578 . 2587)) nil (25192 12427 676832 176000) 0 nil])
([nil nil ((1257 . 1258)) nil (25192 12427 676831 612000) 0 nil])
([nil nil ((1258 . 1259)) nil (25192 12427 676830 919000) 0 nil])
([nil nil ((1259 . 1265)) nil (25192 12427 676826 973000) 0 nil])
([nil nil ((3411 . 3414) (#("	    " 0 5 (fontified t)) . 3411) 3417 (t 25192 12427 701672 500000)) nil (25192 12480 462718 327000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -3414) (undo-tree-id334 . -1) 3415) nil (25192 12480 462717 450000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#("	" 0 1 (fontified t)) . 3414) (#("
" 0 1 (fontified t)) . 3414) (#("}" 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#("	" 0 1 (fontified t)) . 3414) (#("
" 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#(" " 0 1 (fontified t)) . 3414) (#("	" 0 1 (fontified t)) . 3414) (#("
" 0 1 (fontified t)) . 3414)) nil (25192 12480 462714 737000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3412) (undo-tree-id332 . -1) (#(" " 0 1 (fontified t)) . -3413) (undo-tree-id333 . -1) 3414) nil (25192 12480 462712 469000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3410) (undo-tree-id322 . -1) (#(" " 0 1 (fontified t)) . -3411) (undo-tree-id323 . -1) (#(" " 0 1 (fontified nil)) . -3412) (undo-tree-id324 . -1) (#(" " 0 1 (fontified nil)) . -3413) (undo-tree-id325 . -1) (#(" " 0 1 (fontified t)) . -3414) (undo-tree-id326 . -1) (#(" " 0 1 (fontified t)) . -3415) (undo-tree-id327 . -1) (#(" " 0 1 (fontified t)) . -3416) (undo-tree-id328 . -1) (#(" " 0 1 (fontified t)) . -3417) (undo-tree-id329 . -1) (#(" " 0 1 (fontified nil)) . -3418) (undo-tree-id330 . -1) (#("	" 0 1 (fontified nil)) . 3419) (undo-tree-id331 . -1) (3411 . 3419) 3412) nil (25192 12480 462706 975000) 0 nil])
([nil nil ((3406 . 3410) (t 25192 12480 485802 900000)) nil (25192 12504 226785 924000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 3410) (#("
" 0 1 (fontified t)) . 3410)) nil (25192 12504 226782 4000) 0 nil])
([nil nil ((#("log_file << counter << \"\\t\" <<  p << \"\\t\" << q << \"\\t\" << avg_reward << \"\\t\" << A/N << \"\\t\" << B/N << \"\\t\" << (N-A-B)/N << endl;" 0 23 (fontified t) 23 27 (fontified t face font-lock-string-face) 27 37 (fontified t) 37 41 (fontified t face font-lock-string-face) 41 50 (fontified t) 50 54 (fontified t face font-lock-string-face) 54 72 (fontified t) 72 76 (fontified t face font-lock-string-face) 76 87 (fontified t) 87 91 (fontified t face font-lock-string-face) 91 96 (fontified t) 96 102 (fontified t) 102 106 (fontified t face font-lock-string-face) 106 108 (fontified t) 108 109 (fontified t) 109 117 (fontified t) 117 128 (fontified t)) . 3436) (undo-tree-id335 . -12) (undo-tree-id336 . -19) (undo-tree-id337 . -58) (undo-tree-id338 . -68) (undo-tree-id339 . -82) (undo-tree-id340 . -83) (undo-tree-id341 . -128) (t 25192 12504 248421 200000)) nil (25192 12519 896990 235000) 0 nil])
([nil nil ((3413 . 3416)) nil (25192 12519 896977 427000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3543 . 3544) (nil fontified nil 3533 . 3544) (nil fontified nil 3525 . 3533) (nil fontified nil 3524 . 3525) (nil fontified nil 3522 . 3524) (nil fontified nil 3518 . 3522) (nil fontified nil 3512 . 3518) (nil fontified nil 3507 . 3512) (nil fontified nil 3503 . 3507) (nil fontified nil 3492 . 3503) (nil fontified nil 3488 . 3492) (nil fontified nil 3470 . 3488) (nil fontified nil 3466 . 3470) (nil fontified nil 3457 . 3466) (nil fontified nil 3453 . 3457) (nil fontified nil 3443 . 3453) (nil fontified nil 3439 . 3443) (nil fontified nil 3416 . 3439) (3416 . 3544)) nil (25192 12519 896973 537000) 0 nil])
([nil nil ((3544 . 3548) (t 25192 12519 919935 500000)) nil (25192 12652 194586 337000) 0 nil])
([nil nil ((3548 . 3558)) nil (25192 12652 194585 786000) 0 nil])
([nil nil ((3558 . 3559)) nil (25192 12652 194585 353000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3555) (undo-tree-id352 . -1) 3556) nil (25192 12652 194584 828000) 0 nil])
([nil nil ((1356 . 1357)) nil (25192 12652 194583 656000) 0 nil])
([nil nil ((1357 . 1358)) nil (25192 12652 194583 182000) 0 nil])
([nil nil ((1358 . 1366)) nil (25192 12652 194582 745000) 0 nil])
([nil nil ((1449 . 1456)) nil (25192 12652 194582 334000) 0 nil])
([nil nil ((1456 . 1467)) nil (25192 12652 194581 944000) 0 nil])
([nil nil ((1467 . 1468)) nil (25192 12652 194581 464000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1466) (undo-tree-id351 . -1) 1467) nil (25192 12652 194580 996000) 0 nil])
([nil nil ((1466 . 1467)) nil (25192 12652 194579 964000) 0 nil])
([nil nil ((3478 . 3479)) nil (25192 12652 194579 545000) 0 nil])
([nil nil ((3479 . 3481)) nil (25192 12652 194579 176000) 0 nil])
([nil nil ((3494 . 3496)) nil (25192 12652 194578 786000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -3495) (undo-tree-id350 . -1) 3496) nil (25192 12652 194577 950000) 0 nil])
([nil nil ((3495 . 3497)) nil (25192 12652 194576 641000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 3509) (#("r" 0 1 (fontified t)) . 3509) (#("a" 0 1 (fontified t)) . 3509) (#("w" 0 1 (fontified t)) . 3509) (#("e" 0 1 (fontified t)) . 3509) (#("r" 0 1 (fontified t)) . 3509) (#("_" 0 1 (fontified t)) . 3509) (#("g" 0 1 (fontified t)) . 3509) (#("v" 0 1 (fontified t)) . 3509) (#("a" 0 1 (fontified t)) . 3509)) nil (25192 12652 194575 642000) 0 nil])
([nil nil ((3509 . 3514)) nil (25192 12652 194574 554000) 0 nil])
([nil nil ((3514 . 3515)) nil (25192 12652 194574 151000) 0 nil])
([nil nil ((3515 . 3519)) nil (25192 12652 194573 708000) 0 nil])
([nil nil ((3515 . 3521) (#("REPE" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -3515) (undo-tree-id349 . -4) 3519) nil (25192 12652 194573 145000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3515) (undo-tree-id343 . -1) (#("e" 0 1 (fontified t)) . -3516) (undo-tree-id344 . -1) (#("p" 0 1 (fontified t)) . -3517) (undo-tree-id345 . -1) (#("e" 0 1 (fontified t)) . -3518) (undo-tree-id346 . -1) (#("a" 0 1 (fontified t)) . -3519) (undo-tree-id347 . -1) (#("t" 0 1 (fontified t)) . -3520) (undo-tree-id348 . -1) 3521) nil (25192 12652 194571 512000) 0 nil])
([nil nil ((3515 . 3522)) nil (25192 12652 194566 810000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -3536) (undo-tree-id342 . -1) 3537) nil (25192 12652 194566 117000) 0 nil])
([nil nil ((3536 . 3543)) nil (25192 12652 194557 125000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . 3557)) nil (25192 12652 194556 660000) 0 nil])
([nil nil ((3557 . 3562)) nil (25192 12652 194556 292000) 0 nil])
([nil nil ((3562 . 3564)) nil (25192 12652 194555 855000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . 3577)) nil (25192 12652 194555 385000) 0 nil])
([nil nil ((3577 . 3584)) nil (25192 12652 194554 873000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . 3590)) nil (25192 12652 194553 944000) 0 nil])
([nil nil ((3590 . 3597)) nil (25192 12652 194550 335000) 0 nil])
([nil nil ((3637 . 3639) (t 25192 12652 217439 0)) nil (25192 12677 186432 417000) 0 nil])
([nil nil ((3639 . 3643)) nil (25192 12677 186431 950000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3642) (undo-tree-id354 . -1) 3643) nil (25192 12677 186431 527000) 0 nil])
([nil nil ((3642 . 3643)) nil (25192 12677 186430 491000) 0 nil])
([nil nil ((3639 . 3647) (#("log_" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -3639) (undo-tree-id353 . -4) 3643) nil (25192 12677 186429 893000) 0 nil])
([nil nil ((3647 . 3653)) nil (25192 12677 186422 588000) 0 nil])
([nil nil ((3653 . 3655)) nil (25192 12677 186422 295000) 0 nil])
([nil nil ((3655 . 3656)) nil (25192 12677 186421 543000) 0 nil])
([nil nil ((3636 . 3639)) nil (25192 12677 186418 473000) 0 nil])
([nil nil ((3662 . 3670) (t 25192 12677 204018 900000)) nil (25192 12702 653084 331000) 0 nil])
([nil nil ((3670 . 3671)) nil (25192 12702 653083 801000) 0 nil])
([nil nil ((#("
  auto start_load_field = chrono::high_resolution_clock::now();
  //defining the variables
  string field_name , path , dataset_name , group_name;
  //list of the fields names
  vector<string> fields_list = {\"11\"};
  //defining the variables of the field
  triDvec UX, UY, A11, A12, A21 , A22;
  triDvec D2UX11 , D2UX12 , D2UX22 , D2UY11 , D2UY12 , D2UY22;
  double a11 , a12 , a21 , a22;
  double d2ux11 , d2ux12 , d2ux22 , d2uy11 , d2uy12 , d2uy22;
  //loading the fields data into memory from the file
  for(int i=0 ; i < (int)fields_list.size() ; ++i){
    field_name = fields_list[i];
    path = make_path(field_name , \"uxs\");
    UX.push_back(read_field(path));
    path = make_path(field_name , \"uys\");
    UY.push_back(read_field(path));
    path = make_path(field_name , \"A11s\");
    A11.push_back(read_field(path));
    path = make_path(field_name , \"A12s\");
    A12.push_back(read_field(path));
    path = make_path(field_name , \"A21s\");
    A21.push_back(read_field(path));
    path = make_path(field_name , \"A22s\");
    A22.push_back(read_field(path));
    path = make_path(field_name , \"d2ux11\");
    D2UX11.push_back(read_field(path));
    path = make_path(field_name , \"d2ux12\");
    D2UX12.push_back(read_field(path));
    path = make_path(field_name , \"d2ux22\");
    D2UX22.push_back(read_field(path));
    path = make_path(field_name , \"d2uy11\");
    D2UY11.push_back(read_field(path));
    path = make_path(field_name , \"d2uy12\");
    D2UY12.push_back(read_field(path));
    path = make_path(field_name , \"d2uy22\");
    D2UY22.push_back(read_field(path));
  }
  
  auto finish_load_field = chrono::high_resolution_clock::now();
  std::chrono::duration<double> elapsed_load_field = finish_load_field - start_load_field;
  log_file << \"Fields load completed in : \" << elapsed_load_field.count() << \" s\\n\";
  //starting the time counter of the code running
  auto start = chrono::high_resolution_clock::now();
  //initializing the state visit counter ns with zero
  //vector<int> ns = {0,0,0,0,0,0,0,0,0};
  //defining the variables
  int state , action , state_new , field_index , episodes_number = 3000 , heaviside;
  double x_0 , y_0  , phi_0 , x , y , phi , t , R;
  double ux , uy ;
  double xmod , ymod;
  double omega_flow;
  oneDvec K (2);
  oneDvec reward_sum_list , reward_list , time_list;
  twoDvec traj ;
  double trSS;
  double gradx , grady;
  double time_diff , init_time;
  double init_y , last_y , delta_y , reward_sum , trSS_sum;
  oneDvec trSS_list , delta_y_list;
  twoDvec Q = twoDzeros(num_state , num_action);
  double state_transitoin_counter;
  field_index = 0;//rand() % 10; //choosing the velocity field randomly
  /********************** episode loop **********************/
  for(int episode=0 ; episode < episodes_number ; episode++)
    {
      alpha = alpha0/(1.0+episode/sigma0);
      if(episode < E_0)	{epsilon = epsilon0*(E_0 - episode)/E_0;}
      else{epsilon = 0;}
      
      auto start_episode = chrono::high_resolution_clock::now();
      //setting the initial values of the variables time = 0 , and position, direction randomly
      t = 0.0;  //time step counter
      init_time = t;
      state_transitoin_counter = 0.0;
      x_0 = (rand()/double (RAND_MAX))*L0;
      y_0 = (rand()/double (RAND_MAX))*L0;
      phi_0 = (rand()/double (RAND_MAX))*(2.0*M_PI);
      init_y = y_0 ; last_y = y_0;

      reward_sum = 0.0; trSS_sum = 0.0;

      
      //test_list.clear();  action_list.clear() ; n_mag_list.clear() ; p_mag_list.clear();
      //state_list.clear() ; sn_list.clear() ; sp_list.clear();

      //traj.push_back({x_0 , y_0});     //make a list to save the trajectory

      //evaluate the A matrix at initial position
      xmod = get_mod(x_0, L0) , ymod = get_mod(y_0, L0);
      a11 = interpolate(xmod,ymod,A11[field_index]);
      a12 = interpolate(xmod,ymod,A12[field_index]);
      a21 = interpolate(xmod,ymod,A21[field_index]);
      a22 = interpolate(xmod,ymod,A22[field_index]);
      //evaluate the velocities at the initial position
      ux = interpolate(xmod,ymod,UX[field_index]);
      uy = interpolate(xmod,ymod,UY[field_index]);
      //evaluate the second order derivatives of the flow
      d2ux11 = interpolate(xmod,ymod,D2UX11[field_index]);
      d2ux12 = interpolate(xmod,ymod,D2UX12[field_index]);
      d2ux22 = interpolate(xmod,ymod,D2UX22[field_index]);
      d2uy11 = interpolate(xmod,ymod,D2UY11[field_index]);
      d2uy12 = interpolate(xmod,ymod,D2UY12[field_index]);
      d2uy22 = interpolate(xmod,ymod,D2UY22[field_index]);
	  
      //getting the state
      gradx = d2ux11 + 0.5*(d2uy12+d2ux22);
      grady = d2uy22 + 0.5*(d2ux12+d2uy11);
      trSS = a11*a11 + 0.5*(a12+a21)*(a12+a21) + a22*a22;
      state = GET_STATE(gradx , trSS);
      state_new = state;
      omega_flow = (a21-a12)/4;
      //ns[state]++;
      //evaluation of action and preferred direction
      action = GET_ACTION(Q[state],epsilon);//choose action form the Q-matrix
      //action_list.push_back(action);            //save the action history
      K = PREF_DIR(action);                     //choose a preferred direction
      v_s = PREF_VS(action);
      /********************** time step loop **********************/
      while(t < T)
	{
	  while(state_new == state)
	    {
	      x = x_0 + dt*(ux + v_s*cos(phi_0)) + dist(generator)*trans_noise;
	      y = y_0 + dt*(uy + v_s*sin(phi_0)) +  dist(generator)*trans_noise;
	      phi = phi_0 + dt*(omega_flow/2 + (omega_s * (-K[0]*y + K[1]*x))) +  dist(generator)*rot_noise;
	    
	      //saving the trajectory into traj list
	      //traj.push_back({x , y});
	      //updating the position, direction, strain, and OMEGA
	      x_0 = x ; y_0  = y ; phi_0 = phi;
	      
	      //evaluating the components of A matrix at new position
	      xmod = get_mod(x, L0) , ymod = get_mod(y, L0);
	      a11 = interpolate(xmod,ymod,A11[field_index]);
	      a12 = interpolate(xmod,ymod,A12[field_index]);
	      a21 = interpolate(xmod,ymod,A21[field_index]);
	      a22 = interpolate(xmod,ymod,A22[field_index]);
	      //evaluate the velocities at the initial position
	      ux = interpolate(xmod,ymod,UX[field_index]);
	      uy = interpolate(xmod,ymod,UY[field_index]);
	      //evaluate the second order derivatives of the flow
	      d2ux11 = interpolate(xmod,ymod,D2UX11[field_index]);
	      d2ux12 = interpolate(xmod,ymod,D2UX12[field_index]);
	      d2ux22 = interpolate(xmod,ymod,D2UX22[field_index]);
	      d2uy11 = interpolate(xmod,ymod,D2UY11[field_index]);
	      d2uy12 = interpolate(xmod,ymod,D2UY12[field_index]);
	      d2uy22 = interpolate(xmod,ymod,D2UY22[field_index]);
	      
	      omega_flow = (a21-a12)/4;
	      //getting the state
	      gradx = d2ux11 + 0.5*(d2uy12+d2ux22);
	      grady = d2uy22 + 0.5*(d2ux12+d2uy11);
	      trSS = a11*a11 + 0.5*(a12+a21)*(a12+a21) + a22*a22;
	      state_new = GET_STATE(gradx , trSS);
	  
	      t += dt;
	      if(t>T){break;}
	    }
	  //Calculating reward
	  delta_y = y - last_y;
	  time_diff = t - init_time;
	  heaviside = state_new/5;
	  R = -1.0*beta*heaviside + (1.0 - beta)*(delta_y)/(time_diff*vs);
	  if(t > steady_T)
	    {
	      trSS_sum += trSS/18.0;
	      state_transitoin_counter++;
	      // update the Q-matrix
	      Q[state][action] += alpha*(R + gama * (*max_element(Q[state_new].begin() , Q[state_new].end())) -
					 Q[state][action]);
	      reward_sum += R;
	    }
	  //Updating the state and action
	  state = state_new;
	  action = GET_ACTION(Q[state], epsilon);   //choose action form the Q-matrix
	  K = PREF_DIR(action);                     //choose a prefered direction
	  v_s = PREF_VS(action);
	  last_y = y;
	  init_time = t;
	}
      //saving the reward_sum of the last episode in the list
      reward_sum_list.push_back(reward_sum/state_transitoin_counter); //to keep track of the total reward per episode
      delta_y_list.push_back((y - init_y)/(vs*T)); // to keep track of the total vertical migration per episode
      //To keep track of total sum over trSS values received as reward per episode
      trSS_list.push_back(trSS_sum/state_transitoin_counter);
      //saving Q matrix of the current episode to file
      dataset_name = make_dataset_name(\"/Qs/\" , episode);
      write_data_twoD(Q , dataset_name);
      /*
      if(episode % 1000 == 0){
	dataset_name = make_dataset_name(\"/Episodes/traj\" , episode);
	write_data_twoD(traj , dataset_name);
      }
      */      
      auto finish_episode = chrono::high_resolution_clock::now();
      std::chrono::duration<double> elapsed_episode = finish_episode - start_episode;
      log_file << \"Episode \" << episode << \" is done in : \" << elapsed_episode.count() << \" s\\n\";
      //cout << \"Episode \" << episode << \" is done in : \" << elapsed_episode.count() << \" s\\n\";
    }

  //calculate the elapsed time
  auto finish = chrono::high_resolution_clock::now();
  std::chrono::duration<double> elapsed = finish - start;
  cout << \"Elapsed time: \" << elapsed.count() << \" s\\n\";

  //saving the reward_sum_list into the file
  write_data_oneD(reward_sum_list , \"reward_sum\");
  write_data_oneD(delta_y_list , \"vertical_migration\");
  write_data_oneD(trSS_list , \"trSS_sum\");
  //closing the file and it's components
  group1.close();
  group2.close();
  file.close();
  log_file.close();
  
" 0 1 (fontified t) 1 3 (fontified t) 3 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 7 8 (fontified t) 8 20 (fontified t face font-lock-variable-name-face) 20 24 (fontified t face font-lock-variable-name-face) 24 27 (fontified t) 27 33 (fontified t face font-lock-constant-face) 33 35 (fontified t) 35 56 (fontified t face font-lock-constant-face) 56 65 (fontified t) 65 67 (c-in-sws t c-is-sws t fontified t) 67 68 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 68 69 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 69 92 (c-in-sws t fontified t face font-lock-comment-face) 92 94 (c-is-sws t c-in-sws t fontified t) 94 95 (c-is-sws t fontified t face font-lock-type-face) 95 99 (fontified t face font-lock-type-face) 99 100 (fontified t c-type c-decl-id-start face font-lock-type-face) 100 101 (fontified t) 101 111 (fontified t face font-lock-variable-name-face) 111 112 (fontified t) 112 113 (fontified t c-type c-decl-id-start) 113 114 (fontified t) 114 118 (fontified t face font-lock-variable-name-face) 118 119 (fontified t) 119 120 (fontified t c-type c-decl-id-start) 120 121 (fontified t) 121 133 (fontified t face font-lock-variable-name-face) 133 134 (fontified t) 134 135 (fontified t c-type c-decl-id-start) 135 136 (fontified t) 136 146 (fontified t face font-lock-variable-name-face) 146 148 (fontified t) 148 150 (c-in-sws t c-is-sws t fontified t) 150 151 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 151 152 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 152 177 (c-in-sws t fontified t face font-lock-comment-face) 177 179 (c-is-sws t c-in-sws t fontified t) 179 180 (c-is-sws t fontified t face font-lock-type-face) 180 185 (fontified t face font-lock-type-face) 185 186 (syntax-table (4 . 62) fontified t) 186 192 (fontified t face font-lock-type-face) 192 193 (syntax-table (5 . 60) fontified t c-type c-decl-id-start) 193 194 (fontified t) 194 205 (fontified t face font-lock-variable-name-face) 205 209 (fontified t) 209 213 (fontified t face font-lock-string-face) 213 216 (fontified t) 216 218 (c-in-sws t c-is-sws t fontified t) 218 219 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 219 220 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 220 256 (c-in-sws t fontified t face font-lock-comment-face) 256 258 (c-is-sws t c-in-sws t fontified t) 258 259 (c-is-sws t fontified t face font-lock-type-face) 259 264 (fontified t face font-lock-type-face) 264 265 (fontified t c-type c-decl-id-start face font-lock-type-face) 265 266 (fontified t) 266 267 (fontified t face font-lock-variable-name-face) 267 268 (fontified t face font-lock-variable-name-face) 268 269 (fontified t c-type c-decl-id-start) 269 270 (fontified t) 270 272 (fontified t face font-lock-variable-name-face) 272 273 (fontified t c-type c-decl-id-start) 273 274 (fontified t) 274 277 (fontified t face font-lock-variable-name-face) 277 278 (fontified t c-type c-decl-id-start) 278 279 (fontified t) 279 282 (fontified t face font-lock-variable-name-face) 282 283 (fontified t c-type c-decl-id-start) 283 284 (fontified t) 284 287 (fontified t face font-lock-variable-name-face) 287 288 (fontified t) 288 289 (fontified t c-type c-decl-id-start) 289 290 (fontified t) 290 293 (fontified t face font-lock-variable-name-face) 293 295 (fontified t) 295 297 (fontified t) 297 303 (fontified t face font-lock-type-face) 303 304 (fontified t c-type c-decl-id-start face font-lock-type-face) 304 305 (fontified t) 305 311 (fontified t face font-lock-variable-name-face) 311 312 (fontified t) 312 313 (fontified t c-type c-decl-id-start) 313 314 (fontified t) 314 320 (fontified t face font-lock-variable-name-face) 320 321 (fontified t) 321 322 (fontified t c-type c-decl-id-start) 322 323 (fontified t) 323 324 (fontified t face font-lock-variable-name-face) 324 329 (fontified t face font-lock-variable-name-face) 329 330 (fontified t) 330 331 (fontified t c-type c-decl-id-start) 331 332 (fontified t) 332 338 (fontified t face font-lock-variable-name-face) 338 339 (fontified t) 339 340 (fontified t c-type c-decl-id-start) 340 341 (fontified t) 341 342 (fontified t face font-lock-variable-name-face) 342 343 (fontified t face font-lock-variable-name-face) 343 347 (fontified t face font-lock-variable-name-face) 347 348 (fontified t) 348 349 (fontified t c-type c-decl-id-start) 349 350 (fontified t) 350 356 (fontified t face font-lock-variable-name-face) 356 358 (fontified t) 358 360 (fontified t) 360 365 (fontified t face font-lock-type-face) 365 366 (fontified t c-type c-decl-id-start face font-lock-type-face) 366 367 (fontified t) 367 370 (fontified t face font-lock-variable-name-face) 370 371 (fontified t) 371 372 (fontified t c-type c-decl-id-start) 372 373 (fontified t) 373 376 (fontified t face font-lock-variable-name-face) 376 377 (fontified t) 377 378 (fontified t c-type c-decl-id-start) 378 379 (fontified t) 379 382 (fontified t face font-lock-variable-name-face) 382 383 (fontified t) 383 384 (fontified t c-type c-decl-id-start) 384 385 (fontified t) 385 388 (fontified t face font-lock-variable-name-face) 388 392 (fontified t) 392 397 (fontified t face font-lock-type-face) 397 398 (fontified t c-type c-decl-id-start face font-lock-type-face) 398 399 (fontified t) 399 405 (fontified t face font-lock-variable-name-face) 405 406 (fontified t) 406 407 (fontified t c-type c-decl-id-start) 407 408 (fontified t) 408 409 (fontified t face font-lock-variable-name-face) 409 414 (fontified t face font-lock-variable-name-face) 414 415 (fontified t) 415 416 (fontified t c-type c-decl-id-start) 416 417 (fontified t) 417 423 (fontified t face font-lock-variable-name-face) 423 424 (fontified t) 424 425 (fontified t c-type c-decl-id-start) 425 426 (fontified t) 426 432 (fontified t face font-lock-variable-name-face) 432 433 (fontified t) 433 434 (fontified t c-type c-decl-id-start) 434 435 (fontified t) 435 441 (fontified t face font-lock-variable-name-face) 441 442 (fontified t) 442 443 (fontified t c-type c-decl-id-start) 443 444 (fontified t) 444 450 (fontified t face font-lock-variable-name-face) 450 452 (fontified t) 452 454 (c-in-sws t c-is-sws t fontified t) 454 455 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 455 456 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 456 471 (c-in-sws t fontified t face font-lock-comment-face) 471 485 (c-in-sws t fontified t face font-lock-comment-face) 485 505 (c-in-sws t fontified t face font-lock-comment-face) 505 506 (c-in-sws t fontified t face font-lock-comment-face) 506 508 (c-is-sws t c-in-sws t fontified t) 508 509 (c-is-sws t fontified t face font-lock-keyword-face) 509 510 (fontified t face font-lock-keyword-face) 510 511 (fontified t face font-lock-keyword-face) 511 512 (fontified t) 512 514 (fontified t face font-lock-type-face) 514 515 (fontified t c-type c-decl-id-start face font-lock-type-face) 515 516 (fontified t) 516 517 (fontified t face font-lock-variable-name-face) 517 525 (fontified t) 525 527 (fontified t) 527 530 (fontified t face font-lock-type-face) 530 531 (fontified t) 531 549 (fontified t) 549 558 (fontified t) 558 566 (fontified t) 566 576 (fontified t) 576 590 (fontified t) 590 591 (fontified t) 591 600 (fontified t) 600 625 (fontified t) 625 630 (fontified t face font-lock-string-face) 630 633 (fontified t) 633 682 (fontified t) 682 703 (fontified t) 703 708 (fontified t face font-lock-string-face) 708 709 (fontified t) 709 713 (fontified t) 713 715 (fontified t) 715 747 (fontified t) 747 781 (fontified t) 781 787 (fontified t face font-lock-string-face) 787 861 (fontified t) 861 867 (fontified t face font-lock-string-face) 867 887 (fontified t) 887 905 (fontified t) 905 919 (fontified t) 919 925 (fontified t) 925 941 (fontified t) 941 947 (fontified t face font-lock-string-face) 947 948 (fontified t) 948 952 (fontified t) 952 953 (fontified t) 953 966 (fontified t) 966 985 (fontified t) 985 987 (fontified t) 987 1006 (fontified t) 1006 1020 (fontified t) 1020 1021 (fontified t) 1021 1027 (fontified t face font-lock-string-face) 1027 1028 (fontified t) 1028 1030 (fontified t) 1030 1031 (fontified t) 1031 1035 (fontified t) 1035 1065 (fontified t) 1065 1067 (fontified t) 1067 1084 (fontified t) 1084 1098 (fontified t) 1098 1101 (fontified t) 1101 1109 (fontified t face font-lock-string-face) 1109 1110 (fontified t) 1110 1112 (fontified t) 1112 1140 (fontified t) 1140 1146 (fontified t) 1146 1149 (fontified t) 1149 1152 (fontified t) 1152 1153 (fontified t) 1153 1170 (fontified t) 1170 1186 (fontified t) 1186 1194 (fontified t face font-lock-string-face) 1194 1195 (fontified t) 1195 1197 (fontified t) 1197 1204 (fontified t) 1204 1207 (fontified t) 1207 1215 (fontified t) 1215 1229 (fontified t) 1229 1235 (fontified t) 1235 1237 (fontified t) 1237 1239 (fontified t) 1239 1263 (fontified t) 1263 1264 (fontified t) 1264 1271 (fontified t) 1271 1278 (fontified t face font-lock-string-face) 1278 1279 (fontified t face font-lock-string-face) 1279 1282 (fontified t) 1282 1286 (fontified t) 1286 1301 (fontified t) 1301 1306 (fontified t) 1306 1311 (fontified t) 1311 1313 (fontified t) 1313 1319 (fontified t) 1319 1320 (fontified t) 1320 1321 (fontified t) 1321 1322 (fontified t) 1322 1323 (fontified t) 1323 1325 (fontified t) 1325 1326 (fontified t) 1326 1330 (fontified t) 1330 1331 (fontified t) 1331 1334 (fontified t) 1334 1338 (fontified t) 1338 1344 (fontified t) 1344 1345 (fontified t) 1345 1349 (fontified t) 1349 1356 (fontified t) 1356 1364 (fontified t face font-lock-string-face) 1364 1365 (fontified t) 1365 1367 (fontified t) 1367 1441 (fontified t) 1441 1449 (fontified t face font-lock-string-face) 1449 1452 (fontified t) 1452 1464 (fontified t) 1464 1475 (fontified t) 1475 1478 (fontified t) 1478 1489 (fontified t) 1489 1490 (fontified t) 1490 1492 (fontified t) 1492 1494 (fontified t) 1494 1495 (fontified t) 1495 1498 (fontified t) 1498 1501 (fontified t) 1501 1526 (fontified t) 1526 1534 (face font-lock-string-face fontified t) 1534 1537 (fontified t) 1537 1565 (fontified t) 1565 1574 (fontified t) 1574 1586 (fontified t) 1586 1589 (fontified t face font-lock-keyword-face) 1589 1590 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 1590 1591 (fontified t) 1591 1608 (fontified t face font-lock-variable-name-face) 1608 1611 (fontified t) 1611 1617 (fontified t face font-lock-constant-face) 1617 1619 (fontified t) 1619 1640 (fontified t face font-lock-constant-face) 1640 1651 (fontified t) 1651 1654 (fontified t face font-lock-constant-face) 1654 1656 (fontified t) 1656 1662 (fontified t face font-lock-constant-face) 1662 1664 (fontified t) 1664 1672 (fontified t face font-lock-type-face) 1672 1673 (syntax-table (4 . 62) fontified t) 1673 1679 (fontified t face font-lock-type-face) 1679 1680 (syntax-table (5 . 60) fontified t c-type c-decl-id-start) 1680 1681 (fontified t) 1681 1699 (fontified t face font-lock-variable-name-face) 1699 1754 (fontified t) 1754 1783 (fontified t face font-lock-string-face) 1783 1817 (fontified t) 1817 1823 (fontified t face font-lock-string-face) 1823 1825 (fontified t) 1825 1827 (c-in-sws t c-is-sws t fontified t) 1827 1828 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1828 1829 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1829 1875 (c-in-sws t fontified t face font-lock-comment-face) 1875 1877 (c-is-sws t c-in-sws t fontified t) 1877 1878 (c-is-sws t fontified t face font-lock-keyword-face) 1878 1880 (fontified t face font-lock-keyword-face) 1880 1881 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 1881 1882 (fontified t) 1882 1887 (fontified t face font-lock-variable-name-face) 1887 1890 (fontified t) 1890 1896 (fontified t face font-lock-constant-face) 1896 1898 (fontified t) 1898 1919 (fontified t face font-lock-constant-face) 1919 1928 (fontified t) 1928 1930 (c-in-sws t c-is-sws t fontified t) 1930 1931 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1931 1932 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1932 1982 (c-in-sws t fontified t face font-lock-comment-face) 1982 1984 (c-in-sws t fontified t) 1984 1986 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 1986 2024 (c-in-sws t fontified t face font-lock-comment-face) 2024 2026 (c-in-sws t fontified t) 2026 2028 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2028 2051 (c-in-sws t fontified t face font-lock-comment-face) 2051 2053 (c-is-sws t c-in-sws t fontified t) 2053 2054 (c-is-sws t fontified t face font-lock-type-face) 2054 2055 (fontified t face font-lock-type-face) 2055 2056 (fontified t c-type c-decl-id-start face font-lock-type-face) 2056 2057 (fontified t) 2057 2062 (fontified t face font-lock-variable-name-face) 2062 2063 (fontified t) 2063 2064 (fontified t c-type c-decl-id-start) 2064 2065 (fontified t) 2065 2071 (fontified t face font-lock-variable-name-face) 2071 2072 (fontified t) 2072 2073 (fontified t c-type c-decl-id-start) 2073 2074 (fontified t) 2074 2083 (fontified t face font-lock-variable-name-face) 2083 2084 (fontified t) 2084 2085 (fontified t c-type c-decl-id-start) 2085 2086 (fontified t) 2086 2091 (fontified t face font-lock-variable-name-face) 2091 2097 (fontified t face font-lock-variable-name-face) 2097 2098 (fontified t) 2098 2099 (fontified t c-type c-decl-id-start) 2099 2100 (fontified t) 2100 2115 (fontified t face font-lock-variable-name-face) 2115 2123 (fontified t) 2123 2124 (fontified t c-type c-decl-id-start) 2124 2125 (fontified t) 2125 2134 (fontified t face font-lock-variable-name-face) 2134 2136 (fontified t) 2136 2138 (fontified t) 2138 2143 (fontified t face font-lock-type-face) 2143 2144 (fontified t c-type c-decl-id-start face font-lock-type-face) 2144 2145 (fontified t) 2145 2148 (fontified t face font-lock-variable-name-face) 2148 2149 (fontified t) 2149 2150 (fontified t c-type c-decl-id-start) 2150 2151 (fontified t) 2151 2154 (fontified t face font-lock-variable-name-face) 2154 2156 (fontified t) 2156 2157 (fontified t c-type c-decl-id-start) 2157 2158 (fontified t) 2158 2163 (fontified t face font-lock-variable-name-face) 2163 2164 (fontified t) 2164 2165 (fontified t c-type c-decl-id-start) 2165 2166 (fontified t) 2166 2167 (fontified t face font-lock-variable-name-face) 2167 2168 (fontified t) 2168 2169 (fontified t c-type c-decl-id-start) 2169 2170 (fontified t) 2170 2171 (fontified t face font-lock-variable-name-face) 2171 2172 (fontified t) 2172 2173 (fontified t c-type c-decl-id-start) 2173 2174 (fontified t) 2174 2177 (fontified t face font-lock-variable-name-face) 2177 2178 (fontified t) 2178 2179 (fontified t c-type c-decl-id-start) 2179 2180 (fontified t) 2180 2181 (fontified t face font-lock-variable-name-face) 2181 2182 (fontified t) 2182 2183 (fontified t c-type c-decl-id-start) 2183 2184 (fontified t) 2184 2185 (fontified t face font-lock-variable-name-face) 2185 2189 (fontified t) 2189 2194 (fontified t face font-lock-type-face) 2194 2195 (fontified t c-type c-decl-id-start face font-lock-type-face) 2195 2196 (fontified t) 2196 2198 (fontified t face font-lock-variable-name-face) 2198 2199 (fontified t) 2199 2200 (fontified t c-type c-decl-id-start) 2200 2201 (fontified t) 2201 2203 (fontified t face font-lock-variable-name-face) 2203 2208 (fontified t) 2208 2213 (fontified t face font-lock-type-face) 2213 2214 (fontified t c-type c-decl-id-start face font-lock-type-face) 2214 2215 (fontified t) 2215 2219 (fontified t face font-lock-variable-name-face) 2219 2220 (fontified t) 2220 2221 (fontified t c-type c-decl-id-start) 2221 2222 (fontified t) 2222 2226 (fontified t face font-lock-variable-name-face) 2226 2230 (fontified t) 2230 2235 (fontified t face font-lock-type-face) 2235 2236 (fontified t c-type c-decl-id-start face font-lock-type-face) 2236 2237 (fontified t) 2237 2247 (fontified t face font-lock-variable-name-face) 2247 2251 (fontified t) 2251 2257 (fontified t face font-lock-type-face) 2257 2258 (fontified t c-type c-decl-id-start face font-lock-type-face) 2258 2259 (fontified t) 2259 2260 (fontified t face font-lock-variable-name-face) 2260 2268 (fontified t) 2268 2274 (fontified t face font-lock-type-face) 2274 2275 (fontified t c-type c-decl-id-start face font-lock-type-face) 2275 2276 (fontified t) 2276 2291 (fontified t face font-lock-variable-name-face) 2291 2292 (fontified t) 2292 2293 (fontified t c-type c-decl-id-start) 2293 2294 (fontified t) 2294 2305 (fontified t face font-lock-variable-name-face) 2305 2306 (fontified t) 2306 2307 (fontified t c-type c-decl-id-start) 2307 2308 (fontified t) 2308 2317 (fontified t face font-lock-variable-name-face) 2317 2321 (fontified t) 2321 2327 (fontified t face font-lock-type-face) 2327 2328 (fontified t c-type c-decl-id-start face font-lock-type-face) 2328 2329 (fontified t) 2329 2333 (fontified t face font-lock-variable-name-face) 2333 2338 (fontified t) 2338 2343 (fontified t face font-lock-type-face) 2343 2344 (fontified t c-type c-decl-id-start face font-lock-type-face) 2344 2345 (fontified t) 2345 2349 (fontified t face font-lock-variable-name-face) 2349 2353 (fontified t) 2353 2358 (fontified t face font-lock-type-face) 2358 2359 (fontified t c-type c-decl-id-start face font-lock-type-face) 2359 2360 (fontified t) 2360 2365 (fontified t face font-lock-variable-name-face) 2365 2366 (fontified t) 2366 2367 (fontified t c-type c-decl-id-start) 2367 2368 (fontified t) 2368 2373 (fontified t face font-lock-variable-name-face) 2373 2377 (fontified t) 2377 2382 (fontified t face font-lock-type-face) 2382 2383 (fontified t c-type c-decl-id-start face font-lock-type-face) 2383 2384 (fontified t) 2384 2393 (fontified t face font-lock-variable-name-face) 2393 2394 (fontified t) 2394 2395 (fontified t c-type c-decl-id-start) 2395 2396 (fontified t) 2396 2405 (fontified t face font-lock-variable-name-face) 2405 2409 (fontified t) 2409 2414 (fontified t face font-lock-type-face) 2414 2415 (fontified t c-type c-decl-id-start face font-lock-type-face) 2415 2416 (fontified t) 2416 2422 (fontified t face font-lock-variable-name-face) 2422 2423 (fontified t) 2423 2424 (fontified t c-type c-decl-id-start) 2424 2425 (fontified t) 2425 2431 (fontified t face font-lock-variable-name-face) 2431 2432 (fontified t) 2432 2433 (fontified t c-type c-decl-id-start) 2433 2434 (fontified t) 2434 2441 (fontified t face font-lock-variable-name-face) 2441 2442 (fontified t) 2442 2443 (fontified t c-type c-decl-id-start) 2443 2444 (fontified t) 2444 2454 (fontified t face font-lock-variable-name-face) 2454 2455 (fontified t) 2455 2456 (fontified t c-type c-decl-id-start) 2456 2457 (fontified t) 2457 2465 (fontified t face font-lock-variable-name-face) 2465 2469 (fontified t) 2469 2475 (fontified t face font-lock-type-face) 2475 2476 (fontified t c-type c-decl-id-start face font-lock-type-face) 2476 2477 (fontified t) 2477 2486 (fontified t face font-lock-variable-name-face) 2486 2487 (fontified t) 2487 2488 (fontified t c-type c-decl-id-start) 2488 2489 (fontified t) 2489 2501 (fontified t face font-lock-variable-name-face) 2501 2505 (fontified t) 2505 2511 (fontified t face font-lock-type-face) 2511 2512 (fontified t c-type c-decl-id-start face font-lock-type-face) 2512 2513 (fontified t) 2513 2514 (fontified t face font-lock-variable-name-face) 2514 2554 (fontified t) 2554 2559 (fontified t face font-lock-type-face) 2559 2560 (fontified t c-type c-decl-id-start face font-lock-type-face) 2560 2561 (fontified t) 2561 2567 (fontified t face font-lock-variable-name-face) 2567 2585 (fontified t face font-lock-variable-name-face) 2585 2587 (fontified t) 2587 2605 (fontified t) 2605 2606 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 2606 2607 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2607 2612 (c-in-sws t fontified t face font-lock-comment-face) 2612 2659 (c-in-sws t fontified t face font-lock-comment-face) 2659 2661 (c-in-sws t fontified t) 2661 2685 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2685 2719 (c-in-sws t fontified t face font-lock-comment-face) 2719 2721 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2721 2722 (c-in-sws t fontified t) 2722 2724 (c-is-sws t c-in-sws t fontified t) 2724 2725 (c-is-sws t fontified t face font-lock-keyword-face) 2725 2727 (fontified t face font-lock-keyword-face) 2727 2728 (fontified t) 2728 2730 (fontified t face font-lock-type-face) 2730 2731 (fontified t c-type c-decl-id-start face font-lock-type-face) 2731 2732 (fontified t) 2732 2739 (fontified t face font-lock-variable-name-face) 2739 2782 (fontified t) 2782 2783 (fontified t) 2783 2822 (fontified t) 2822 2832 (fontified t) 2832 2838 (fontified t) 2838 2840 (fontified t face font-lock-keyword-face) 2840 2904 (fontified t) 2904 2908 (fontified t face font-lock-keyword-face) 2908 2936 (fontified t) 2936 2939 (fontified t face font-lock-keyword-face) 2939 2940 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 2940 2941 (fontified t) 2941 2954 (fontified t face font-lock-variable-name-face) 2954 2957 (fontified t) 2957 2963 (fontified t face font-lock-constant-face) 2963 2965 (fontified t) 2965 2986 (fontified t face font-lock-constant-face) 2986 2995 (fontified t) 2995 3001 (c-in-sws t c-is-sws t fontified t) 3001 3002 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3002 3003 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3003 3037 (c-in-sws t fontified t face font-lock-comment-face) 3037 3074 (c-in-sws t face font-lock-comment-face fontified t) 3074 3090 (c-in-sws t face font-lock-comment-face fontified t) 3090 3091 (face font-lock-comment-face fontified t c-in-sws t) 3091 3097 (c-is-sws t c-in-sws t fontified t) 3097 3098 (c-is-sws t fontified t) 3098 3105 (fontified t) 3105 3107 (c-in-sws t c-is-sws t fontified t) 3107 3108 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3108 3109 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3109 3127 (c-in-sws t fontified t face font-lock-comment-face) 3127 3133 (c-is-sws t c-in-sws t fontified t) 3133 3134 (c-is-sws t fontified t) 3134 3206 (fontified t) 3206 3212 (fontified t face font-lock-type-face) 3212 3249 (fontified t) 3249 3255 (fontified t face font-lock-type-face) 3255 3294 (fontified t) 3294 3300 (fontified t face font-lock-type-face) 3300 3409 (fontified t) 3409 3415 (c-in-sws t c-is-sws t fontified t) 3415 3416 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3416 3417 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3417 3500 (c-in-sws t fontified t face font-lock-comment-face) 3500 3506 (c-in-sws t fontified t) 3506 3508 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3508 3564 (c-in-sws t fontified t face font-lock-comment-face) 3564 3571 (c-in-sws t fontified t) 3571 3573 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3573 3643 (c-in-sws t fontified t face font-lock-comment-face) 3643 3650 (c-in-sws t fontified t) 3650 3652 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3652 3694 (c-in-sws t fontified t face font-lock-comment-face) 3694 3700 (c-is-sws t c-in-sws t fontified t) 3700 3701 (c-is-sws t fontified t) 3701 3963 (fontified t) 3963 3969 (c-in-sws t c-is-sws t fontified t) 3969 3970 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3970 3971 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3971 4019 (c-in-sws t fontified t face font-lock-comment-face) 4019 4025 (c-is-sws t c-in-sws t fontified t) 4025 4026 (c-is-sws t fontified t) 4026 4087 (fontified t) 4087 4119 (fontified t) 4119 4121 (fontified t) 4121 4127 (c-in-sws t c-is-sws t fontified t) 4127 4128 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 4128 4129 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 4129 4179 (c-in-sws t fontified t face font-lock-comment-face) 4179 4185 (c-is-sws t c-in-sws t fontified t) 4185 4186 (c-is-sws t fontified t) 4186 4332 (fontified t) 4332 4356 (fontified t) 4356 4537 (fontified t) 4537 4543 (c-in-sws t c-is-sws t fontified t) 4543 4544 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 4544 4545 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 4545 4563 (c-in-sws t fontified t face font-lock-comment-face) 4563 4569 (c-is-sws t c-in-sws t fontified t) 4569 4570 (c-is-sws t fontified t) 4570 4591 (fontified t) 4591 4607 (fontified t) 4607 4805 (fontified t) 4805 4811 (c-in-sws t c-is-sws t fontified t) 4811 4812 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 4812 4813 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 4813 4826 (c-in-sws t fontified t face font-lock-comment-face) 4826 4832 (c-in-sws t fontified t) 4832 4834 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 4834 4879 (c-in-sws t fontified t face font-lock-comment-face) 4879 4885 (c-is-sws t c-in-sws t fontified t) 4885 4886 (c-is-sws t fontified t) 4886 4923 (fontified t) 4923 4924 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 4924 4925 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 4925 4957 (c-in-sws t fontified t face font-lock-comment-face) 4957 4963 (c-in-sws t fontified t) 4963 4965 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 4965 5033 (c-in-sws t fontified t face font-lock-comment-face) 5033 5039 (c-is-sws t c-in-sws t fontified t) 5039 5040 (c-is-sws t fontified t) 5040 5060 (fontified t) 5060 5081 (c-in-sws t c-is-sws t fontified t) 5081 5082 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 5082 5083 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5083 5112 (c-in-sws t fontified t face font-lock-comment-face) 5112 5118 (c-is-sws t c-in-sws t fontified t) 5118 5119 (c-is-sws t fontified t) 5119 5141 (fontified t) 5141 5147 (c-in-sws t c-is-sws t fontified t) 5147 5148 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 5148 5171 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5171 5207 (c-in-sws t fontified t face font-lock-comment-face) 5207 5209 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5209 5210 (c-in-sws t fontified t) 5210 5216 (c-is-sws t c-in-sws t fontified t) 5216 5217 (c-is-sws t fontified t face font-lock-keyword-face) 5217 5221 (fontified t face font-lock-keyword-face) 5221 5235 (fontified t) 5235 5240 (fontified t face font-lock-keyword-face) 5240 5523 (fontified t) 5523 5530 (c-in-sws t c-is-sws t fontified t) 5530 5531 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 5531 5532 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5532 5569 (c-in-sws t fontified t face font-lock-comment-face) 5569 5576 (c-in-sws t fontified t) 5576 5578 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5578 5603 (c-in-sws t fontified t face font-lock-comment-face) 5603 5610 (c-in-sws t fontified t) 5610 5612 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5612 5619 (c-in-sws t fontified t face font-lock-comment-face) 5619 5663 (c-in-sws t fontified t face font-lock-comment-face) 5663 5664 (c-in-sws t fontified t face font-lock-comment-face) 5664 5671 (c-is-sws t c-in-sws t fontified t) 5671 5672 (c-is-sws t fontified t) 5672 5713 (fontified t) 5713 5720 (c-in-sws t c-is-sws t fontified t) 5720 5721 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 5721 5722 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5722 5776 (c-in-sws t fontified t face font-lock-comment-face) 5776 5783 (c-is-sws t c-in-sws t fontified t) 5783 5784 (c-is-sws t fontified t) 5784 5856 (fontified t) 5856 5884 (fontified t) 5884 6046 (fontified t) 6046 6053 (c-in-sws t c-is-sws t fontified t) 6053 6054 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 6054 6055 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6055 6103 (c-in-sws t fontified t face font-lock-comment-face) 6103 6107 (c-is-sws t c-in-sws t fontified t) 6107 6110 (c-is-sws t c-in-sws t fontified t) 6110 6111 (c-is-sws t fontified t) 6111 6155 (fontified t) 6155 6207 (fontified t) 6207 6214 (c-in-sws t c-is-sws t fontified t) 6214 6215 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 6215 6216 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6216 6266 (c-in-sws t fontified t face font-lock-comment-face) 6266 6273 (c-is-sws t c-in-sws t fontified t) 6273 6274 (c-is-sws t fontified t) 6274 6667 (fontified t) 6667 6674 (c-in-sws t c-is-sws t fontified t) 6674 6675 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 6675 6676 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6676 6694 (c-in-sws t fontified t face font-lock-comment-face) 6694 6701 (c-is-sws t c-in-sws t fontified t) 6701 6702 (c-is-sws t fontified t) 6702 6914 (fontified t) 6914 6916 (fontified t face font-lock-keyword-face) 6916 6922 (fontified t) 6922 6927 (fontified t face font-lock-keyword-face) 6927 6937 (fontified t) 6937 6940 (c-in-sws t c-is-sws t fontified t) 6940 6941 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 6941 6942 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6942 6961 (c-in-sws t fontified t face font-lock-comment-face) 6961 6964 (c-is-sws t c-in-sws t fontified t) 6964 6965 (c-is-sws t fontified t) 6965 7115 (fontified t) 7115 7117 (fontified t face font-lock-keyword-face) 7117 7164 (fontified t) 7164 7169 (fontified t) 7169 7204 (fontified t) 7204 7211 (c-in-sws t c-is-sws t fontified t) 7211 7212 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 7212 7214 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7214 7234 (c-in-sws t fontified t face font-lock-comment-face) 7234 7241 (c-is-sws t c-in-sws t fontified t) 7241 7242 (c-is-sws t fontified t) 7242 7384 (fontified t) 7384 7388 (fontified t) 7388 7395 (fontified t) 7395 7398 (c-in-sws t c-is-sws t fontified t) 7398 7399 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 7399 7400 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7400 7430 (c-in-sws t fontified t face font-lock-comment-face) 7430 7433 (c-is-sws t c-in-sws t fontified t) 7433 7434 (c-is-sws t fontified t) 7434 7494 (fontified t) 7494 7497 (c-in-sws t c-is-sws t fontified t) 7497 7498 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 7498 7499 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7499 7531 (c-in-sws t fontified t face font-lock-comment-face) 7531 7534 (c-is-sws t c-in-sws t fontified t) 7534 7535 (c-is-sws t fontified t) 7535 7555 (fontified t) 7555 7576 (c-in-sws t c-is-sws t fontified t) 7576 7577 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 7577 7578 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7578 7606 (c-in-sws t fontified t face font-lock-comment-face) 7606 7609 (c-is-sws t c-in-sws t fontified t) 7609 7610 (c-is-sws t fontified t) 7610 7655 (fontified t) 7655 7665 (fontified t) 7665 7668 (fontified t) 7668 7674 (c-in-sws t c-is-sws t fontified t) 7674 7675 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 7675 7676 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7676 7730 (c-in-sws t fontified t face font-lock-comment-face) 7730 7736 (c-is-sws t c-in-sws t fontified t) 7736 7737 (c-is-sws t fontified t) 7737 7799 (fontified t) 7799 7800 (c-in-sws t c-is-sws t fontified t) 7800 7801 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 7801 7802 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7802 7848 (c-in-sws t fontified t face font-lock-comment-face) 7848 7854 (c-is-sws t c-in-sws t fontified t) 7854 7855 (c-is-sws t fontified t) 7855 7898 (fontified t) 7898 7899 (c-in-sws t c-is-sws t fontified t) 7899 7900 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 7900 7902 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7902 7960 (c-in-sws t fontified t face font-lock-comment-face) 7960 7966 (c-in-sws t fontified t) 7966 7968 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 7968 8043 (c-in-sws t fontified t face font-lock-comment-face) 8043 8049 (c-is-sws t c-in-sws t fontified t) 8049 8050 (c-is-sws t fontified t) 8050 8105 (fontified t) 8105 8111 (c-in-sws t c-is-sws t fontified t) 8111 8112 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 8112 8113 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 8113 8160 (c-in-sws t fontified t face font-lock-comment-face) 8160 8166 (c-is-sws t c-in-sws t fontified t) 8166 8167 (c-is-sws t fontified t) 8167 8199 (fontified t) 8199 8205 (fontified t face font-lock-string-face) 8205 8259 (fontified t) 8259 8265 (c-in-sws t c-is-sws t fontified t) 8265 8266 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 8266 8267 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 8267 8409 (c-in-sws t fontified t face font-lock-comment-face) 8409 8417 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 8417 8424 (c-in-sws t fontified t) 8424 8430 (c-is-sws t c-in-sws t fontified t) 8430 8431 (c-is-sws t fontified t face font-lock-keyword-face) 8431 8433 (fontified t face font-lock-keyword-face) 8433 8434 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 8434 8435 (fontified t) 8435 8449 (fontified t face font-lock-variable-name-face) 8449 8452 (fontified t) 8452 8458 (fontified t face font-lock-constant-face) 8458 8460 (fontified t) 8460 8481 (fontified t face font-lock-constant-face) 8481 8496 (fontified t) 8496 8499 (fontified t face font-lock-constant-face) 8499 8501 (fontified t) 8501 8507 (fontified t face font-lock-constant-face) 8507 8509 (fontified t) 8509 8517 (fontified t face font-lock-type-face) 8517 8518 (syntax-table (4 . 62) fontified t) 8518 8524 (fontified t face font-lock-type-face) 8524 8525 (syntax-table (5 . 60) fontified t c-type c-decl-id-start) 8525 8526 (fontified t) 8526 8541 (fontified t face font-lock-variable-name-face) 8541 8594 (fontified t) 8594 8604 (fontified t face font-lock-string-face) 8604 8619 (fontified t) 8619 8635 (fontified t face font-lock-string-face) 8635 8666 (fontified t) 8666 8669 (fontified t face font-lock-string-face) 8669 8672 (fontified t face font-lock-string-face) 8672 8674 (fontified t) 8674 8680 (fontified t) 8680 8681 (c-is-sws t fontified t face font-lock-comment-delimiter-face) 8681 8682 (fontified t face font-lock-comment-delimiter-face) 8682 8770 (fontified t face font-lock-comment-face) 8770 8774 (fontified t) 8774 8775 (c-is-sws t fontified t) 8775 8777 (fontified t) 8777 8779 (c-in-sws t c-is-sws t fontified t) 8779 8780 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 8780 8781 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 8781 8808 (c-in-sws t fontified t face font-lock-comment-face) 8808 8810 (c-is-sws t c-in-sws t fontified t) 8810 8811 (c-is-sws t fontified t face font-lock-keyword-face) 8811 8813 (fontified t face font-lock-keyword-face) 8813 8814 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 8814 8815 (fontified t) 8815 8821 (fontified t face font-lock-variable-name-face) 8821 8824 (fontified t) 8824 8830 (fontified t face font-lock-constant-face) 8830 8832 (fontified t) 8832 8853 (fontified t face font-lock-constant-face) 8853 8864 (fontified t) 8864 8867 (fontified t face font-lock-constant-face) 8867 8869 (fontified t) 8869 8875 (fontified t face font-lock-constant-face) 8875 8877 (fontified t) 8877 8885 (fontified t face font-lock-type-face) 8885 8886 (syntax-table (4 . 62) fontified t) 8886 8888 (fontified t face font-lock-type-face) 8888 8892 (fontified t face font-lock-type-face) 8892 8893 (syntax-table (5 . 60) fontified t c-type c-decl-id-start) 8893 8894 (fontified t) 8894 8901 (fontified t face font-lock-variable-name-face) 8901 8920 (fontified t) 8920 8930 (fontified t) 8930 8946 (fontified t face font-lock-string-face) 8946 8969 (fontified t) 8969 8975 (fontified t face font-lock-string-face) 8975 8978 (fontified t) 8978 8980 (c-in-sws t c-is-sws t fontified t) 8980 8981 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 8981 8982 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 8982 9023 (c-in-sws t fontified t face font-lock-comment-face) 9023 9025 (c-is-sws t c-in-sws t fontified t) 9025 9026 (c-is-sws t fontified t) 9026 9059 (fontified t) 9059 9071 (fontified t face font-lock-string-face) 9071 9107 (fontified t) 9107 9127 (fontified t face font-lock-string-face) 9127 9160 (fontified t) 9160 9165 (fontified t face font-lock-string-face) 9165 9170 (face font-lock-string-face fontified t) 9170 9173 (fontified t) 9173 9175 (c-in-sws t c-is-sws t fontified t) 9175 9176 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 9176 9177 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 9177 9200 (c-in-sws t fontified t face font-lock-comment-face) 9200 9201 (c-in-sws t fontified t face font-lock-comment-face) 9201 9214 (c-in-sws t fontified t face font-lock-comment-face) 9214 9216 (c-is-sws t c-in-sws t fontified t) 9216 9217 (c-is-sws t fontified t) 9217 9289 (fontified t)) . -3674) (undo-tree-id358 . -7730) (undo-tree-id359 . -9289) (undo-tree-id360 . -602) (undo-tree-id361 . -611) (undo-tree-id362 . -650) (undo-tree-id363 . -660) (undo-tree-id364 . -2057) (undo-tree-id365 . -2062) (undo-tree-id366 . -2184) (undo-tree-id367 . -2185) (undo-tree-id368 . -2513) (undo-tree-id369 . -2514) (undo-tree-id370 . -2527) (undo-tree-id371 . -2536) (undo-tree-id372 . -2539) (undo-tree-id373 . -2549) (undo-tree-id374 . -2803) (undo-tree-id375 . -2809) (undo-tree-id376 . -2823) (undo-tree-id377 . -2829) (undo-tree-id378 . -2851) (undo-tree-id379 . -2854) (undo-tree-id380 . -2867) (undo-tree-id381 . -2875) (undo-tree-id382 . -3225) (undo-tree-id383 . -3227) (undo-tree-id384 . -3707) (undo-tree-id385 . -3714) (undo-tree-id386 . -3763) (undo-tree-id387 . -3774) (undo-tree-id388 . -4723) (undo-tree-id389 . -4732) (undo-tree-id390 . -4766) (undo-tree-id391 . -4771) (undo-tree-id392 . -4906) (undo-tree-id393 . -4907) (undo-tree-id394 . -5043) (undo-tree-id395 . -5051) (undo-tree-id396 . -5118) (undo-tree-id397 . -5121) (undo-tree-id398 . -5124) (undo-tree-id399 . -5131) (undo-tree-id400 . -5226) (undo-tree-id401 . -5227) (undo-tree-id402 . -5251) (undo-tree-id403 . -5252) (undo-tree-id404 . -5254) (undo-tree-id405 . -5259) (undo-tree-id406 . -5254) (undo-tree-id407 . -5259) (undo-tree-id408 . -5254) (undo-tree-id409 . -5259) (undo-tree-id410 . -5254) (undo-tree-id411 . -5259) (undo-tree-id412 . -5254) (undo-tree-id413 . -5259) (undo-tree-id414 . -5254) (undo-tree-id415 . -5259) (undo-tree-id416 . -5254) (undo-tree-id417 . -5259) (undo-tree-id418 . -5254) (undo-tree-id419 . -5259) (undo-tree-id420 . -5254) (undo-tree-id421 . -5259) (undo-tree-id422 . -5254) (undo-tree-id423 . -5259) (undo-tree-id424 . -5254) (undo-tree-id425 . -5259) (undo-tree-id426 . -5254) (undo-tree-id427 . -5259) (undo-tree-id428 . -5254) (undo-tree-id429 . -5259) (undo-tree-id430 . -5254) (undo-tree-id431 . -5259) (undo-tree-id432 . -5254) (undo-tree-id433 . -5259) (undo-tree-id434 . -5254) (undo-tree-id435 . -5259) (undo-tree-id436 . -5254) (undo-tree-id437 . -5259) (undo-tree-id438 . -5254) (undo-tree-id439 . -5259) (undo-tree-id440 . -5254) (undo-tree-id441 . -5259) (undo-tree-id442 . -5254) (undo-tree-id443 . -5259) (undo-tree-id444 . -5254) (undo-tree-id445 . -5259) (undo-tree-id446 . -5254) (undo-tree-id447 . -5259) (undo-tree-id448 . -5254) (undo-tree-id449 . -5259) (undo-tree-id450 . -5254) (undo-tree-id451 . -5259) (undo-tree-id452 . -5254) (undo-tree-id453 . -5259) (undo-tree-id454 . -5254) (undo-tree-id455 . -5259) (undo-tree-id456 . -5254) (undo-tree-id457 . -5259) (undo-tree-id458 . -5254) (undo-tree-id459 . -5259) (undo-tree-id460 . -5254) (undo-tree-id461 . -5259) (undo-tree-id462 . -5254) (undo-tree-id463 . -5259) (undo-tree-id464 . -5254) (undo-tree-id465 . -5259) (undo-tree-id466 . -5254) (undo-tree-id467 . -5259) (undo-tree-id468 . -5254) (undo-tree-id469 . -5259) (undo-tree-id470 . -5254) (undo-tree-id471 . -5259) (undo-tree-id472 . -5254) (undo-tree-id473 . -5259) (undo-tree-id474 . -5254) (undo-tree-id475 . -5259) (undo-tree-id476 . -5254) (undo-tree-id477 . -5259) (undo-tree-id478 . -5254) (undo-tree-id479 . -5259) (undo-tree-id480 . -5254) (undo-tree-id481 . -5259) (undo-tree-id482 . -5254) (undo-tree-id483 . -5259) (undo-tree-id484 . -5254) (undo-tree-id485 . -5259) (undo-tree-id486 . -5254) (undo-tree-id487 . -5259) (undo-tree-id488 . -5254) (undo-tree-id489 . -5259) (undo-tree-id490 . -5254) (undo-tree-id491 . -5259) (undo-tree-id492 . -5254) (undo-tree-id493 . -5259) (undo-tree-id494 . -5254) (undo-tree-id495 . -5259) (undo-tree-id496 . -5254) (undo-tree-id497 . -5259) (undo-tree-id498 . -5254) (undo-tree-id499 . -5259) (undo-tree-id500 . -5254) (undo-tree-id501 . -5259) (undo-tree-id502 . -5254) (undo-tree-id503 . -5259) (undo-tree-id504 . -5254) (undo-tree-id505 . -5259) (undo-tree-id506 . -5254) (undo-tree-id507 . -5259) (undo-tree-id508 . -5254) (undo-tree-id509 . -5259) (undo-tree-id510 . -5254) (undo-tree-id511 . -5259) (undo-tree-id512 . -5254) (undo-tree-id513 . -5259) (undo-tree-id514 . -5254) (undo-tree-id515 . -5259) (undo-tree-id516 . -5254) (undo-tree-id517 . -5259) (undo-tree-id518 . -5254) (undo-tree-id519 . -5259) (undo-tree-id520 . -5254) (undo-tree-id521 . -5259) (undo-tree-id522 . -5254) (undo-tree-id523 . -5259) (undo-tree-id524 . -5254) (undo-tree-id525 . -5259) (undo-tree-id526 . -5254) (undo-tree-id527 . -5259) (undo-tree-id528 . -5254) (undo-tree-id529 . -5259) (undo-tree-id530 . -5254) (undo-tree-id531 . -5259) (undo-tree-id532 . -5254) (undo-tree-id533 . -5259) (undo-tree-id534 . -5254) (undo-tree-id535 . -5259) (undo-tree-id536 . -5285) (undo-tree-id537 . -5287) (undo-tree-id538 . -5317) (undo-tree-id539 . -5326) (undo-tree-id540 . -5312) (undo-tree-id541 . -5316) (undo-tree-id542 . -5328) (undo-tree-id543 . -5339) (undo-tree-id544 . -5456) (undo-tree-id545 . -5463) (undo-tree-id546 . -5506) (undo-tree-id547 . -5515) (undo-tree-id548 . -7056) (undo-tree-id549 . -7060) (undo-tree-id550 . -7107) (undo-tree-id551 . -7109) (undo-tree-id552 . -7122) (undo-tree-id553 . -7130) (undo-tree-id554 . -7242) (undo-tree-id555 . -7243) (undo-tree-id556 . -7272) (undo-tree-id557 . -7276) (undo-tree-id558 . -7346) (undo-tree-id559 . -7347) (undo-tree-id560 . -7441) (undo-tree-id561 . -7450) (undo-tree-id562 . -7476) (undo-tree-id563 . -7477) (undo-tree-id564 . -7891) (undo-tree-id565 . -7893) (undo-tree-id566 . -7894) (undo-tree-id567 . -7895) (undo-tree-id568 . -8181) (undo-tree-id569 . -8198) (undo-tree-id570 . -8224) (undo-tree-id571 . -8239) (undo-tree-id572 . -9025) (undo-tree-id573 . -9040) (undo-tree-id574 . -9216) (undo-tree-id575 . -9222) (undo-tree-id576 . -9234) (undo-tree-id577 . -9240) (undo-tree-id578 . -9252) (undo-tree-id579 . -9256) (undo-tree-id580 . -9289) 12963) nil (25192 12702 653079 457000) 0 nil])
([nil nil ((#("
  return 0;" 0 1 (fontified t) 1 3 (fontified t) 3 9 (fontified t face font-lock-keyword-face) 9 12 (fontified t)) . -3674) (undo-tree-id355 . -12) (undo-tree-id356 . -12) (undo-tree-id357 . -1) 3686) nil (25192 12702 652936 416000) 0 nil])
([nil nil ((#("
void printQ(twoDvec &v)
{
  for(int i =0 ; i < (int) v.size(); i++)
    {
      for(int j=0 ; j < (int)v[i].size();j++)
	{
	  cout << v[i][j] << \"\\t\";
	}
      cout << endl;
    }

}
" 0 1 (fontified t) 1 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 6 (fontified t) 6 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t c-type c-decl-arg-start) 13 20 (fontified t face font-lock-type-face) 20 22 (fontified t) 22 23 (fontified t face font-lock-variable-name-face) 23 29 (fontified t) 29 32 (fontified t face font-lock-keyword-face) 32 33 (fontified t) 33 35 (fontified t face font-lock-type-face) 35 36 (fontified t c-type c-decl-id-start face font-lock-type-face) 36 37 (fontified t) 37 38 (fontified t face font-lock-variable-name-face) 38 49 (fontified t) 49 52 (fontified t face font-lock-type-face) 52 81 (fontified t) 81 84 (fontified t face font-lock-keyword-face) 84 85 (fontified t) 85 87 (fontified t face font-lock-type-face) 87 88 (fontified t c-type c-decl-id-start face font-lock-type-face) 88 89 (fontified t) 89 90 (fontified t face font-lock-variable-name-face) 90 100 (fontified t) 100 103 (fontified t face font-lock-type-face) 103 146 (fontified t) 146 150 (fontified t face font-lock-string-face) 150 184 (fontified t)) . -5677) (undo-tree-id586 . -184) (undo-tree-id587 . -184) 5861 (t 25192 12702 674109 800000)) nil (25192 12719 881792 368000) 0 nil])
([nil nil ((#("
double magnitude(oneDvec &v)
{
  double mag = 0;
  for(int i =0 ; i < (int)v.size(); i++){
    mag += v[i]*v[i];
  }
  return sqrt(mag);
}

oneDvec normalize(oneDvec &v)
{
  double mag = 0;
  mag = magnitude(v);
  oneDvec normal_v;
  for(int i =0 ; i < (int)v.size(); i++){
    normal_v.push_back(v[i]/mag);
  }
  return normal_v;
}
" 0 1 (fontified t) 1 6 (fontified t face font-lock-type-face) 6 7 (fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (fontified t) 8 17 (fontified t face font-lock-function-name-face) 17 18 (fontified t c-type c-decl-arg-start) 18 25 (fontified t face font-lock-type-face) 25 27 (fontified t) 27 28 (fontified t face font-lock-variable-name-face) 28 34 (fontified t) 34 39 (fontified t face font-lock-type-face) 39 40 (fontified t c-type c-decl-id-start face font-lock-type-face) 40 41 (fontified t) 41 44 (fontified t face font-lock-variable-name-face) 44 52 (fontified t) 52 55 (fontified t face font-lock-keyword-face) 55 56 (fontified t) 56 58 (fontified t face font-lock-type-face) 58 59 (fontified t c-type c-decl-id-start face font-lock-type-face) 59 60 (fontified t) 60 61 (fontified t face font-lock-variable-name-face) 61 72 (fontified t) 72 75 (fontified t face font-lock-type-face) 75 120 (fontified t) 120 126 (fontified t face font-lock-keyword-face) 126 141 (fontified t) 141 147 (fontified t face font-lock-type-face) 147 148 (fontified t c-type c-decl-id-start face font-lock-type-face) 148 149 (fontified t) 149 158 (fontified t face font-lock-function-name-face) 158 159 (fontified t c-type c-decl-arg-start) 159 166 (fontified t face font-lock-type-face) 166 168 (fontified t) 168 169 (fontified t face font-lock-variable-name-face) 169 175 (fontified t) 175 180 (fontified t face font-lock-type-face) 180 181 (fontified t c-type c-decl-id-start face font-lock-type-face) 181 182 (fontified t) 182 185 (fontified t face font-lock-variable-name-face) 185 188 (fontified t) 188 191 (fontified t) 191 215 (fontified t) 215 221 (fontified t face font-lock-type-face) 221 222 (fontified t c-type c-decl-id-start face font-lock-type-face) 222 223 (fontified t) 223 231 (fontified t face font-lock-variable-name-face) 231 235 (fontified t) 235 238 (fontified t face font-lock-keyword-face) 238 239 (fontified t) 239 241 (fontified t face font-lock-type-face) 241 242 (fontified t c-type c-decl-id-start face font-lock-type-face) 242 243 (fontified t) 243 244 (fontified t face font-lock-variable-name-face) 244 255 (fontified t) 255 258 (fontified t face font-lock-type-face) 258 315 (fontified t) 315 321 (fontified t face font-lock-keyword-face) 321 334 (fontified t)) . -5678) (undo-tree-id584 . -334) (undo-tree-id585 . -334) 6012) nil (25192 12719 881790 660000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5678)) nil (25192 12719 881789 45000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5676) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) 5677) nil (25192 12719 881786 894000) 0 nil])
([nil nil ((6174 . 6175) (t 25192 12719 900127 300000)) nil (25192 12759 661595 867000) 0 nil])
([nil nil ((#("
double dot_prod(oneDvec &v1 , oneDvec &v2)
{
  double result = 0;
  for(int i = 0 ; i < (int)v1.size() ; i++){
    result += v1[i]*v2[i];
  }
  return result;
}
 
" 0 1 (fontified t) 1 6 (fontified t face font-lock-type-face) 6 7 (fontified t c-type c-decl-id-start face font-lock-type-face) 7 8 (fontified t) 8 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t c-type c-decl-arg-start) 17 24 (fontified t face font-lock-type-face) 24 26 (fontified t) 26 28 (fontified t face font-lock-variable-name-face) 28 29 (fontified t) 29 30 (fontified t c-type c-decl-arg-start) 30 31 (fontified t) 31 38 (fontified t face font-lock-type-face) 38 40 (fontified t) 40 42 (fontified t face font-lock-variable-name-face) 42 48 (fontified t) 48 53 (fontified t face font-lock-type-face) 53 54 (fontified t c-type c-decl-id-start face font-lock-type-face) 54 55 (fontified t) 55 61 (fontified t face font-lock-variable-name-face) 61 69 (fontified t) 69 72 (fontified t face font-lock-keyword-face) 72 73 (fontified t) 73 75 (fontified t face font-lock-type-face) 75 76 (fontified t c-type c-decl-id-start face font-lock-type-face) 76 77 (fontified t) 77 78 (fontified t face font-lock-variable-name-face) 78 90 (fontified t) 90 93 (fontified t face font-lock-type-face) 93 145 (fontified t) 145 151 (fontified t face font-lock-keyword-face) 151 160 (fontified t) 160 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t)) . -6012) (undo-tree-id646 . -164) (undo-tree-id647 . -164) 6176) nil (25192 12759 661595 90000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t face font-lock-comment-face)) . -6326) (undo-tree-id644 . -1) (#("O" 0 1 (c-in-sws t fontified t face font-lock-comment-face)) . -6327) (undo-tree-id645 . -1) 6328) nil (25192 12759 661593 278000) 0 nil])
([nil nil ((6326 . 6330)) nil (25192 12759 661591 350000) 0 nil])
([nil nil ((#("
//STATE EVALUATION
int GET_STATE(double grad_sx , double TrSS){
  int state;
  if(TrSS < trSS_threshold)
    {
      if(grad_sx < -grad_threshold_b){state = 0;}
      else if(grad_sx > grad_threshold_b){state = 4;}
      else
	{
	  if(grad_sx < -grad_threshold_a){state = 1;}
	  else if(grad_sx > grad_threshold_a){state = 3;}
	  else{state = 2;}
	}
    }
  else
    {
      if(grad_sx < -grad_threshold_b){state = 5;}
      else if(grad_sx > grad_threshold_b){state = 9;}
      else
	{
	  if(grad_sx < -grad_threshold_a){state = 6;}
	  else if(grad_sx > grad_threshold_a){state = 8;}
	  else{state = 7;}
	}
    }
  return state;
}
" 0 1 (fontified t) 1 2 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 2 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 20 (c-in-sws t fontified t face font-lock-comment-face) 20 21 (c-is-sws t fontified t face font-lock-type-face) 21 22 (fontified t face font-lock-type-face) 22 23 (fontified t c-type c-decl-id-start face font-lock-type-face) 23 24 (fontified t) 24 33 (fontified t face font-lock-function-name-face) 33 34 (fontified t c-type c-decl-arg-start) 34 40 (fontified t face font-lock-type-face) 40 41 (fontified t) 41 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t) 49 50 (fontified t c-type c-decl-arg-start) 50 51 (fontified t) 51 57 (fontified t face font-lock-type-face) 57 58 (fontified t) 58 62 (fontified t face font-lock-variable-name-face) 62 67 (fontified t) 67 69 (fontified t face font-lock-type-face) 69 70 (fontified t c-type c-decl-id-start face font-lock-type-face) 70 71 (fontified t) 71 76 (fontified t face font-lock-variable-name-face) 76 80 (fontified t) 80 82 (fontified t face font-lock-keyword-face) 82 118 (fontified t) 118 120 (fontified t face font-lock-keyword-face) 120 155 (fontified t) 155 156 (fontified t) 156 162 (fontified t) 162 168 (fontified t) 168 172 (fontified t face font-lock-keyword-face) 172 173 (fontified t) 173 175 (fontified t face font-lock-keyword-face) 175 222 (fontified t) 222 226 (fontified t face font-lock-keyword-face) 226 233 (fontified t) 233 235 (fontified t face font-lock-keyword-face) 235 280 (fontified t) 280 284 (fontified t face font-lock-keyword-face) 284 285 (fontified t) 285 287 (fontified t face font-lock-keyword-face) 287 331 (fontified t) 331 335 (fontified t face font-lock-keyword-face) 335 359 (fontified t) 359 363 (fontified t face font-lock-keyword-face) 363 376 (fontified t) 376 378 (fontified t face font-lock-keyword-face) 378 426 (fontified t) 426 430 (fontified t face font-lock-keyword-face) 430 431 (fontified t) 431 433 (fontified t face font-lock-keyword-face) 433 480 (fontified t) 480 484 (fontified t face font-lock-keyword-face) 484 490 (fontified t) 490 491 (fontified t) 491 493 (fontified t face font-lock-keyword-face) 493 535 (fontified t) 535 538 (fontified t) 538 542 (fontified t face font-lock-keyword-face) 542 543 (fontified t) 543 545 (fontified t face font-lock-keyword-face) 545 551 (fontified t) 551 586 (fontified t) 586 589 (fontified t) 589 593 (fontified t face font-lock-keyword-face) 593 617 (fontified t) 617 623 (fontified t face font-lock-keyword-face) 623 633 (fontified t)) . -6525) (undo-tree-id642 . -633) (undo-tree-id643 . -633) 7158) nil (25192 12759 661590 781000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6524) (undo-tree-id640 . -1) (undo-tree-id641 . -1) 6525) nil (25192 12759 661588 874000) 0 nil])
([nil nil ((#("
// CHOOSING THE PREFERED DIRECTION USING CHOSEN ACTION
oneDvec PREF_DIR(int action){
  oneDvec K;
  switch(action){
  case 0:
    K = {1.0 , 0.0};
    break;
  case 1:
    K = {0.0 , 1.0};
    break;
  case 2:
    K = {-1.0 , 0.0};
    break;
  case 3:
    K = {0.0 , -1.0};
    break;
  case 4:
    K = {0.0 , 0.0};
    break;
  }
  return K;
}


double PREF_VS(int action)
{
  double v;
  if(action == 4){v = 0.0;}
  else{v = vs;}
  return v;
}


//Get the modulus
double get_mod(double x , double L){
  double R;
  if(x>=0){
    R = x - floor(x/L)*L;
  }else {
    x = -x;
    R = L - (x - floor(x/L)*L) ;
  }
  return R;
}


// BIILINEAR INTERPOLATION
double interpolate(double x, double y, twoDvec &f )
{    
  int x0_ind , y0_ind;
  int x1_ind , y1_ind;
  double d1x , d2x , d1y , d2y;
  
  x0_ind =  floor(x/gridspace);
  if(x0_ind == 1023)
    {
      x1_ind = 0;
      d1x = L0 - x;
      d2x = x - grid[x0_ind];
    }
  else
    {
      x1_ind = x0_ind+1;
      d1x = grid[x1_ind] - x;
      d2x = x - grid[x0_ind];
    }

  y0_ind =  floor(y/gridspace);
  if(y0_ind == 1023)
    {
      y1_ind = 0;
      d1y = L0 - y;
      d2y = y - grid[y0_ind];
    }
  else
    {
      y1_ind = y0_ind+1;
      d1y = grid[y1_ind] - y;
      d2y = y - grid[y0_ind];
    }
  
  double fxy1 = (((d1x)/gridspace) * f[x0_ind][y0_ind]) + (((d2x)/gridspace)*f[x1_ind][y0_ind]);
  double fxy2 = (((d1x)/gridspace) * f[x0_ind][y1_ind]) + (((d2x)/gridspace)*f[x1_ind][y1_ind]);

  double fxy = (((d1y)/gridspace) * fxy1) + (((d2y)/gridspace)*fxy2);
  
  return fxy;
}


// S_N CALCULATION
double get_sn(oneDvec &n , double a11 , double a12 , double a21 , double a22){
  double s_n = a11*n[0]*n[0] + n[1]*(a12*n[0] + a21*n[0] + a22*n[1]);
  return s_n;
}




// S_P CALCULATION
double get_sp(oneDvec &n , oneDvec &p , double a11 , double a12 , double a21 , double a22){
  double s_p = a11*n[0]*p[0] + 0.5*(a12+a21)*n[1]*p[0] + 0.5*(a12+a21)*n[0]*p[1] + a22*n[1]*p[1];
  return s_p;
}


string make_path(string field_name , string component){
  stringstream ss;
  string path;
  //ss << \"../../../../../../FLOW/new-flow/\" << field_name << \"-\" << component << \".txt\";
  ss << \"/cephyr/users/navidm/Vera/FLOW/\" << field_name << \"-\" << component << \".txt\";
  path = ss.str();
  return path;
}

string make_dataset_name(string constant_part , int variable_part){
  stringstream ss;
  ss << constant_part << variable_part;
  return ss.str();
}

void write_data_twoD(twoDvec &data , string dataset_name){
  int nrow = data.size();
  int ncol = data[0].size();

  oneDvec dummy;
  for(int i = 0 ; i < nrow ; i++){
    for(int j = 0 ; j < ncol ; j++){
      dummy.push_back(data[i][j]);
    }
  }
  // dataset dimensions
  hsize_t dimsf[2];
  dimsf[0] = nrow;
  dimsf[1] = ncol;
  DataSpace dataspace(2, dimsf);

  DataType datatype(H5::PredType::NATIVE_DOUBLE);
  DataSet dataset = file.createDataSet(dataset_name, datatype, dataspace);

  // dataset.write(vec2d.data(), H5::PredType::NATIVE_DOUBLE);
  dataset.write(&dummy[0], H5::PredType::NATIVE_DOUBLE);

  dataset.close();
  dataspace.close();
  //file.close();

}


void write_data_oneD(oneDvec &data , string dataset_name){
  // dataset dimensions
  hsize_t dimsf[1];
  dimsf[0] = data.size();
  DataSpace dataspace(1, dimsf);

  DataType datatype(H5::PredType::NATIVE_DOUBLE);
  DataSet dataset = file.createDataSet(dataset_name, datatype, dataspace);

  // dataset.write(vec2d.data(), H5::PredType::NATIVE_DOUBLE);
  dataset.write(&data[0], H5::PredType::NATIVE_DOUBLE);

  dataset.close();
  dataspace.close();
  //  file.close();


}

void write_data_oneD_int(vector<int> &data , string dataset_name){
  // dataset dimensions
  hsize_t dimsf[1];
  dimsf[0] = data.size();
  DataSpace dataspace(1, dimsf);

  DataType datatype(H5::PredType::NATIVE_INT32);
  DataSet dataset = file.createDataSet(dataset_name, datatype, dataspace);

  // dataset.write(vec2d.data(), H5::PredType::NATIVE_DOUBLE);
  dataset.write(&data[0], H5::PredType::NATIVE_INT32);

  dataset.close();
  dataspace.close();
  //  file.close();
}




void printing(oneDvec &vec)
{
  for(int i = 0 ; i < (int)vec.size() ; ++i)
    {
      cout << vec[i] << endl ;
    }
}



" 1 2 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 2 4 (c-in-sws t face font-lock-comment-delimiter-face) 4 56 (c-in-sws t face font-lock-comment-face) 56 57 (c-is-sws t face font-lock-type-face) 57 62 (face font-lock-type-face) 62 63 (c-type c-decl-id-start face font-lock-type-face) 64 72 (face font-lock-function-name-face) 72 73 (c-type c-decl-arg-start) 73 76 (face font-lock-type-face) 77 83 (face font-lock-variable-name-face) 88 94 (face font-lock-type-face) 94 95 (c-type c-decl-id-start face font-lock-type-face) 96 97 (face font-lock-variable-name-face) 101 107 (face font-lock-keyword-face) 119 123 (face font-lock-keyword-face) 125 126 (c-type c-decl-end) 152 157 (face font-lock-keyword-face) 161 165 (face font-lock-keyword-face) 167 168 (c-type c-decl-end) 194 199 (face font-lock-keyword-face) 203 207 (face font-lock-keyword-face) 209 210 (c-type c-decl-end) 237 242 (face font-lock-keyword-face) 246 250 (face font-lock-keyword-face) 252 253 (c-type c-decl-end) 280 285 (face font-lock-keyword-face) 289 293 (face font-lock-keyword-face) 295 296 (c-type c-decl-end) 322 327 (face font-lock-keyword-face) 335 341 (face font-lock-keyword-face) 349 354 (face font-lock-type-face) 354 355 (c-type c-decl-id-start face font-lock-type-face) 356 363 (face font-lock-function-name-face) 363 364 (c-type c-decl-arg-start) 364 367 (face font-lock-type-face) 368 374 (face font-lock-variable-name-face) 380 385 (face font-lock-type-face) 385 386 (c-type c-decl-id-start face font-lock-type-face) 387 388 (face font-lock-variable-name-face) 392 394 (face font-lock-keyword-face) 420 424 (face font-lock-keyword-face) 436 442 (face font-lock-keyword-face) 450 451 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 451 452 (c-in-sws t face font-lock-comment-delimiter-face) 452 468 (c-in-sws t face font-lock-comment-face) 468 469 (c-is-sws t face font-lock-type-face) 469 473 (face font-lock-type-face) 473 474 (c-type c-decl-id-start face font-lock-type-face) 475 482 (face font-lock-function-name-face) 482 483 (c-type c-decl-arg-start) 483 489 (face font-lock-type-face) 490 491 (face font-lock-variable-name-face) 492 493 (c-type c-decl-arg-start) 494 500 (face font-lock-type-face) 501 502 (face font-lock-variable-name-face) 507 512 (face font-lock-type-face) 512 513 (c-type c-decl-id-start face font-lock-type-face) 514 515 (face font-lock-variable-name-face) 519 521 (face font-lock-keyword-face) 558 562 (face font-lock-keyword-face) 616 622 (face font-lock-keyword-face) 630 631 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 631 633 (c-in-sws t face font-lock-comment-delimiter-face) 633 657 (c-in-sws t face font-lock-comment-face) 657 658 (c-is-sws t face font-lock-type-face) 658 662 (face font-lock-type-face) 662 663 (c-type c-decl-id-start face font-lock-type-face) 664 675 (face font-lock-function-name-face) 675 676 (c-type c-decl-arg-start) 676 682 (face font-lock-type-face) 683 684 (face font-lock-variable-name-face) 684 685 (c-type c-decl-arg-start) 686 692 (face font-lock-type-face) 693 694 (face font-lock-variable-name-face) 694 695 (c-type c-decl-arg-start) 696 703 (face font-lock-type-face) 705 706 (face font-lock-variable-name-face) 717 719 (face font-lock-type-face) 719 720 (c-type c-decl-id-start face font-lock-type-face) 721 727 (face font-lock-variable-name-face) 728 729 (c-type c-decl-id-start) 730 736 (face font-lock-variable-name-face) 740 742 (face font-lock-type-face) 742 743 (c-type c-decl-id-start face font-lock-type-face) 744 749 (face font-lock-variable-name-face) 749 750 (face font-lock-variable-name-face) 751 752 (c-type c-decl-id-start) 753 759 (face font-lock-variable-name-face) 763 768 (face font-lock-type-face) 768 769 (c-type c-decl-id-start face font-lock-type-face) 770 773 (face font-lock-variable-name-face) 774 775 (c-type c-decl-id-start) 776 779 (face font-lock-variable-name-face) 780 781 (c-type c-decl-id-start) 782 785 (face font-lock-variable-name-face) 786 787 (c-type c-decl-id-start) 788 791 (face font-lock-variable-name-face) 830 832 (face font-lock-keyword-face) 931 935 (face font-lock-keyword-face) 1068 1070 (face font-lock-keyword-face) 1169 1173 (face font-lock-keyword-face) 1276 1281 (face font-lock-type-face) 1281 1282 (c-type c-decl-id-start face font-lock-type-face) 1283 1287 (face font-lock-variable-name-face) 1373 1378 (face font-lock-type-face) 1378 1379 (c-type c-decl-id-start face font-lock-type-face) 1380 1384 (face font-lock-variable-name-face) 1471 1475 (face font-lock-type-face) 1475 1476 (face font-lock-type-face) 1476 1477 (c-type c-decl-id-start face font-lock-type-face) 1478 1481 (face font-lock-variable-name-face) 1544 1550 (face font-lock-keyword-face) 1560 1561 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 1561 1563 (c-in-sws t face font-lock-comment-delimiter-face) 1563 1579 (c-in-sws t face font-lock-comment-face) 1579 1580 (c-is-sws t face font-lock-type-face) 1580 1584 (face font-lock-type-face) 1584 1585 (c-type c-decl-id-start face font-lock-type-face) 1586 1592 (face font-lock-function-name-face) 1592 1593 (c-type c-decl-arg-start) 1593 1600 (face font-lock-type-face) 1602 1603 (face font-lock-variable-name-face) 1604 1605 (c-type c-decl-arg-start) 1606 1612 (face font-lock-type-face) 1613 1616 (face font-lock-variable-name-face) 1617 1618 (c-type c-decl-arg-start) 1619 1625 (face font-lock-type-face) 1626 1629 (face font-lock-variable-name-face) 1630 1631 (c-type c-decl-arg-start) 1632 1638 (face font-lock-type-face) 1639 1642 (face font-lock-variable-name-face) 1643 1644 (c-type c-decl-arg-start) 1645 1651 (face font-lock-type-face) 1652 1655 (face font-lock-variable-name-face) 1660 1665 (face font-lock-type-face) 1665 1666 (c-type c-decl-id-start face font-lock-type-face) 1667 1670 (face font-lock-variable-name-face) 1730 1736 (face font-lock-keyword-face) 1748 1749 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 1749 1751 (c-in-sws t face font-lock-comment-delimiter-face) 1751 1767 (c-in-sws t face font-lock-comment-face) 1767 1768 (c-is-sws t face font-lock-type-face) 1768 1772 (face font-lock-type-face) 1772 1773 (c-type c-decl-id-start face font-lock-type-face) 1774 1780 (face font-lock-function-name-face) 1780 1781 (c-type c-decl-arg-start) 1781 1788 (face font-lock-type-face) 1790 1791 (face font-lock-variable-name-face) 1792 1793 (c-type c-decl-arg-start) 1794 1801 (face font-lock-type-face) 1803 1804 (face font-lock-variable-name-face) 1805 1806 (c-type c-decl-arg-start) 1807 1813 (face font-lock-type-face) 1814 1817 (face font-lock-variable-name-face) 1818 1819 (c-type c-decl-arg-start) 1820 1826 (face font-lock-type-face) 1827 1830 (face font-lock-variable-name-face) 1831 1832 (c-type c-decl-arg-start) 1833 1839 (face font-lock-type-face) 1840 1843 (face font-lock-variable-name-face) 1844 1845 (c-type c-decl-arg-start) 1846 1852 (face font-lock-type-face) 1853 1856 (face font-lock-variable-name-face) 1861 1866 (face font-lock-type-face) 1866 1867 (c-type c-decl-id-start face font-lock-type-face) 1868 1871 (face font-lock-variable-name-face) 1959 1965 (face font-lock-keyword-face) 1975 1980 (face font-lock-type-face) 1980 1981 (c-type c-decl-id-start face font-lock-type-face) 1982 1991 (face font-lock-function-name-face) 1991 1992 (c-type c-decl-arg-start) 1992 1998 (face font-lock-type-face) 1999 2009 (face font-lock-variable-name-face) 2010 2011 (c-type c-decl-arg-start) 2012 2018 (face font-lock-type-face) 2019 2028 (face font-lock-variable-name-face) 2033 2044 (face font-lock-type-face) 2044 2045 (c-type c-decl-id-start face font-lock-type-face) 2046 2048 (face font-lock-variable-name-face) 2052 2057 (face font-lock-type-face) 2057 2058 (c-type c-decl-id-start face font-lock-type-face) 2059 2063 (face font-lock-variable-name-face) 2065 2067 (c-in-sws t c-is-sws t) 2067 2068 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face) 2068 2069 (c-in-sws t face font-lock-comment-delimiter-face) 2069 2155 (c-in-sws t face font-lock-comment-face) 2155 2157 (c-is-sws t c-in-sws t) 2157 2158 (c-is-sws t) 2163 2196 (face font-lock-string-face) 2214 2217 (face font-lock-string-face) 2234 2240 (face font-lock-string-face) 2263 2269 (face font-lock-keyword-face) 2279 2284 (face font-lock-type-face) 2284 2285 (c-type c-decl-id-start face font-lock-type-face) 2286 2303 (face font-lock-function-name-face) 2303 2304 (c-type c-decl-arg-start) 2304 2310 (face font-lock-type-face) 2311 2324 (face font-lock-variable-name-face) 2325 2326 (c-type c-decl-arg-start) 2327 2330 (face font-lock-type-face) 2331 2344 (face font-lock-variable-name-face) 2349 2360 (face font-lock-type-face) 2360 2361 (c-type c-decl-id-start face font-lock-type-face) 2362 2364 (face font-lock-variable-name-face) 2408 2414 (face font-lock-keyword-face) 2428 2431 (face font-lock-type-face) 2431 2432 (c-type c-decl-id-start face font-lock-type-face) 2433 2448 (face font-lock-function-name-face) 2448 2449 (c-type c-decl-arg-start) 2449 2456 (face font-lock-type-face) 2458 2462 (face font-lock-variable-name-face) 2463 2464 (c-type c-decl-arg-start) 2465 2471 (face font-lock-type-face) 2472 2484 (face font-lock-variable-name-face) 2489 2491 (face font-lock-type-face) 2491 2492 (c-type c-decl-id-start face font-lock-type-face) 2493 2497 (face font-lock-variable-name-face) 2515 2517 (face font-lock-type-face) 2517 2518 (c-type c-decl-id-start face font-lock-type-face) 2519 2523 (face font-lock-variable-name-face) 2545 2551 (face font-lock-type-face) 2551 2552 (c-type c-decl-id-start face font-lock-type-face) 2553 2558 (face font-lock-variable-name-face) 2562 2565 (face font-lock-keyword-face) 2566 2568 (face font-lock-type-face) 2568 2569 (c-type c-decl-id-start face font-lock-type-face) 2570 2571 (face font-lock-variable-name-face) 2599 2602 (face font-lock-keyword-face) 2603 2605 (face font-lock-type-face) 2605 2606 (c-type c-decl-id-start face font-lock-type-face) 2607 2608 (face font-lock-variable-name-face) 2677 2679 (c-in-sws t c-is-sws t fontified t) 2679 2680 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 2680 2682 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2682 2701 (c-in-sws t fontified t face font-lock-comment-face) 2701 2703 (c-is-sws t c-in-sws t fontified t) 2703 2704 (c-is-sws t fontified t face font-lock-type-face) 2704 2709 (fontified t face font-lock-type-face) 2709 2710 (fontified t c-type c-decl-id-start face font-lock-type-face) 2710 2711 (fontified t) 2711 2716 (fontified t face font-lock-variable-name-face) 2716 2761 (fontified t) 2761 2769 (fontified t face font-lock-type-face) 2769 2770 (fontified t c-type c-decl-id-start face font-lock-type-face) 2770 2771 (fontified t) 2771 2780 (fontified t face font-lock-variable-name-face) 2780 2782 (fontified t) 2782 2783 (fontified t c-type c-decl-arg-start) 2783 2795 (fontified t) 2795 2802 (fontified t face font-lock-type-face) 2802 2803 (fontified t c-type c-decl-id-start face font-lock-type-face) 2803 2804 (fontified t) 2804 2812 (fontified t face font-lock-variable-name-face) 2812 2813 (fontified t) 2813 2815 (fontified t face font-lock-constant-face) 2815 2817 (fontified t) 2817 2825 (fontified t face font-lock-constant-face) 2825 2845 (fontified t) 2845 2851 (fontified t face font-lock-type-face) 2851 2852 (fontified t c-type c-decl-id-start face font-lock-type-face) 2852 2853 (fontified t) 2853 2860 (fontified t face font-lock-variable-name-face) 2860 2919 (fontified t) 2919 2921 (c-in-sws t c-is-sws t fontified t) 2921 2922 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 2922 2924 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 2924 2982 (c-in-sws t fontified t face font-lock-comment-face) 2982 2984 (c-is-sws t c-in-sws t fontified t) 2984 2985 (c-is-sws t fontified t) 2985 3009 (fontified t) 3009 3011 (fontified t face font-lock-constant-face) 3011 3013 (fontified t) 3013 3021 (fontified t face font-lock-constant-face) 3021 3082 (fontified t) 3082 3084 (fontified t face font-lock-comment-delimiter-face) 3084 3098 (fontified t face font-lock-comment-face) 3098 3103 (fontified t) 3103 3106 (fontified t face font-lock-type-face) 3106 3107 (fontified t c-type c-decl-id-start face font-lock-type-face) 3107 3108 (fontified t) 3108 3123 (fontified t face font-lock-function-name-face) 3123 3124 (fontified t c-type c-decl-arg-start) 3124 3131 (fontified t face font-lock-type-face) 3131 3133 (fontified t) 3133 3137 (fontified t face font-lock-variable-name-face) 3137 3138 (fontified t) 3138 3139 (fontified t c-type c-decl-arg-start) 3139 3140 (fontified t) 3140 3146 (fontified t face font-lock-type-face) 3146 3147 (fontified t) 3147 3159 (fontified t face font-lock-variable-name-face) 3159 3162 (fontified t) 3162 3164 (c-in-sws t c-is-sws t fontified t) 3164 3165 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3165 3167 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3167 3186 (c-in-sws t fontified t face font-lock-comment-face) 3186 3188 (c-is-sws t c-in-sws t fontified t) 3188 3189 (c-is-sws t fontified t face font-lock-type-face) 3189 3194 (fontified t face font-lock-type-face) 3194 3195 (fontified t c-type c-decl-id-start face font-lock-type-face) 3195 3196 (fontified t) 3196 3201 (fontified t face font-lock-variable-name-face) 3201 3234 (fontified t) 3234 3242 (fontified t face font-lock-type-face) 3242 3243 (fontified t c-type c-decl-id-start face font-lock-type-face) 3243 3244 (fontified t) 3244 3253 (fontified t face font-lock-variable-name-face) 3253 3255 (fontified t) 3255 3256 (fontified t c-type c-decl-arg-start) 3256 3268 (fontified t) 3268 3275 (fontified t face font-lock-type-face) 3275 3276 (fontified t c-type c-decl-id-start face font-lock-type-face) 3276 3277 (fontified t) 3277 3285 (fontified t face font-lock-variable-name-face) 3285 3286 (fontified t) 3286 3288 (fontified t face font-lock-constant-face) 3288 3290 (fontified t) 3290 3298 (fontified t face font-lock-constant-face) 3298 3318 (fontified t) 3318 3324 (fontified t face font-lock-type-face) 3324 3325 (fontified t c-type c-decl-id-start face font-lock-type-face) 3325 3326 (fontified t) 3326 3333 (fontified t face font-lock-variable-name-face) 3333 3392 (fontified t) 3392 3394 (c-in-sws t c-is-sws t fontified t) 3394 3395 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3395 3397 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3397 3455 (c-in-sws t fontified t face font-lock-comment-face) 3455 3457 (c-is-sws t c-in-sws t fontified t) 3457 3458 (c-is-sws t fontified t) 3458 3481 (fontified t) 3481 3483 (fontified t face font-lock-constant-face) 3483 3485 (fontified t) 3485 3493 (fontified t face font-lock-constant-face) 3493 3554 (fontified t) 3554 3558 (fontified t face font-lock-comment-delimiter-face) 3558 3572 (fontified t face font-lock-comment-face) 3572 3577 (fontified t) 3577 3580 (fontified t face font-lock-type-face) 3580 3581 (fontified t c-type c-decl-id-start face font-lock-type-face) 3581 3582 (fontified t) 3582 3601 (fontified t face font-lock-function-name-face) 3601 3602 (fontified t c-type c-decl-arg-start) 3602 3608 (fontified t face font-lock-type-face) 3608 3609 (syntax-table (4 . 62) fontified t) 3609 3612 (fontified t face font-lock-type-face) 3612 3613 (syntax-table (5 . 60) fontified t) 3613 3615 (fontified t) 3615 3619 (fontified t face font-lock-variable-name-face) 3619 3620 (fontified t) 3620 3621 (fontified t c-type c-decl-arg-start) 3621 3622 (fontified t) 3622 3628 (fontified t face font-lock-type-face) 3628 3629 (fontified t) 3629 3641 (fontified t face font-lock-variable-name-face) 3641 3644 (fontified t) 3644 3646 (c-in-sws t c-is-sws t fontified t) 3646 3647 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3647 3649 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3649 3668 (c-in-sws t fontified t face font-lock-comment-face) 3668 3670 (c-is-sws t c-in-sws t fontified t) 3670 3671 (c-is-sws t fontified t face font-lock-type-face) 3671 3676 (fontified t face font-lock-type-face) 3676 3677 (fontified t c-type c-decl-id-start face font-lock-type-face) 3677 3678 (fontified t) 3678 3683 (fontified t face font-lock-variable-name-face) 3683 3716 (fontified t) 3716 3724 (fontified t face font-lock-type-face) 3724 3725 (fontified t c-type c-decl-id-start face font-lock-type-face) 3725 3726 (fontified t) 3726 3735 (fontified t face font-lock-variable-name-face) 3735 3737 (fontified t) 3737 3738 (fontified t c-type c-decl-arg-start) 3738 3750 (fontified t) 3750 3757 (fontified t face font-lock-type-face) 3757 3758 (fontified t c-type c-decl-id-start face font-lock-type-face) 3758 3759 (fontified t) 3759 3761 (fontified t face font-lock-variable-name-face) 3761 3767 (fontified t face font-lock-variable-name-face) 3767 3768 (fontified t) 3768 3770 (fontified t face font-lock-constant-face) 3770 3772 (fontified t) 3772 3780 (fontified t face font-lock-constant-face) 3780 3795 (fontified t) 3795 3799 (fontified t) 3799 3805 (fontified t face font-lock-type-face) 3805 3806 (fontified t c-type c-decl-id-start face font-lock-type-face) 3806 3807 (fontified t) 3807 3814 (fontified t face font-lock-variable-name-face) 3814 3873 (fontified t) 3873 3875 (c-in-sws t c-is-sws t fontified t) 3875 3876 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3876 3878 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3878 3936 (c-in-sws t fontified t face font-lock-comment-face) 3936 3938 (c-is-sws t c-in-sws t fontified t) 3938 3939 (c-is-sws t fontified t) 3939 3962 (fontified t) 3962 3964 (fontified t face font-lock-constant-face) 3964 3966 (fontified t) 3966 3974 (fontified t face font-lock-constant-face) 3974 4034 (fontified t) 4034 4038 (fontified t face font-lock-comment-delimiter-face) 4038 4052 (fontified t face font-lock-comment-face) 4052 4058 (fontified t) 4058 4061 (fontified t face font-lock-type-face) 4061 4062 (fontified t c-type c-decl-id-start face font-lock-type-face) 4062 4063 (fontified t) 4063 4071 (fontified t face font-lock-function-name-face) 4071 4072 (fontified t c-type c-decl-arg-start) 4072 4079 (fontified t face font-lock-type-face) 4079 4081 (fontified t) 4081 4084 (fontified t face font-lock-variable-name-face) 4084 4090 (fontified t) 4090 4093 (fontified t face font-lock-keyword-face) 4093 4094 (fontified t) 4094 4096 (fontified t face font-lock-type-face) 4096 4097 (fontified t c-type c-decl-id-start face font-lock-type-face) 4097 4098 (fontified t) 4098 4099 (fontified t face font-lock-variable-name-face) 4099 4111 (fontified t) 4111 4114 (fontified t face font-lock-type-face) 4114 4177 (fontified t) 4177 4178 (fontified t) 4178 4181 (fontified t)) . -7275) (undo-tree-id614 . -2677) (undo-tree-id615 . -4181) (undo-tree-id616 . -429) (undo-tree-id617 . -431) (undo-tree-id618 . -816) (undo-tree-id619 . -825) (undo-tree-id620 . -885) (undo-tree-id621 . -887) (undo-tree-id622 . -909) (undo-tree-id623 . -913) (undo-tree-id624 . -979) (undo-tree-id625 . -983) (undo-tree-id626 . -1123) (undo-tree-id627 . -1125) (undo-tree-id628 . -1147) (undo-tree-id629 . -1151) (undo-tree-id630 . -1217) (undo-tree-id631 . -1221) (undo-tree-id632 . -2863) (undo-tree-id633 . -2867) (undo-tree-id634 . -3336) (undo-tree-id635 . -3340) (undo-tree-id636 . -3817) (undo-tree-id637 . -3821) (undo-tree-id638 . -4181) (undo-tree-id639 . -4181) 11456) nil (25192 12759 661585 355000) 0 nil])
([nil nil (("
" . -7274) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) 7275) nil (25192 12759 661567 496000) 0 nil])
([nil nil ((#("#include <H5Cpp.h>" 0 1 (c-is-sws t face font-lock-preprocessor-face fontified t) 1 8 (face font-lock-preprocessor-face fontified t) 8 9 (fontified t) 9 10 (syntax-table (4 . 62) face font-lock-string-face fontified t) 10 17 (face font-lock-string-face fontified t) 17 18 (syntax-table (5 . 60) face font-lock-string-face fontified t)) . 278) (undo-tree-id5 . -18) (undo-tree-id6 . -18) (t 25192 12759 687428 100000)) nil (25192 12812 306061 234000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t)) . -277) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 278) nil (25192 12812 306058 990000) 0 nil])
([nil nil ((#("using namespace H5;" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 18 (face font-lock-constant-face fontified t) 18 19 (fontified t)) . 323) (undo-tree-id0 . -16) (undo-tree-id1 . -18) (undo-tree-id2 . -19)) nil (25192 12812 306056 571000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 323)) nil (25192 12812 306033 23000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1259) (#("0" 0 1 (fontified t)) . 1259) (t 25192 12812 331859 900000)) nil (25192 13351 505761 979000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1273) (#("0" 0 1 (fontified t)) . 1273)) nil (25192 13351 505757 634000) 0 nil])
([nil nil ((3282 . 3290) (t 25192 13351 530976 300000)) nil (25192 13413 946567 154000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3284) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t)) . -3285) (undo-tree-id11 . -1) (#(" " 0 1 (fontified t)) . -3286) (undo-tree-id12 . -1) (#(" " 0 1 (fontified t)) . -3287) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t)) . -3288) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t)) . -3289) (undo-tree-id15 . -1) 3290) nil (25192 13413 946566 373000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3282) (undo-tree-id0 . -1) (#(" " 0 1 (fontified t)) . -3283) (undo-tree-id1 . -1) (#(" " 0 1 (fontified t)) . -3284) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t)) . -3285) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t)) . -3286) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t)) . -3287) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t)) . -3288) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -3289) (undo-tree-id7 . -1) (#(" " 0 1 (fontified nil)) . -3290) (undo-tree-id8 . -1) (#("	" 0 1 (fontified nil)) . 3291) (undo-tree-id9 . -1) (3283 . 3291) 3284) nil (25192 13413 946562 367000) 0 nil])
([nil nil ((2374 . 2379)) nil (25192 13413 946543 155000) 0 nil])
([nil nil ((2379 . 2384)) nil (25192 13413 946542 568000) 0 nil])
([nil nil ((2384 . 2386)) nil (25192 13413 946542 248000) 0 nil])
([nil nil ((2386 . 2387)) nil (25192 13413 946541 910000) 0 nil])
([nil nil ((2387 . 2389)) nil (25192 13413 946541 616000) 0 nil])
([nil nil ((2389 . 2391)) nil (25192 13413 946541 278000) 0 nil])
([nil nil ((2391 . 2396)) nil (25192 13413 946540 585000) 0 nil])
([nil nil ((2396 . 2397)) nil (25192 13413 946537 468000) 0 nil])
([nil nil ((4343 . 4345) (t 25192 13413 976052 500000)) nil (25192 13612 770737 792000) 0 nil])
([nil nil ((4379 . 4381)) nil (25192 13612 770736 784000) 0 nil])
([nil nil ((4396 . 4398)) nil (25192 13612 770736 312000) 0 nil])
([nil nil ((2507 . 2512)) nil (25192 13612 770735 727000) 0 nil])
([nil nil ((#("cout << R << endl;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 2379) (undo-tree-id105 . -18) (undo-tree-id106 . -18)) nil (25192 13612 770734 761000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2377) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#(" " 0 1 (fontified t)) . -2378) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 2379) nil (25192 13612 770733 30000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2376) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#(" " 0 1 (fontified t)) . -2377) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#(" " 0 1 (fontified t)) . -2378) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#(" " 0 1 (fontified t)) . -2379) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(" " 0 1 (fontified nil)) . -2380) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#(" " 0 1 (fontified t)) . -2381) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#(" " 0 1 (fontified t)) . -2382) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#(" " 0 1 (fontified nil)) . -2383) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("	" 0 1 (fontified nil)) . 2384) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (2376 . 2384) 2377) nil (25192 13612 770729 134000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2374) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#(" " 0 1 (fontified t)) . -2375) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t)) . -2376) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#(" " 0 1 (fontified t)) . -2377) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (fontified t)) . -2378) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#(" " 0 1 (fontified t)) . -2379) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#(" " 0 1 (fontified t)) . -2380) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#(" " 0 1 (fontified t)) . -2381) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#(" " 0 1 (fontified nil)) . -2382) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("	" 0 1 (fontified nil)) . 2383) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (2375 . 2383) 2376) nil (25192 13612 770708 677000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2487) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t)) . -2488) (undo-tree-id39 . -1) 2489) nil (25192 13612 770693 922000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2486) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -2487) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t)) . -2488) (undo-tree-id30 . -1) (#(" " 0 1 (fontified t)) . -2489) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t)) . -2490) (undo-tree-id32 . -1) (#(" " 0 1 (fontified t)) . -2491) (undo-tree-id33 . -1) (#(" " 0 1 (fontified t)) . -2492) (undo-tree-id34 . -1) (#(" " 0 1 (fontified nil)) . -2493) (undo-tree-id35 . -1) (#("	" 0 1 (fontified nil)) . 2494) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (2486 . 2494) 2487) nil (25192 13612 770692 129000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2490) (undo-tree-id23 . -1) (#(" " 0 1 (fontified t)) . -2491) (undo-tree-id24 . -1) (#(" " 0 1 (fontified nil)) . -2492) (undo-tree-id25 . -1) (#("	" 0 1 (fontified nil)) . 2493) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (2485 . 2493) 2486) nil (25192 13612 770685 949000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2484) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t)) . -2485) (undo-tree-id18 . -1) (#(" " 0 1 (fontified nil)) . -2486) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t)) . -2487) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t)) . -2488) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t)) . -2489) (undo-tree-id22 . -1) 2490) nil (25192 13612 770655 163000) 0 nil])
([nil nil ((5505 . 5511) (#("	  " 0 3 (fontified t)) . 5505) (t 25192 13612 791188 300000)) nil (25192 13833 695640 151000) 0 nil])
([nil nil ((5516 . 5517) (#("	    " 0 5 (fontified t)) . 5516)) nil (25192 13833 695639 283000) 0 nil])
([nil nil ((5519 . 5522) (#("	      " 0 1 (fontified t) 1 7 (fontified t)) . 5519) (undo-tree-id109 . -1) 5520) nil (25192 13833 695638 567000) 0 nil])
([nil nil ((5571 . 5574) (#("	      " 0 7 (fontified t)) . 5571) (undo-tree-id108 . -3) 5574) nil (25192 13833 695636 783000) 0 nil])
([nil nil ((5594 . 5595) (#("	    " 0 5 (fontified t)) . 5594) (undo-tree-id107 . -3) 5597) nil (25192 13833 695632 398000) 0 nil])
([nil nil ((7152 . 7155) (t 25192 13833 722865 100000)) nil (25192 13951 996369 536000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1273)) nil (25192 13951 996365 956000) 0 nil])
([nil nil ((3252 . 3260) (t 25192 13952 15240 500000)) nil (25192 13994 771450 110000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3254) (undo-tree-id141 . -1) (#(" " 0 1 (fontified t)) . -3255) (undo-tree-id142 . -1) (#(" " 0 1 (fontified t)) . -3256) (undo-tree-id143 . -1) (#(" " 0 1 (fontified t)) . -3257) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -3258) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t)) . -3259) (undo-tree-id146 . -1) 3260) nil (25192 13994 771449 169000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3252) (undo-tree-id131 . -1) (#(" " 0 1 (fontified t)) . -3253) (undo-tree-id132 . -1) (#(" " 0 1 (fontified t)) . -3254) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t)) . -3255) (undo-tree-id134 . -1) (#(" " 0 1 (fontified t)) . -3256) (undo-tree-id135 . -1) (#(" " 0 1 (fontified t)) . -3257) (undo-tree-id136 . -1) (#(" " 0 1 (fontified t)) . -3258) (undo-tree-id137 . -1) (#(" " 0 1 (fontified t)) . -3259) (undo-tree-id138 . -1) (#(" " 0 1 (fontified nil)) . -3260) (undo-tree-id139 . -1) (#("	" 0 1 (fontified nil)) . 3261) (undo-tree-id140 . -1) (3253 . 3261) 3254) nil (25192 13994 771444 614000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3270) (undo-tree-id127 . -1) (#("e" 0 1 (fontified t)) . -3271) (undo-tree-id128 . -1) (#("w" 0 1 (fontified t)) . -3272) (undo-tree-id129 . -1) (#("_" 0 1 (fontified t)) . -3273) (undo-tree-id130 . -1) 3274) nil (25192 13994 771438 872000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3362)) nil (25192 13994 771436 397000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 3362) (#("e" 0 1 (fontified t)) . 3362) (#("t" 0 1 (fontified t)) . 3362) (#("a" 0 1 (fontified t)) . 3362) (#("t" 0 1 (fontified t)) . 3362) (#("s" 0 1 (fontified t)) . 3362) (#("_" 0 1 (fontified t)) . 3362) (#("w" 0 1 (fontified t)) . 3362) (#("e" 0 1 (fontified t)) . 3362) (#("n" 0 1 (fontified t)) . 3362) (#(" " 0 1 (fontified t)) . 3362) (#("=" 0 1 (fontified t)) . 3362) (#(" " 0 1 (fontified t)) . 3362) (#("e" 0 1 (fontified t)) . 3362) (#("t" 0 1 (fontified nil)) . 3362) (#("a" 0 1 (fontified t)) . 3362) (#("t" 0 1 (fontified t)) . 3362)) nil (25192 13994 771434 886000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -3356) (undo-tree-id121 . -1) (#(" " 0 1 (fontified t)) . -3357) (undo-tree-id122 . -1) (#(" " 0 1 (fontified t)) . -3358) (undo-tree-id123 . -1) (#(" " 0 1 (fontified t)) . -3359) (undo-tree-id124 . -1) (#(" " 0 1 (fontified t)) . -3360) (undo-tree-id125 . -1) (#(" " 0 1 (fontified t)) . -3361) (undo-tree-id126 . -1) 3362) nil (25192 13994 771432 930000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3354) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#(" " 0 1 (fontified t)) . -3355) (undo-tree-id112 . -1) (#(" " 0 1 (fontified t)) . -3356) (undo-tree-id113 . -1) (#(" " 0 1 (fontified t)) . -3357) (undo-tree-id114 . -1) (#(" " 0 1 (fontified t)) . -3358) (undo-tree-id115 . -1) (#(" " 0 1 (fontified t)) . -3359) (undo-tree-id116 . -1) (#(" " 0 1 (fontified t)) . -3360) (undo-tree-id117 . -1) (#(" " 0 1 (fontified t)) . -3361) (undo-tree-id118 . -1) (#(" " 0 1 (fontified nil)) . -3362) (undo-tree-id119 . -1) (#("	" 0 1 (fontified nil)) . 3363) (undo-tree-id120 . -1) (3355 . 3363) 3356) nil (25192 13994 771426 708000) 0 nil])
([nil nil ((1274 . 1276) (t 25192 13994 792749 200000)) nil (25192 14041 506464 693000) 0 nil])
([nil nil ((1259 . 1261) (t 25192 14041 531089 500000)) nil (25192 14045 679583 390000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 1258) (t 25192 14045 702925 500000)) nil (25192 14052 160364 271000) 0 nil])
([nil nil ((1258 . 1259)) nil (25192 14052 160360 631000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1259) (t 25192 14052 181701 800000)) nil (25192 14053 199358 99000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -1258) (undo-tree-id147 . -1) 1259 (t 25192 14053 220302 500000)) nil (25192 14058 165267 602000) 0 nil])
([nil nil ((1258 . 1259)) nil (25192 14058 165257 990000) 0 nil])
([nil nil ((1259 . 1260) (t 25192 14058 187193 800000)) nil (25192 14262 159576 421000) 0 nil])
([nil nil ((1275 . 1276) (t 25192 14262 180202 800000)) nil (25192 14269 72433 603000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1274) (undo-tree-id148 . -1) 1275) nil (25192 14269 72432 639000) 0 nil])
([nil nil ((1274 . 1275)) nil (25192 14269 72422 665000) 0 nil])
([nil nil ((3554 . 3561) (t 25192 14269 94866 400000)) nil (25192 14330 16812 42000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3561)) nil (25192 14330 16811 457000) 0 nil])
([nil nil ((3561 . 3566)) nil (25192 14330 16811 126000) 0 nil])
([nil nil ((3566 . 3568)) nil (25192 14330 16810 816000) 0 nil])
([nil nil ((3571 . 3572) (nil syntax-table nil 3577 . 3578) (nil syntax-table (1) 3569 . 3570) (3570 . 3571) (nil syntax-table nil 3576 . 3577) (nil syntax-table (1) 3569 . 3570) (3568 . 3570)) nil (25192 14330 16810 307000) 0 nil])
([nil nil ((3573 . 3574) (nil syntax-table nil 3579 . 3580) (nil syntax-table (1) 3569 . 3570) (3572 . 3573) (nil syntax-table nil 3578 . 3579) (nil syntax-table (1) 3569 . 3570)) nil (25192 14330 16809 531000) 0 nil])
([nil nil ((3574 . 3575) (nil syntax-table nil 3580 . 3581) (nil syntax-table (1) 3569 . 3570)) nil (25192 14330 16808 563000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face font-lock-string-face)) . -3574) (undo-tree-id150 . -1) (nil syntax-table nil 3581 . 3582) (nil syntax-table (1) 3569 . 3570)) nil (25192 14330 16807 853000) 0 nil])
([nil nil ((3574 . 3576) (nil syntax-table nil 3580 . 3581) (nil syntax-table (1) 3569 . 3570)) nil (25192 14330 16806 625000) 0 nil])
([nil nil ((3576 . 3578)) nil (25192 14330 16806 52000) 0 nil])
([nil nil ((3578 . 3584)) nil (25192 14330 16805 761000) 0 nil])
([nil nil ((3584 . 3586)) nil (25192 14330 16805 477000) 0 nil])
([nil nil ((3586 . 3587)) nil (25192 14330 16804 911000) 0 nil])
([nil nil ((3595 . 3596) (nil syntax-table nil 3601 . 3602) (nil syntax-table (1) 3587 . 3588) (3594 . 3595) (nil syntax-table nil 3600 . 3601) (nil syntax-table (1) 3587 . 3588) (3593 . 3594) (nil syntax-table nil 3599 . 3600) (nil syntax-table (1) 3587 . 3588) (3592 . 3593) (nil syntax-table nil 3598 . 3599) (nil syntax-table (1) 3587 . 3588) (3591 . 3592) (nil syntax-table nil 3597 . 3598) (nil syntax-table (1) 3587 . 3588) (3590 . 3591) (nil syntax-table nil 3596 . 3597) (nil syntax-table (1) 3587 . 3588) (3589 . 3590) (nil syntax-table nil 3595 . 3596) (nil syntax-table (1) 3587 . 3588) (3588 . 3589) (nil syntax-table nil 3594 . 3595) (nil syntax-table (1) 3587 . 3588) (3587 . 3588)) nil (25192 14330 16804 296000) 0 nil])
([nil nil ((3596 . 3597) (nil syntax-table nil 3602 . 3603) (nil syntax-table (1) 3587 . 3588)) nil (25192 14330 16802 397000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face font-lock-string-face)) . -3596) (undo-tree-id149 . -1) (nil syntax-table nil 3603 . 3604) (nil syntax-table (1) 3587 . 3588)) nil (25192 14330 16801 203000) 0 nil])
([nil nil ((3596 . 3598) (nil syntax-table nil 3602 . 3603) (nil syntax-table (1) 3587 . 3588)) nil (25192 14330 16793 241000) 0 nil])
([nil nil ((3598 . 3599)) nil (25192 14330 16792 713000) 0 nil])
([nil nil ((3599 . 3600)) nil (25192 14330 16792 401000) 0 nil])
([nil nil ((3600 . 3601)) nil (25192 14330 16792 120000) 0 nil])
([nil nil ((3601 . 3605)) nil (25192 14330 16791 648000) 0 nil])
([nil nil ((3605 . 3606)) nil (25192 14330 16788 84000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -1258) (undo-tree-id151 . -1) 1259 (t 25192 14330 38210 900000)) nil (25192 14611 871797 675000) 0 nil])
([nil nil ((1258 . 1260)) nil (25192 14611 871761 787000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 1275) (t 25192 14611 893049 800000)) nil (25192 14626 553448 823000) 0 nil])
([nil nil ((1275 . 1276)) nil (25192 14626 553448 310000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -1275) (undo-tree-id152 . -1) 1276) nil (25192 14626 553447 504000) 0 nil])
([nil nil ((1275 . 1276)) nil (25192 14626 553436 991000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 1065) (t 25192 14626 576108 300000)) nil (25192 14659 546539 108000) 0 nil])
([nil nil ((1065 . 1066)) nil (25192 14659 546538 611000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 1081) (#("1" 0 1 (fontified t)) . 1081)) nil (25192 14659 546537 714000) 0 nil])
([nil nil ((1081 . 1083)) nil (25192 14659 546534 175000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -1065) (undo-tree-id153 . -1) 1066 (t 25192 14659 569057 900000)) nil (25192 14913 892656 580000) 0 nil])
([nil nil ((1065 . 1066)) nil (25192 14913 892646 253000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 2192) (t 25192 14913 914096 900000)) nil (25192 14970 529273 917000) 0 nil])
([nil nil ((#("if(rand()/double(RAND_MAX) < (1.0-2.0*q[j])){opponent = 0;}
	      else
		{
		  if(rand()/double(RAND_MAX) < 0.5){opponent = 1;}
		  else{opponent = 2;}		  
		}
	      agent = rand()%3;
	      state = eval_state(agent , opponent);
	      opponent = opponent_move(state, p[i] , q[j]);
	      agent = GET_ACTION(Q[state[0]][state[1]],epsilon);
	      new_state = eval_state(agent,opponent);
	      R = get_R(new_state);
	      Q[state[0]][state[1]][agent] = Q[state[0]][state[1]][agent] + alpha * (R - Q[state[0]][state[1]][agent]);" 0 2 (fontified t face font-lock-keyword-face) 2 10 (fontified t) 10 16 (fontified t face font-lock-type-face) 16 67 (fontified t) 67 71 (fontified t face font-lock-keyword-face) 71 80 (fontified t) 80 82 (fontified t face font-lock-keyword-face) 82 90 (fontified t) 90 96 (fontified t face font-lock-type-face) 96 133 (fontified t) 133 137 (fontified t face font-lock-keyword-face) 137 530 (fontified t)) . 1610) (undo-tree-id154 . -530) (undo-tree-id155 . -530) (undo-tree-id156 . -418) (undo-tree-id157 . -530) 2140) nil (25192 14970 529272 764000) 0 nil])
([nil nil ((1539 . 1543)) nil (25192 14970 529262 174000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2072 . 2073) (nil fontified nil 1680 . 2073) (nil fontified nil 1676 . 1680) (nil fontified nil 1639 . 1676) (nil fontified nil 1633 . 1639) (nil fontified nil 1625 . 1633) (nil fontified nil 1623 . 1625) (nil fontified nil 1614 . 1623) (nil fontified nil 1610 . 1614) (nil fontified nil 1559 . 1610) (nil fontified nil 1553 . 1559) (nil fontified nil 1545 . 1553) (nil fontified nil 1544 . 1545) (nil fontified nil 1543 . 1544) (1543 . 2073)) nil (25192 14970 529258 242000) 0 nil])
([nil nil ((#("
	      game_number = 1;
	      while(game_number < 00)
		{" 0 1 (fontified t) 1 25 (fontified t) 25 32 (fontified t) 32 37 (fontified t face font-lock-keyword-face) 37 52 (fontified t) 52 56 (fontified t) 56 59 (fontified t)) . -2144) (undo-tree-id171 . -59) (undo-tree-id172 . -59) (undo-tree-id173 . -56) 2203 (t 25192 14970 554674 700000)) nil (25192 14987 131589 558000) 0 nil])
([nil nil ((2471 . 2478) (#("		  " 0 4 (fontified t)) . 2471) (2449 . 2456) (#("		  " 0 4 (fontified t)) . 2449) (2336 . 2343) (#("		  " 0 4 (fontified t)) . 2336) (2307 . 2314) (#("		  " 0 4 (fontified t)) . 2307) (2258 . 2265) (#("		  " 0 4 (fontified t)) . 2258) (2199 . 2206) (#("		  " 0 4 (fontified t)) . 2199) (2145 . 2152) (#("		  " 0 4 (fontified t)) . 2145) 2477) nil (25192 14987 131586 977000) 0 nil])
([nil nil ((#("	}" 0 2 (fontified t)) . 2498) (undo-tree-id170 . -2)) nil (25192 14987 131585 654000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2498) (#("	" 0 1 (fontified t)) . 2498) (#("
" 0 1 (fontified t)) . 2498)) nil (25192 14987 131584 562000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2500) (undo-tree-id163 . -1) (#(" " 0 1 (fontified t)) . -2501) (undo-tree-id164 . -1) (#(" " 0 1 (fontified t)) . -2502) (undo-tree-id165 . -1) (#(" " 0 1 (fontified t)) . -2503) (undo-tree-id166 . -1) (#(" " 0 1 (fontified nil)) . -2504) (undo-tree-id167 . -1) (#("	" 0 1 (fontified nil)) . 2505) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (2497 . 2505) 2498) nil (25192 14987 131583 76000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2496) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#(" " 0 1 (fontified t)) . -2497) (undo-tree-id160 . -1) (#(" " 0 1 (fontified t)) . -2498) (undo-tree-id161 . -1) (#(" " 0 1 (fontified t)) . -2499) (undo-tree-id162 . -1) 2500) nil (25192 14987 131576 171000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2138) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#(" " 0 1 (fontified t)) . -2139) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#(" " 0 1 (fontified t)) . -2140) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (#(" " 0 1 (fontified t)) . -2141) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#(" " 0 1 (fontified t)) . -2142) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#(" " 0 1 (fontified t)) . -2143) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) 2144 (t 25192 14987 155191 100000)) nil (25192 14993 572143 808000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2136) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#(" " 0 1 (fontified t)) . -2137) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#(" " 0 1 (fontified t)) . -2138) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (#(" " 0 1 (fontified t)) . -2139) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#(" " 0 1 (fontified t)) . -2140) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#(" " 0 1 (fontified t)) . -2141) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#(" " 0 1 (fontified t)) . -2142) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#(" " 0 1 (fontified t)) . -2143) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#(" " 0 1 (fontified nil)) . -2144) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (#("	" 0 1 (fontified nil)) . 2145) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (2137 . 2145) 2138) nil (25192 14993 572111 521000) 0 nil])
([nil nil ((2106 . 2108) (t 25192 14993 594931 300000)) nil (25192 15023 378006 979000) 0 nil])
([nil nil ((2074 . 2081) (#("	  " 0 3 (c-is-sws t c-in-sws t fontified nil)) . 2074) (2108 . 2109)) nil (25192 15023 378005 574000) 0 nil])
([nil nil ((2103 . 2104)) nil (25192 15023 378001 195000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2084) (undo-tree-id242 . -1) 2085 (t 25192 15023 403339 700000)) nil (25192 15035 552798 434000) 0 nil])
([nil nil ((2137 . 2139) (#("	    " 0 5 (fontified t)) . 2137) 2143) nil (25192 15035 552796 354000) 0 nil])
([nil nil ((2477 . 2479) (#("	    " 0 5 (fontified t)) . 2477) (2449 . 2453) (#("	      " 0 7 (fontified t)) . 2449) (2430 . 2434) (#("	      " 0 7 (fontified t)) . 2430) (2320 . 2324) (#("	      " 0 7 (fontified t)) . 2320) (2294 . 2298) (#("	      " 0 7 (fontified t)) . 2294) (2248 . 2252) (#("	      " 0 7 (fontified t)) . 2248) (2192 . 2196) (#("	      " 0 7 (fontified t)) . 2192) (2141 . 2145) (#("	      " 0 7 (fontified t)) . 2141) (undo-tree-id240 . -6) (undo-tree-id241 . -6) 2504) nil (25192 15035 552792 297000) 0 nil])
([nil nil ((2477 . 2482) (#("		" 0 2 (fontified t)) . 2477) (2446 . 2453) (#("		  " 0 4 (fontified t)) . 2446) (2424 . 2431) (#("		  " 0 4 (fontified t)) . 2424) (2311 . 2318) (#("		  " 0 4 (fontified t)) . 2311) (2282 . 2289) (#("		  " 0 4 (fontified t)) . 2282) (2233 . 2240) (#("		  " 0 4 (fontified t)) . 2233) (2174 . 2181) (#("		  " 0 4 (fontified t)) . 2174) (2120 . 2127) (#("		  " 0 4 (fontified t)) . 2120) (2113 . 2118) (#("		" 0 2 (fontified t)) . 2113) (2054 . 2057) (#("	      " 0 7 (fontified t)) . 2054) (1945 . 1948) (#("	      " 0 7 (fontified t)) . 1945) (1920 . 1923) (#("	      " 0 7 (fontified t)) . 1920) (1877 . 1880) (#("	      " 0 7 (fontified t)) . 1877) (1823 . 1826) (#("	      " 0 7 (fontified t)) . 1823) (1774 . 1777) (#("	      " 0 7 (fontified t)) . 1774) (1733 . 1736) (#("	      " 0 7 (fontified t)) . 1733) (1712 . 1715) (#("	      " 0 7 (fontified t)) . 1712) (1705 . 1710) (#("		" 0 2 (fontified t)) . 1705) (1674 . 1681) (#("		  " 0 4 (fontified t)) . 1674) (1618 . 1625) (#("		  " 0 4 (fontified t)) . 1618) (1611 . 1616) (#("		" 0 2 (fontified t)) . 1611) (1603 . 1606) (#("	      " 0 7 (fontified t)) . 1603) 1540 (t 25192 15035 579104 700000)) nil (25192 15043 192516 328000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1258) (undo-tree-id243 . -1) 1259 (t 25192 15043 217544 200000)) nil (25192 15124 300372 30000) 0 nil])
([nil nil ((1258 . 1259)) nil (25192 15124 300361 697000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -1275) (undo-tree-id244 . -1) 1276 (t 25192 15124 321991 500000)) nil (25192 15131 171891 95000) 0 nil])
([nil nil ((1275 . 1277)) nil (25192 15131 171880 844000) 0 nil])
([nil nil ((1205 . 1206) (t 25192 15131 193780 800000)) nil (25192 15138 10245 107000) 0 nil])
([nil nil ((1188 . 1189) (t 25192 15138 30030 700000)) nil (25192 15185 805423 706000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 1260) (t 25192 15185 830594 800000)) nil (25192 15220 530919 534000) 0 nil])
([nil nil ((1260 . 1262)) nil (25192 15220 530916 419000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -1065) (undo-tree-id246 . -1) 1066 (t 25192 15220 551634 200000)) nil (25192 15307 195111 59000) 0 nil])
([nil nil ((1065 . 1067)) nil (25192 15307 195109 584000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1082) (undo-tree-id245 . -1) 1083) nil (25192 15307 195108 681000) 0 nil])
([nil nil ((1082 . 1083)) nil (25192 15307 195098 905000) 0 nil])
([nil nil ((1205 . 1206) (t 25192 15307 216456 200000)) nil (25192 18151 545743 825000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1208) (#("0" 0 1 (fontified t)) . 1208)) nil (25192 18151 545742 797000) 0 nil])
([nil nil ((1208 . 1209)) nil (25192 18151 545738 918000) 0 nil])
([nil nil ((2854 . 2855) (t 25192 18151 570686 100000)) nil (25192 18167 735114 251000) 0 nil])
([nil nil ((2856 . 2858)) nil (25192 18167 735109 907000) 0 nil])
([nil nil ((3151 . 3152) (t 25192 18167 762162 300000)) nil (25192 18183 652731 808000) 0 nil])
([nil nil ((3153 . 3155)) nil (25192 18183 652728 533000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face font-lock-string-face)) . 1042) (#("o" 0 1 (fontified t face font-lock-string-face)) . 1042) (#("l" 0 1 (fontified t face font-lock-string-face)) . 1042) (t 25192 18183 673153 300000)) nil (25192 18200 477531 436000) 0 nil])
([nil nil ((1042 . 1055)) nil (25192 18200 477527 455000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("e" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("y" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("a" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("l" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("p" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("_" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("m" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("o" 0 1 (face font-lock-string-face fontified nil)) . 1042) (#("d" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("n" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("a" 0 1 (face font-lock-string-face fontified t)) . 1042) (#("r" 0 1 (face font-lock-string-face fontified t)) . 1042) (t 25192 18200 497742 200000)) nil (25203 38297 467753 336000) 0 nil])
([nil nil ((1042 . 1045)) nil (25203 38297 467749 599000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . -1042) (undo-tree-id0 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -1043) (undo-tree-id1 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -1044) (undo-tree-id2 . -1) 1045 (t 25203 38297 489849 400000)) nil (25203 38306 861555 453000) 0 nil])
([nil nil ((1042 . 1048)) nil (25203 38306 861536 279000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1208) (t 25203 38306 883659 900000)) nil (25203 38368 793894 807000) 0 nil])
([nil nil ((1208 . 1209)) nil (25203 38368 793894 191000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1209)) nil (25203 38368 793893 457000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1210) (undo-tree-id3 . -1) 1211) nil (25203 38368 793892 70000) 0 nil])
([nil nil ((1210 . 1211)) nil (25203 38368 793882 151000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 2856) (#("1" 0 1 (fontified t)) . 2856) (t 25203 38368 816612 600000)) nil (25203 38397 998852 262000) 0 nil])
([nil nil ((2856 . 2857)) nil (25203 38397 998851 489000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 3152)) nil (25203 38397 998848 166000) 0 nil])
([nil nil ((4522 . 4523) (t 25203 38398 21426 700000)) nil (25215 46031 296918 504000) 0 nil])
([nil nil ((4523 . 4526)) nil (25215 46031 296917 694000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . -4525) (undo-tree-id0 . -1) 4526) nil (25215 46031 296916 801000) 0 nil])
([nil nil ((4525 . 4533)) nil (25215 46031 296900 739000) 0 nil])
([nil nil ((5154 . 5155) (t 25215 46031 320279 900000)) nil (25215 46054 909970 382000) 0 nil])
([nil nil ((5155 . 5157)) nil (25215 46054 909969 956000) 0 nil])
([nil nil ((5157 . 5166)) nil (25215 46054 909969 183000) 0 nil])
([nil nil ((5428 . 5429) (#(" x" 0 2 (fontified nil)) . -5428) (5428 . 5430) (#("else" 0 4 (fontified nil face font-lock-keyword-face)) . 5428) (undo-tree-id1 . -4) (5424 . 5428) 5428) nil (25215 46054 909968 306000) 0 nil])
([nil nil ((5429 . 5431)) nil (25215 46054 909959 921000) 0 nil])
([nil nil ((5431 . 5436)) nil (25215 46054 909957 193000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . 5479) (#("*" 0 1 (fontified t)) . 5479) (#("0" 0 1 (fontified t)) . 5479) (#("." 0 1 (fontified t)) . 5479) (#("2" 0 1 (fontified t)) . 5479) (#("-" 0 1 (fontified t)) . 5479) (#("0" 0 1 (fontified t)) . 5479) (#("." 0 1 (fontified t)) . 5479) (#("1" 0 1 (fontified t)) . 5479) (t 25215 46054 931110 300000)) nil (25215 46077 501339 487000) 0 nil])
([nil nil ((5479 . 5483)) nil (25215 46077 501338 589000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -5479) (undo-tree-id2 . -1) (#("." 0 1 (fontified t)) . -5480) (undo-tree-id3 . -1) (#("3" 0 1 (fontified t)) . -5481) (undo-tree-id4 . -1) (#("3" 0 1 (fontified t)) . -5482) (undo-tree-id5 . -1) 5483) nil (25215 46077 501337 755000) 0 nil])
([nil nil ((5479 . 5482)) nil (25215 46077 501329 250000) 0 nil])
([nil nil ((5482 . 5483)) nil (25215 46077 501328 793000) 0 nil])
([nil nil ((5483 . 5486)) nil (25215 46077 501326 29000) 0 nil])
([nil nil ((5514 . 5515) (#(" x" 0 2 (fontified nil)) . -5514) (5514 . 5516) (#("else" 0 4 (fontified nil face font-lock-keyword-face)) . 5514) (undo-tree-id17 . -4) (5510 . 5514) 5514 (t 25215 46077 521413 100000)) nil (25215 46113 993758 566000) 0 nil])
([nil nil ((5515 . 5518)) nil (25215 46113 993756 841000) 0 nil])
([nil nil ((5518 . 5520)) nil (25215 46113 993756 213000) 0 nil])
([nil nil ((#("if(rand()/double(RAND_MAX) < 0.5){opponent = 1;}" 0 2 (fontified t face font-lock-keyword-face) 2 10 (fontified t) 10 16 (fontified t face font-lock-type-face) 16 48 (fontified t)) . 5527) (undo-tree-id16 . -48)) nil (25215 46113 993755 715000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 5514) (undo-tree-id9 . -1) (undo-tree-id10 . 1) (undo-tree-id11 . 1) (undo-tree-id12 . -1) (#("(" 0 1 (fontified t)) . 5514) (undo-tree-id13 . -1) (undo-tree-id14 . 1) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t)) . 5514) (#("f" 0 1 (fontified t)) . 5514) (#("i" 0 1 (fontified t)) . 5514) (#(" " 0 1 (fontified t)) . 5514)) nil (25215 46113 993754 217000) 0 nil])
([nil nil ((5514 . 5515) (#(" x" 0 2 (fontified nil)) . -5514) (5514 . 5516) (#("else" 0 4 (fontified nil face font-lock-keyword-face)) . 5514) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (5510 . 5514) 5514) nil (25215 46113 993749 228000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5562 . 5563) (nil fontified nil 5531 . 5563) (nil fontified nil 5525 . 5531) (nil fontified nil 5517 . 5525) (nil fontified nil 5515 . 5517) (5515 . 5563)) nil (25215 46113 993737 656000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -5542) (undo-tree-id18 . -1) 5543 (t 25215 46114 15102 900000)) nil (25215 46128 281226 801000) 0 nil])
([nil nil ((5542 . 5543)) nil (25215 46128 281218 197000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 5543) (#("." 0 1 (fontified t)) . 5543) (#("0" 0 1 (fontified t)) . 5543) (#(" " 0 1 (fontified t)) . 5543)) nil (25215 46128 281217 97000) 0 nil])
([nil nil ((5543 . 5545)) nil (25215 46128 281215 997000) 0 nil])
([nil nil ((5544 . 5547)) nil (25215 46128 281215 315000) 0 nil])
([nil nil ((5547 . 5548)) nil (25215 46128 281214 397000) 0 nil])
([nil nil ((5548 . 5551)) nil (25215 46128 281210 327000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5571) (t 25215 46128 309110 900000)) nil (25215 46141 474039 240000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -5570) (undo-tree-id22 . -1) 5571) nil (25215 46141 474038 556000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -5576) (undo-tree-id20 . -1) (#("	" 0 1 (fontified nil)) . 5577) (undo-tree-id21 . -1) (5569 . 5577) 5570) nil (25215 46141 474037 106000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5576) (#(" " 0 1 (fontified t)) . 5576) (#("	" 0 1 (fontified t)) . 5576) (#("
" 0 1 (fontified t)) . 5576) (#(" " 0 1 (fontified t)) . 5576) (#(" " 0 1 (fontified t)) . 5576) (#("	" 0 1 (fontified t)) . 5576)) nil (25215 46141 474034 554000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5575) (undo-tree-id19 . -1) 5576) nil (25215 46141 474033 120000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5594) (#("}" 0 1 (fontified t)) . 5594) (#("	" 0 1 (fontified t)) . 5594) (#("
" 0 1 (fontified t)) . 5594)) nil (25215 46141 474025 334000) 0 nil])
([nil current ((5594 . 5595)) nil (25215 46141 474021 417000) 0 nil])
nil
